android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat:
    android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl IMPL -> IMPL
    int FEEDBACK_ALL_MASK -> FEEDBACK_ALL_MASK
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String feedbackTypeToString(int) -> feedbackTypeToString
    java.lang.String flagToString(int) -> flagToString
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoIcsImpl -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoIcsImpl:
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoStubImpl -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoStubImpl:
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl:
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs:
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
android.support.v4.app.ActivityCompat -> android.support.v4.app.ActivityCompat:
    boolean invalidateOptionsMenu(android.app.Activity) -> invalidateOptionsMenu
android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.ActivityCompatHoneycomb:
    void invalidateOptionsMenu(android.app.Activity) -> invalidateOptionsMenu
    void dump(android.app.Activity,java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.app.BackStackRecord -> android.support.v4.app.BackStackRecord:
    java.lang.String TAG -> TAG
    android.support.v4.app.FragmentManagerImpl mManager -> mManager
    int OP_NULL -> OP_NULL
    int OP_ADD -> OP_ADD
    int OP_REPLACE -> OP_REPLACE
    int OP_REMOVE -> OP_REMOVE
    int OP_HIDE -> OP_HIDE
    int OP_SHOW -> OP_SHOW
    int OP_DETACH -> OP_DETACH
    int OP_ATTACH -> OP_ATTACH
    android.support.v4.app.BackStackRecord$Op mHead -> mHead
    android.support.v4.app.BackStackRecord$Op mTail -> mTail
    int mNumOp -> mNumOp
    int mEnterAnim -> mEnterAnim
    int mExitAnim -> mExitAnim
    int mPopEnterAnim -> mPopEnterAnim
    int mPopExitAnim -> mPopExitAnim
    int mTransition -> mTransition
    int mTransitionStyle -> mTransitionStyle
    boolean mAddToBackStack -> mAddToBackStack
    boolean mAllowAddToBackStack -> mAllowAddToBackStack
    java.lang.String mName -> mName
    boolean mCommitted -> mCommitted
    int mIndex -> mIndex
    int mBreadCrumbTitleRes -> mBreadCrumbTitleRes
    java.lang.CharSequence mBreadCrumbTitleText -> mBreadCrumbTitleText
    int mBreadCrumbShortTitleRes -> mBreadCrumbShortTitleRes
    java.lang.CharSequence mBreadCrumbShortTitleText -> mBreadCrumbShortTitleText
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> dump
    int getId() -> getId
    int getBreadCrumbTitleRes() -> getBreadCrumbTitleRes
    int getBreadCrumbShortTitleRes() -> getBreadCrumbShortTitleRes
    java.lang.CharSequence getBreadCrumbTitle() -> getBreadCrumbTitle
    java.lang.CharSequence getBreadCrumbShortTitle() -> getBreadCrumbShortTitle
    void addOp(android.support.v4.app.BackStackRecord$Op) -> addOp
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> add
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> doAddOp
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> replace
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> replace
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> remove
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> hide
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> show
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> detach
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> attach
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setTransition(int) -> setTransition
    android.support.v4.app.FragmentTransaction setTransitionStyle(int) -> setTransitionStyle
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> addToBackStack
    boolean isAddToBackStackAllowed() -> isAddToBackStackAllowed
    android.support.v4.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(int) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(int) -> setBreadCrumbShortTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence) -> setBreadCrumbShortTitle
    void bumpBackStackNesting(int) -> bumpBackStackNesting
    int commit() -> commit
    int commitAllowingStateLoss() -> commitAllowingStateLoss
    int commitInternal(boolean) -> commitInternal
    void run() -> run
    void popFromBackStack(boolean) -> popFromBackStack
    java.lang.String getName() -> getName
    int getTransition() -> getTransition
    int getTransitionStyle() -> getTransitionStyle
    boolean isEmpty() -> isEmpty
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.BackStackRecord$Op:
    android.support.v4.app.BackStackRecord$Op next -> next
    android.support.v4.app.BackStackRecord$Op prev -> prev
    int cmd -> cmd
    android.support.v4.app.Fragment fragment -> fragment
    int enterAnim -> enterAnim
    int exitAnim -> exitAnim
    int popEnterAnim -> popEnterAnim
    int popExitAnim -> popExitAnim
    java.util.ArrayList removed -> removed
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> mOps
    int mTransition -> mTransition
    int mTransitionStyle -> mTransitionStyle
    java.lang.String mName -> mName
    int mIndex -> mIndex
    int mBreadCrumbTitleRes -> mBreadCrumbTitleRes
    java.lang.CharSequence mBreadCrumbTitleText -> mBreadCrumbTitleText
    int mBreadCrumbShortTitleRes -> mBreadCrumbShortTitleRes
    java.lang.CharSequence mBreadCrumbShortTitleText -> mBreadCrumbShortTitleText
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> instantiate
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.BackStackState$1:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.BackStackState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.DialogFragment -> android.support.v4.app.DialogFragment:
    int STYLE_NORMAL -> STYLE_NORMAL
    int STYLE_NO_TITLE -> STYLE_NO_TITLE
    int STYLE_NO_FRAME -> STYLE_NO_FRAME
    int STYLE_NO_INPUT -> STYLE_NO_INPUT
    java.lang.String SAVED_DIALOG_STATE_TAG -> SAVED_DIALOG_STATE_TAG
    java.lang.String SAVED_STYLE -> SAVED_STYLE
    java.lang.String SAVED_THEME -> SAVED_THEME
    java.lang.String SAVED_CANCELABLE -> SAVED_CANCELABLE
    java.lang.String SAVED_SHOWS_DIALOG -> SAVED_SHOWS_DIALOG
    java.lang.String SAVED_BACK_STACK_ID -> SAVED_BACK_STACK_ID
    int mStyle -> mStyle
    int mTheme -> mTheme
    boolean mCancelable -> mCancelable
    boolean mShowsDialog -> mShowsDialog
    int mBackStackId -> mBackStackId
    android.app.Dialog mDialog -> mDialog
    boolean mViewDestroyed -> mViewDestroyed
    boolean mDismissed -> mDismissed
    boolean mShownByMe -> mShownByMe
    void setStyle(int,int) -> setStyle
    void show(android.support.v4.app.FragmentManager,java.lang.String) -> show
    int show(android.support.v4.app.FragmentTransaction,java.lang.String) -> show
    void dismiss() -> dismiss
    void dismissAllowingStateLoss() -> dismissAllowingStateLoss
    void dismissInternal(boolean) -> dismissInternal
    android.app.Dialog getDialog() -> getDialog
    int getTheme() -> getTheme
    void setCancelable(boolean) -> setCancelable
    boolean isCancelable() -> isCancelable
    void setShowsDialog(boolean) -> setShowsDialog
    boolean getShowsDialog() -> getShowsDialog
    void onAttach(android.app.Activity) -> onAttach
    void onDetach() -> onDetach
    void onCreate(android.os.Bundle) -> onCreate
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    void onCancel(android.content.DialogInterface) -> onCancel
    void onDismiss(android.content.DialogInterface) -> onDismiss
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onStart() -> onStart
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStop() -> onStop
    void onDestroyView() -> onDestroyView
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    java.util.HashMap sClassMap -> sClassMap
    int INITIALIZING -> INITIALIZING
    int CREATED -> CREATED
    int ACTIVITY_CREATED -> ACTIVITY_CREATED
    int STOPPED -> STOPPED
    int STARTED -> STARTED
    int RESUMED -> RESUMED
    int mState -> mState
    android.view.View mAnimatingAway -> mAnimatingAway
    int mStateAfterAnimating -> mStateAfterAnimating
    android.os.Bundle mSavedFragmentState -> mSavedFragmentState
    android.util.SparseArray mSavedViewState -> mSavedViewState
    int mIndex -> mIndex
    java.lang.String mWho -> mWho
    android.os.Bundle mArguments -> mArguments
    android.support.v4.app.Fragment mTarget -> mTarget
    int mTargetIndex -> mTargetIndex
    int mTargetRequestCode -> mTargetRequestCode
    boolean mAdded -> mAdded
    boolean mRemoving -> mRemoving
    boolean mResumed -> mResumed
    boolean mFromLayout -> mFromLayout
    boolean mInLayout -> mInLayout
    boolean mRestored -> mRestored
    int mBackStackNesting -> mBackStackNesting
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> mChildFragmentManager
    android.support.v4.app.Fragment mParentFragment -> mParentFragment
    int mFragmentId -> mFragmentId
    int mContainerId -> mContainerId
    java.lang.String mTag -> mTag
    boolean mHidden -> mHidden
    boolean mDetached -> mDetached
    boolean mRetainInstance -> mRetainInstance
    boolean mRetaining -> mRetaining
    boolean mHasMenu -> mHasMenu
    boolean mMenuVisible -> mMenuVisible
    boolean mCalled -> mCalled
    int mNextAnim -> mNextAnim
    android.view.ViewGroup mContainer -> mContainer
    android.view.View mView -> mView
    android.view.View mInnerView -> mInnerView
    boolean mDeferStart -> mDeferStart
    boolean mUserVisibleHint -> mUserVisibleHint
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> mLoaderManager
    boolean mLoadersStarted -> mLoadersStarted
    boolean mCheckedForLoaderManager -> mCheckedForLoaderManager
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> instantiate
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
    void restoreViewState(android.os.Bundle) -> restoreViewState
    void setIndex(int,android.support.v4.app.Fragment) -> setIndex
    boolean isInBackStack() -> isInBackStack
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int getId() -> getId
    java.lang.String getTag() -> getTag
    void setArguments(android.os.Bundle) -> setArguments
    android.os.Bundle getArguments() -> getArguments
    void setInitialSavedState(android.support.v4.app.Fragment$SavedState) -> setInitialSavedState
    void setTargetFragment(android.support.v4.app.Fragment,int) -> setTargetFragment
    android.support.v4.app.Fragment getTargetFragment() -> getTargetFragment
    int getTargetRequestCode() -> getTargetRequestCode
    android.support.v4.app.FragmentActivity getActivity() -> getActivity
    android.content.res.Resources getResources() -> getResources
    java.lang.CharSequence getText(int) -> getText
    java.lang.String getString(int) -> getString
    java.lang.String getString(int,java.lang.Object[]) -> getString
    android.support.v4.app.FragmentManager getFragmentManager() -> getFragmentManager
    android.support.v4.app.FragmentManager getChildFragmentManager() -> getChildFragmentManager
    android.support.v4.app.Fragment getParentFragment() -> getParentFragment
    boolean isAdded() -> isAdded
    boolean isDetached() -> isDetached
    boolean isRemoving() -> isRemoving
    boolean isInLayout() -> isInLayout
    boolean isResumed() -> isResumed
    boolean isVisible() -> isVisible
    boolean isHidden() -> isHidden
    void onHiddenChanged(boolean) -> onHiddenChanged
    void setRetainInstance(boolean) -> setRetainInstance
    boolean getRetainInstance() -> getRetainInstance
    void setHasOptionsMenu(boolean) -> setHasOptionsMenu
    void setMenuVisibility(boolean) -> setMenuVisibility
    void setUserVisibleHint(boolean) -> setUserVisibleHint
    boolean getUserVisibleHint() -> getUserVisibleHint
    android.support.v4.app.LoaderManager getLoaderManager() -> getLoaderManager
    void startActivity(android.content.Intent) -> startActivity
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    void onAttach(android.app.Activity) -> onAttach
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> onCreateAnimation
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    android.view.View getView() -> getView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onViewStateRestored(android.os.Bundle) -> onViewStateRestored
    void onStart() -> onStart
    void onResume() -> onResume
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> onPause
    void onStop() -> onStop
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void initState() -> initState
    void onDetach() -> onDetach
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    void onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    void onDestroyOptionsMenu() -> onDestroyOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onOptionsMenuClosed(android.view.Menu) -> onOptionsMenuClosed
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    void registerForContextMenu(android.view.View) -> registerForContextMenu
    void unregisterForContextMenu(android.view.View) -> unregisterForContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    void instantiateChildFragmentManager() -> instantiateChildFragmentManager
    void performCreate(android.os.Bundle) -> performCreate
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> performCreateView
    void performActivityCreated(android.os.Bundle) -> performActivityCreated
    void performStart() -> performStart
    void performResume() -> performResume
    void performConfigurationChanged(android.content.res.Configuration) -> performConfigurationChanged
    void performLowMemory() -> performLowMemory
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> performCreateOptionsMenu
    boolean performPrepareOptionsMenu(android.view.Menu) -> performPrepareOptionsMenu
    boolean performOptionsItemSelected(android.view.MenuItem) -> performOptionsItemSelected
    boolean performContextItemSelected(android.view.MenuItem) -> performContextItemSelected
    void performOptionsMenuClosed(android.view.Menu) -> performOptionsMenuClosed
    void performSaveInstanceState(android.os.Bundle) -> performSaveInstanceState
    void performPause() -> performPause
    void performStop() -> performStop
    void performReallyStop() -> performReallyStop
    void performDestroyView() -> performDestroyView
    void performDestroy() -> performDestroy
android.support.v4.app.Fragment$1 -> android.support.v4.app.Fragment$1:
    android.support.v4.app.Fragment this$0 -> this$0
    android.view.View findViewById(int) -> findViewById
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.Fragment$InstantiationException:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> mState
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.Fragment$SavedState$1:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.FragmentActivity:
    java.lang.String TAG -> TAG
    java.lang.String FRAGMENTS_TAG -> FRAGMENTS_TAG
    int HONEYCOMB -> HONEYCOMB
    int MSG_REALLY_STOPPED -> MSG_REALLY_STOPPED
    int MSG_RESUME_PENDING -> MSG_RESUME_PENDING
    android.os.Handler mHandler -> mHandler
    android.support.v4.app.FragmentManagerImpl mFragments -> mFragments
    android.support.v4.app.FragmentContainer mContainer -> mContainer
    boolean mCreated -> mCreated
    boolean mResumed -> mResumed
    boolean mStopped -> mStopped
    boolean mReallyStopped -> mReallyStopped
    boolean mRetaining -> mRetaining
    boolean mOptionsMenuInvalidated -> mOptionsMenuInvalidated
    boolean mCheckedForLoaderManager -> mCheckedForLoaderManager
    boolean mLoadersStarted -> mLoadersStarted
    java.util.HashMap mAllLoaderManagers -> mAllLoaderManagers
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> mLoaderManager
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> onResumeFragments
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> onRetainCustomNonConfigurationInstance
    java.lang.Object getLastCustomNonConfigurationInstance() -> getLastCustomNonConfigurationInstance
    void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> viewToString
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> dumpViewHierarchy
    void doReallyStop(boolean) -> doReallyStop
    void onReallyStop() -> onReallyStop
    void onAttachFragment(android.support.v4.app.Fragment) -> onAttachFragment
    android.support.v4.app.FragmentManager getSupportFragmentManager() -> getSupportFragmentManager
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void startActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int) -> startActivityFromFragment
    void invalidateSupportFragment(java.lang.String) -> invalidateSupportFragment
    android.support.v4.app.LoaderManager getSupportLoaderManager() -> getSupportLoaderManager
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> getLoaderManager
android.support.v4.app.FragmentActivity$1 -> android.support.v4.app.FragmentActivity$1:
    android.support.v4.app.FragmentActivity this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.app.FragmentActivity$2 -> android.support.v4.app.FragmentActivity$2:
    android.support.v4.app.FragmentActivity this$0 -> this$0
    android.view.View findViewById(int) -> findViewById
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.FragmentActivity$FragmentTag:
    int[] Fragment -> Fragment
    int Fragment_id -> Fragment_id
    int Fragment_name -> Fragment_name
    int Fragment_tag -> Fragment_tag
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.FragmentActivity$NonConfigurationInstances:
    java.lang.Object activity -> activity
    java.lang.Object custom -> custom
    java.util.HashMap children -> children
    java.util.ArrayList fragments -> fragments
    java.util.HashMap loaders -> loaders
android.support.v4.app.FragmentContainer -> android.support.v4.app.FragmentContainer:
    android.view.View findViewById(int) -> findViewById
android.support.v4.app.FragmentManager -> android.support.v4.app.FragmentManager:
    int POP_BACK_STACK_INCLUSIVE -> POP_BACK_STACK_INCLUSIVE
    android.support.v4.app.FragmentTransaction beginTransaction() -> beginTransaction
    android.support.v4.app.FragmentTransaction openTransaction() -> openTransaction
    boolean executePendingTransactions() -> executePendingTransactions
    android.support.v4.app.Fragment findFragmentById(int) -> findFragmentById
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    void popBackStack() -> popBackStack
    boolean popBackStackImmediate() -> popBackStackImmediate
    void popBackStack(java.lang.String,int) -> popBackStack
    boolean popBackStackImmediate(java.lang.String,int) -> popBackStackImmediate
    void popBackStack(int,int) -> popBackStack
    boolean popBackStackImmediate(int,int) -> popBackStackImmediate
    int getBackStackEntryCount() -> getBackStackEntryCount
    android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> getBackStackEntryAt
    void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> addOnBackStackChangedListener
    void removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> removeOnBackStackChangedListener
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> putFragment
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> saveFragmentInstanceState
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void enableDebugLogging(boolean) -> enableDebugLogging
android.support.v4.app.FragmentManager$BackStackEntry -> android.support.v4.app.FragmentManager$BackStackEntry:
    int getId() -> getId
    java.lang.String getName() -> getName
    int getBreadCrumbTitleRes() -> getBreadCrumbTitleRes
    int getBreadCrumbShortTitleRes() -> getBreadCrumbShortTitleRes
    java.lang.CharSequence getBreadCrumbTitle() -> getBreadCrumbTitle
    java.lang.CharSequence getBreadCrumbShortTitle() -> getBreadCrumbShortTitle
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.FragmentManager$OnBackStackChangedListener:
    void onBackStackChanged() -> onBackStackChanged
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.FragmentManagerImpl:
    boolean DEBUG -> DEBUG
    java.lang.String TAG -> TAG
    boolean HONEYCOMB -> HONEYCOMB
    java.lang.String TARGET_REQUEST_CODE_STATE_TAG -> TARGET_REQUEST_CODE_STATE_TAG
    java.lang.String TARGET_STATE_TAG -> TARGET_STATE_TAG
    java.lang.String VIEW_STATE_TAG -> VIEW_STATE_TAG
    java.lang.String USER_VISIBLE_HINT_TAG -> USER_VISIBLE_HINT_TAG
    java.util.ArrayList mPendingActions -> mPendingActions
    java.lang.Runnable[] mTmpActions -> mTmpActions
    boolean mExecutingActions -> mExecutingActions
    java.util.ArrayList mActive -> mActive
    java.util.ArrayList mAdded -> mAdded
    java.util.ArrayList mAvailIndices -> mAvailIndices
    java.util.ArrayList mBackStack -> mBackStack
    java.util.ArrayList mCreatedMenus -> mCreatedMenus
    java.util.ArrayList mBackStackIndices -> mBackStackIndices
    java.util.ArrayList mAvailBackStackIndices -> mAvailBackStackIndices
    java.util.ArrayList mBackStackChangeListeners -> mBackStackChangeListeners
    int mCurState -> mCurState
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    android.support.v4.app.FragmentContainer mContainer -> mContainer
    android.support.v4.app.Fragment mParent -> mParent
    boolean mNeedMenuInvalidate -> mNeedMenuInvalidate
    boolean mStateSaved -> mStateSaved
    boolean mDestroyed -> mDestroyed
    java.lang.String mNoTransactionsBecause -> mNoTransactionsBecause
    boolean mHavePendingDeferredStart -> mHavePendingDeferredStart
    android.os.Bundle mStateBundle -> mStateBundle
    android.util.SparseArray mStateArray -> mStateArray
    java.lang.Runnable mExecCommit -> mExecCommit
    android.view.animation.Interpolator DECELERATE_QUINT -> DECELERATE_QUINT
    android.view.animation.Interpolator DECELERATE_CUBIC -> DECELERATE_CUBIC
    android.view.animation.Interpolator ACCELERATE_QUINT -> ACCELERATE_QUINT
    android.view.animation.Interpolator ACCELERATE_CUBIC -> ACCELERATE_CUBIC
    int ANIM_DUR -> ANIM_DUR
    int ANIM_STYLE_OPEN_ENTER -> ANIM_STYLE_OPEN_ENTER
    int ANIM_STYLE_OPEN_EXIT -> ANIM_STYLE_OPEN_EXIT
    int ANIM_STYLE_CLOSE_ENTER -> ANIM_STYLE_CLOSE_ENTER
    int ANIM_STYLE_CLOSE_EXIT -> ANIM_STYLE_CLOSE_EXIT
    int ANIM_STYLE_FADE_ENTER -> ANIM_STYLE_FADE_ENTER
    int ANIM_STYLE_FADE_EXIT -> ANIM_STYLE_FADE_EXIT
    void throwException(java.lang.RuntimeException) -> throwException
    android.support.v4.app.FragmentTransaction beginTransaction() -> beginTransaction
    boolean executePendingTransactions() -> executePendingTransactions
    void popBackStack() -> popBackStack
    boolean popBackStackImmediate() -> popBackStackImmediate
    void popBackStack(java.lang.String,int) -> popBackStack
    boolean popBackStackImmediate(java.lang.String,int) -> popBackStackImmediate
    void popBackStack(int,int) -> popBackStack
    boolean popBackStackImmediate(int,int) -> popBackStackImmediate
    int getBackStackEntryCount() -> getBackStackEntryCount
    android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> getBackStackEntryAt
    void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> addOnBackStackChangedListener
    void removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> removeOnBackStackChangedListener
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> putFragment
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> saveFragmentInstanceState
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> makeOpenCloseAnimation
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> makeFadeAnimation
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> loadAnimation
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> performPendingDeferredStart
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> moveToState
    void moveToState(android.support.v4.app.Fragment) -> moveToState
    void moveToState(int,boolean) -> moveToState
    void moveToState(int,int,int,boolean) -> moveToState
    void startPendingDeferredFragments() -> startPendingDeferredFragments
    void makeActive(android.support.v4.app.Fragment) -> makeActive
    void makeInactive(android.support.v4.app.Fragment) -> makeInactive
    void addFragment(android.support.v4.app.Fragment,boolean) -> addFragment
    void removeFragment(android.support.v4.app.Fragment,int,int) -> removeFragment
    void hideFragment(android.support.v4.app.Fragment,int,int) -> hideFragment
    void showFragment(android.support.v4.app.Fragment,int,int) -> showFragment
    void detachFragment(android.support.v4.app.Fragment,int,int) -> detachFragment
    void attachFragment(android.support.v4.app.Fragment,int,int) -> attachFragment
    android.support.v4.app.Fragment findFragmentById(int) -> findFragmentById
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    void checkStateLoss() -> checkStateLoss
    void enqueueAction(java.lang.Runnable,boolean) -> enqueueAction
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> allocBackStackIndex
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> setBackStackIndex
    void freeBackStackIndex(int) -> freeBackStackIndex
    boolean execPendingActions() -> execPendingActions
    void reportBackStackChanged() -> reportBackStackChanged
    void addBackStackState(android.support.v4.app.BackStackRecord) -> addBackStackState
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> popBackStackState
    java.util.ArrayList retainNonConfig() -> retainNonConfig
    void saveFragmentViewState(android.support.v4.app.Fragment) -> saveFragmentViewState
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> saveFragmentBasicState
    android.os.Parcelable saveAllState() -> saveAllState
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> restoreAllState
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> attachActivity
    void noteStateNotSaved() -> noteStateNotSaved
    void dispatchCreate() -> dispatchCreate
    void dispatchActivityCreated() -> dispatchActivityCreated
    void dispatchStart() -> dispatchStart
    void dispatchResume() -> dispatchResume
    void dispatchPause() -> dispatchPause
    void dispatchStop() -> dispatchStop
    void dispatchReallyStop() -> dispatchReallyStop
    void dispatchDestroyView() -> dispatchDestroyView
    void dispatchDestroy() -> dispatchDestroy
    void dispatchConfigurationChanged(android.content.res.Configuration) -> dispatchConfigurationChanged
    void dispatchLowMemory() -> dispatchLowMemory
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> dispatchCreateOptionsMenu
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    boolean dispatchContextItemSelected(android.view.MenuItem) -> dispatchContextItemSelected
    void dispatchOptionsMenuClosed(android.view.Menu) -> dispatchOptionsMenuClosed
    int reverseTransit(int) -> reverseTransit
    int transitToStyleIndex(int,boolean) -> transitToStyleIndex
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.FragmentManagerImpl$1:
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$2 -> android.support.v4.app.FragmentManagerImpl$2:
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$3 -> android.support.v4.app.FragmentManagerImpl$3:
    java.lang.String val$name -> val$name
    int val$flags -> val$flags
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$4 -> android.support.v4.app.FragmentManagerImpl$4:
    int val$id -> val$id
    int val$flags -> val$flags
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.FragmentManagerImpl$5:
    android.support.v4.app.Fragment val$fragment -> val$fragment
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> mActive
    int[] mAdded -> mAdded
    android.support.v4.app.BackStackState[] mBackStack -> mBackStack
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.FragmentManagerState$1:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentManagerState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentPagerAdapter -> android.support.v4.app.FragmentPagerAdapter:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentTransaction mCurTransaction -> mCurTransaction
    android.support.v4.app.Fragment mCurrentPrimaryItem -> mCurrentPrimaryItem
    android.support.v4.app.Fragment getItem(int) -> getItem
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    long getItemId(int) -> getItemId
    java.lang.String makeFragmentName(int,long) -> makeFragmentName
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> mClassName
    int mIndex -> mIndex
    boolean mFromLayout -> mFromLayout
    int mFragmentId -> mFragmentId
    int mContainerId -> mContainerId
    java.lang.String mTag -> mTag
    boolean mRetainInstance -> mRetainInstance
    boolean mDetached -> mDetached
    android.os.Bundle mArguments -> mArguments
    android.os.Bundle mSavedFragmentState -> mSavedFragmentState
    android.support.v4.app.Fragment mInstance -> mInstance
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> instantiate
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.FragmentState$1:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentStatePagerAdapter -> android.support.v4.app.FragmentStatePagerAdapter:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentTransaction mCurTransaction -> mCurTransaction
    java.util.ArrayList mSavedState -> mSavedState
    java.util.ArrayList mFragments -> mFragments
    android.support.v4.app.Fragment mCurrentPrimaryItem -> mCurrentPrimaryItem
    android.support.v4.app.Fragment getItem(int) -> getItem
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> mTabs
    android.widget.FrameLayout mRealTabContent -> mRealTabContent
    android.content.Context mContext -> mContext
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    int mContainerId -> mContainerId
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> mOnTabChangeListener
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> mLastTab
    boolean mAttached -> mAttached
    void initFragmentTabHost(android.content.Context,android.util.AttributeSet) -> initFragmentTabHost
    void setup() -> setup
    void setup(android.content.Context,android.support.v4.app.FragmentManager) -> setup
    void setup(android.content.Context,android.support.v4.app.FragmentManager,int) -> setup
    void ensureContent() -> ensureContent
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void addTab(android.widget.TabHost$TabSpec,java.lang.Class,android.os.Bundle) -> addTab
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> doTabChanged
android.support.v4.app.FragmentTabHost$1 -> android.support.v4.app.FragmentTabHost$1:
android.support.v4.app.FragmentTabHost$DummyTabFactory -> android.support.v4.app.FragmentTabHost$DummyTabFactory:
    android.content.Context mContext -> mContext
    android.view.View createTabContent(java.lang.String) -> createTabContent
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> curTab
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.FragmentTabHost$SavedState$1:
    android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.FragmentTabHost$TabInfo:
    java.lang.String tag -> tag
    java.lang.Class clss -> clss
    android.os.Bundle args -> args
    android.support.v4.app.Fragment fragment -> fragment
    android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> access$102
    android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> access$100
    java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> access$200
    java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> access$300
    android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> access$400
android.support.v4.app.FragmentTransaction -> android.support.v4.app.FragmentTransaction:
    int TRANSIT_ENTER_MASK -> TRANSIT_ENTER_MASK
    int TRANSIT_EXIT_MASK -> TRANSIT_EXIT_MASK
    int TRANSIT_UNSET -> TRANSIT_UNSET
    int TRANSIT_NONE -> TRANSIT_NONE
    int TRANSIT_FRAGMENT_OPEN -> TRANSIT_FRAGMENT_OPEN
    int TRANSIT_FRAGMENT_CLOSE -> TRANSIT_FRAGMENT_CLOSE
    int TRANSIT_FRAGMENT_FADE -> TRANSIT_FRAGMENT_FADE
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> replace
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> replace
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> remove
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> hide
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> show
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> detach
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> attach
    boolean isEmpty() -> isEmpty
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setTransition(int) -> setTransition
    android.support.v4.app.FragmentTransaction setTransitionStyle(int) -> setTransitionStyle
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> addToBackStack
    boolean isAddToBackStackAllowed() -> isAddToBackStackAllowed
    android.support.v4.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(int) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(int) -> setBreadCrumbShortTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence) -> setBreadCrumbShortTitle
    int commit() -> commit
    int commitAllowingStateLoss() -> commitAllowingStateLoss
android.support.v4.app.ListFragment -> android.support.v4.app.ListFragment:
    int INTERNAL_EMPTY_ID -> INTERNAL_EMPTY_ID
    int INTERNAL_PROGRESS_CONTAINER_ID -> INTERNAL_PROGRESS_CONTAINER_ID
    int INTERNAL_LIST_CONTAINER_ID -> INTERNAL_LIST_CONTAINER_ID
    android.os.Handler mHandler -> mHandler
    java.lang.Runnable mRequestFocus -> mRequestFocus
    android.widget.AdapterView$OnItemClickListener mOnClickListener -> mOnClickListener
    android.widget.ListAdapter mAdapter -> mAdapter
    android.widget.ListView mList -> mList
    android.view.View mEmptyView -> mEmptyView
    android.widget.TextView mStandardEmptyView -> mStandardEmptyView
    android.view.View mProgressContainer -> mProgressContainer
    android.view.View mListContainer -> mListContainer
    java.lang.CharSequence mEmptyText -> mEmptyText
    boolean mListShown -> mListShown
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void onDestroyView() -> onDestroyView
    void onListItemClick(android.widget.ListView,android.view.View,int,long) -> onListItemClick
    void setListAdapter(android.widget.ListAdapter) -> setListAdapter
    void setSelection(int) -> setSelection
    int getSelectedItemPosition() -> getSelectedItemPosition
    long getSelectedItemId() -> getSelectedItemId
    android.widget.ListView getListView() -> getListView
    void setEmptyText(java.lang.CharSequence) -> setEmptyText
    void setListShown(boolean) -> setListShown
    void setListShownNoAnimation(boolean) -> setListShownNoAnimation
    void setListShown(boolean,boolean) -> setListShown
    android.widget.ListAdapter getListAdapter() -> getListAdapter
    void ensureList() -> ensureList
android.support.v4.app.ListFragment$1 -> android.support.v4.app.ListFragment$1:
    android.support.v4.app.ListFragment this$0 -> this$0
    void run() -> run
android.support.v4.app.ListFragment$2 -> android.support.v4.app.ListFragment$2:
    android.support.v4.app.ListFragment this$0 -> this$0
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
android.support.v4.app.LoaderManager -> android.support.v4.app.LoaderManager:
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> initLoader
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> restartLoader
    void destroyLoader(int) -> destroyLoader
    android.support.v4.content.Loader getLoader(int) -> getLoader
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void enableDebugLogging(boolean) -> enableDebugLogging
    boolean hasRunningLoaders() -> hasRunningLoaders
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.LoaderManager$LoaderCallbacks:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> onLoadFinished
    void onLoaderReset(android.support.v4.content.Loader) -> onLoaderReset
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.LoaderManagerImpl:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.util.SparseArrayCompat mLoaders -> mLoaders
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> mInactiveLoaders
    java.lang.String mWho -> mWho
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    boolean mStarted -> mStarted
    boolean mRetaining -> mRetaining
    boolean mRetainingStarted -> mRetainingStarted
    boolean mCreatingLoader -> mCreatingLoader
    void updateActivity(android.support.v4.app.FragmentActivity) -> updateActivity
    android.support.v4.app.LoaderManagerImpl$LoaderInfo createLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> createLoader
    android.support.v4.app.LoaderManagerImpl$LoaderInfo createAndInstallLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> createAndInstallLoader
    void installLoader(android.support.v4.app.LoaderManagerImpl$LoaderInfo) -> installLoader
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> initLoader
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> restartLoader
    void destroyLoader(int) -> destroyLoader
    android.support.v4.content.Loader getLoader(int) -> getLoader
    void doStart() -> doStart
    void doStop() -> doStop
    void doRetain() -> doRetain
    void finishRetain() -> finishRetain
    void doReportNextStart() -> doReportNextStart
    void doReportStart() -> doReportStart
    void doDestroy() -> doDestroy
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    boolean hasRunningLoaders() -> hasRunningLoaders
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.LoaderManagerImpl$LoaderInfo:
    int mId -> mId
    android.os.Bundle mArgs -> mArgs
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> mCallbacks
    android.support.v4.content.Loader mLoader -> mLoader
    boolean mHaveData -> mHaveData
    boolean mDeliveredData -> mDeliveredData
    java.lang.Object mData -> mData
    boolean mStarted -> mStarted
    boolean mRetaining -> mRetaining
    boolean mRetainingStarted -> mRetainingStarted
    boolean mReportNextStart -> mReportNextStart
    boolean mDestroyed -> mDestroyed
    boolean mListenerRegistered -> mListenerRegistered
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> mPendingLoader
    android.support.v4.app.LoaderManagerImpl this$0 -> this$0
    void start() -> start
    void retain() -> retain
    void finishRetain() -> finishRetain
    void reportStart() -> reportStart
    void stop() -> stop
    void destroy() -> destroy
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> onLoadComplete
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> callOnLoadFinished
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.app.NavUtils -> android.support.v4.app.NavUtils:
    java.lang.String TAG -> TAG
    java.lang.String PARENT_ACTIVITY -> PARENT_ACTIVITY
    android.support.v4.app.NavUtils$NavUtilsImpl IMPL -> IMPL
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpFromSameTask(android.app.Activity) -> navigateUpFromSameTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    android.content.Intent getParentActivityIntent(android.content.Context,java.lang.Class) -> getParentActivityIntent
    android.content.Intent getParentActivityIntent(android.content.Context,android.content.ComponentName) -> getParentActivityIntent
    java.lang.String getParentActivityName(android.app.Activity) -> getParentActivityName
    java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImpl -> android.support.v4.app.NavUtils$NavUtilsImpl:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImplBase -> android.support.v4.app.NavUtils$NavUtilsImplBase:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImplJB -> android.support.v4.app.NavUtils$NavUtilsImplJB:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    android.content.Intent superGetParentActivityIntent(android.app.Activity) -> superGetParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtilsJB -> android.support.v4.app.NavUtilsJB:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.NoSaveStateFrameLayout:
    android.view.ViewGroup wrap(android.view.View) -> wrap
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.NotificationCompat -> android.support.v4.app.NotificationCompat:
    int FLAG_HIGH_PRIORITY -> FLAG_HIGH_PRIORITY
    int PRIORITY_DEFAULT -> PRIORITY_DEFAULT
    int PRIORITY_LOW -> PRIORITY_LOW
    int PRIORITY_MIN -> PRIORITY_MIN
    int PRIORITY_HIGH -> PRIORITY_HIGH
    int PRIORITY_MAX -> PRIORITY_MAX
    android.support.v4.app.NotificationCompat$NotificationCompatImpl IMPL -> IMPL
    android.support.v4.app.NotificationCompat$NotificationCompatImpl access$000() -> access$000
android.support.v4.app.NotificationCompat$Action -> android.support.v4.app.NotificationCompat$Action:
    int icon -> icon
    java.lang.CharSequence title -> title
    android.app.PendingIntent actionIntent -> actionIntent
android.support.v4.app.NotificationCompat$BigPictureStyle -> android.support.v4.app.NotificationCompat$BigPictureStyle:
    android.graphics.Bitmap mPicture -> mPicture
    android.support.v4.app.NotificationCompat$BigPictureStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$BigPictureStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$BigPictureStyle bigPicture(android.graphics.Bitmap) -> bigPicture
android.support.v4.app.NotificationCompat$BigTextStyle -> android.support.v4.app.NotificationCompat$BigTextStyle:
    java.lang.CharSequence mBigText -> mBigText
    android.support.v4.app.NotificationCompat$BigTextStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$BigTextStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$BigTextStyle bigText(java.lang.CharSequence) -> bigText
android.support.v4.app.NotificationCompat$Builder -> android.support.v4.app.NotificationCompat$Builder:
    android.content.Context mContext -> mContext
    java.lang.CharSequence mContentTitle -> mContentTitle
    java.lang.CharSequence mContentText -> mContentText
    android.app.PendingIntent mContentIntent -> mContentIntent
    android.app.PendingIntent mFullScreenIntent -> mFullScreenIntent
    android.widget.RemoteViews mTickerView -> mTickerView
    android.graphics.Bitmap mLargeIcon -> mLargeIcon
    java.lang.CharSequence mContentInfo -> mContentInfo
    int mNumber -> mNumber
    int mPriority -> mPriority
    boolean mUseChronometer -> mUseChronometer
    android.support.v4.app.NotificationCompat$Style mStyle -> mStyle
    java.lang.CharSequence mSubText -> mSubText
    int mProgressMax -> mProgressMax
    int mProgress -> mProgress
    boolean mProgressIndeterminate -> mProgressIndeterminate
    java.util.ArrayList mActions -> mActions
    android.app.Notification mNotification -> mNotification
    android.support.v4.app.NotificationCompat$Builder setWhen(long) -> setWhen
    android.support.v4.app.NotificationCompat$Builder setUsesChronometer(boolean) -> setUsesChronometer
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int) -> setSmallIcon
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int,int) -> setSmallIcon
    android.support.v4.app.NotificationCompat$Builder setContentTitle(java.lang.CharSequence) -> setContentTitle
    android.support.v4.app.NotificationCompat$Builder setContentText(java.lang.CharSequence) -> setContentText
    android.support.v4.app.NotificationCompat$Builder setSubText(java.lang.CharSequence) -> setSubText
    android.support.v4.app.NotificationCompat$Builder setNumber(int) -> setNumber
    android.support.v4.app.NotificationCompat$Builder setContentInfo(java.lang.CharSequence) -> setContentInfo
    android.support.v4.app.NotificationCompat$Builder setProgress(int,int,boolean) -> setProgress
    android.support.v4.app.NotificationCompat$Builder setContent(android.widget.RemoteViews) -> setContent
    android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent) -> setContentIntent
    android.support.v4.app.NotificationCompat$Builder setDeleteIntent(android.app.PendingIntent) -> setDeleteIntent
    android.support.v4.app.NotificationCompat$Builder setFullScreenIntent(android.app.PendingIntent,boolean) -> setFullScreenIntent
    android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence) -> setTicker
    android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence,android.widget.RemoteViews) -> setTicker
    android.support.v4.app.NotificationCompat$Builder setLargeIcon(android.graphics.Bitmap) -> setLargeIcon
    android.support.v4.app.NotificationCompat$Builder setSound(android.net.Uri) -> setSound
    android.support.v4.app.NotificationCompat$Builder setSound(android.net.Uri,int) -> setSound
    android.support.v4.app.NotificationCompat$Builder setVibrate(long[]) -> setVibrate
    android.support.v4.app.NotificationCompat$Builder setLights(int,int,int) -> setLights
    android.support.v4.app.NotificationCompat$Builder setOngoing(boolean) -> setOngoing
    android.support.v4.app.NotificationCompat$Builder setOnlyAlertOnce(boolean) -> setOnlyAlertOnce
    android.support.v4.app.NotificationCompat$Builder setAutoCancel(boolean) -> setAutoCancel
    android.support.v4.app.NotificationCompat$Builder setDefaults(int) -> setDefaults
    void setFlag(int,boolean) -> setFlag
    android.support.v4.app.NotificationCompat$Builder setPriority(int) -> setPriority
    android.support.v4.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent) -> addAction
    android.support.v4.app.NotificationCompat$Builder setStyle(android.support.v4.app.NotificationCompat$Style) -> setStyle
    android.app.Notification getNotification() -> getNotification
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompat$InboxStyle -> android.support.v4.app.NotificationCompat$InboxStyle:
    java.util.ArrayList mTexts -> mTexts
    android.support.v4.app.NotificationCompat$InboxStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$InboxStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$InboxStyle addLine(java.lang.CharSequence) -> addLine
android.support.v4.app.NotificationCompat$NotificationCompatImpl -> android.support.v4.app.NotificationCompat$NotificationCompatImpl:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplBase -> android.support.v4.app.NotificationCompat$NotificationCompatImplBase:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb -> android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich -> android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean -> android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$Style -> android.support.v4.app.NotificationCompat$Style:
    android.support.v4.app.NotificationCompat$Builder mBuilder -> mBuilder
    java.lang.CharSequence mBigContentTitle -> mBigContentTitle
    java.lang.CharSequence mSummaryText -> mSummaryText
    boolean mSummaryTextSet -> mSummaryTextSet
    void setBuilder(android.support.v4.app.NotificationCompat$Builder) -> setBuilder
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompatHoneycomb -> android.support.v4.app.NotificationCompatHoneycomb:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap) -> add
android.support.v4.app.NotificationCompatIceCreamSandwich -> android.support.v4.app.NotificationCompatIceCreamSandwich:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean) -> add
android.support.v4.app.NotificationCompatJellybean -> android.support.v4.app.NotificationCompatJellybean:
    android.app.Notification$Builder b -> b
    void addAction(int,java.lang.CharSequence,android.app.PendingIntent) -> addAction
    void addBigTextStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,java.lang.CharSequence) -> addBigTextStyle
    void addBigPictureStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,android.graphics.Bitmap) -> addBigPictureStyle
    void addInboxStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,java.util.ArrayList) -> addInboxStyle
    android.app.Notification build() -> build
android.support.v4.app.ServiceCompat -> android.support.v4.app.ServiceCompat:
    int START_STICKY -> START_STICKY
android.support.v4.app.ShareCompat -> android.support.v4.app.ShareCompat:
    java.lang.String EXTRA_CALLING_PACKAGE -> EXTRA_CALLING_PACKAGE
    java.lang.String EXTRA_CALLING_ACTIVITY -> EXTRA_CALLING_ACTIVITY
    android.support.v4.app.ShareCompat$ShareCompatImpl IMPL -> IMPL
    java.lang.String getCallingPackage(android.app.Activity) -> getCallingPackage
    android.content.ComponentName getCallingActivity(android.app.Activity) -> getCallingActivity
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    void configureMenuItem(android.view.Menu,int,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    android.support.v4.app.ShareCompat$ShareCompatImpl access$000() -> access$000
android.support.v4.app.ShareCompat$IntentBuilder -> android.support.v4.app.ShareCompat$IntentBuilder:
    android.app.Activity mActivity -> mActivity
    android.content.Intent mIntent -> mIntent
    java.lang.CharSequence mChooserTitle -> mChooserTitle
    java.util.ArrayList mToAddresses -> mToAddresses
    java.util.ArrayList mCcAddresses -> mCcAddresses
    java.util.ArrayList mBccAddresses -> mBccAddresses
    java.util.ArrayList mStreams -> mStreams
    android.support.v4.app.ShareCompat$IntentBuilder from(android.app.Activity) -> from
    android.content.Intent getIntent() -> getIntent
    android.app.Activity getActivity() -> getActivity
    void combineArrayExtra(java.lang.String,java.util.ArrayList) -> combineArrayExtra
    void combineArrayExtra(java.lang.String,java.lang.String[]) -> combineArrayExtra
    android.content.Intent createChooserIntent() -> createChooserIntent
    void startChooser() -> startChooser
    android.support.v4.app.ShareCompat$IntentBuilder setChooserTitle(java.lang.CharSequence) -> setChooserTitle
    android.support.v4.app.ShareCompat$IntentBuilder setChooserTitle(int) -> setChooserTitle
    android.support.v4.app.ShareCompat$IntentBuilder setType(java.lang.String) -> setType
    android.support.v4.app.ShareCompat$IntentBuilder setText(java.lang.CharSequence) -> setText
    android.support.v4.app.ShareCompat$IntentBuilder setHtmlText(java.lang.String) -> setHtmlText
    android.support.v4.app.ShareCompat$IntentBuilder setStream(android.net.Uri) -> setStream
    android.support.v4.app.ShareCompat$IntentBuilder addStream(android.net.Uri) -> addStream
    android.support.v4.app.ShareCompat$IntentBuilder setEmailTo(java.lang.String[]) -> setEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String) -> addEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String[]) -> addEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder setEmailCc(java.lang.String[]) -> setEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String) -> addEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String[]) -> addEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder setEmailBcc(java.lang.String[]) -> setEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String) -> addEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String[]) -> addEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder setSubject(java.lang.String) -> setSubject
android.support.v4.app.ShareCompat$IntentReader -> android.support.v4.app.ShareCompat$IntentReader:
    java.lang.String TAG -> TAG
    android.app.Activity mActivity -> mActivity
    android.content.Intent mIntent -> mIntent
    java.lang.String mCallingPackage -> mCallingPackage
    android.content.ComponentName mCallingActivity -> mCallingActivity
    java.util.ArrayList mStreams -> mStreams
    android.support.v4.app.ShareCompat$IntentReader from(android.app.Activity) -> from
    boolean isShareIntent() -> isShareIntent
    boolean isSingleShare() -> isSingleShare
    boolean isMultipleShare() -> isMultipleShare
    java.lang.String getType() -> getType
    java.lang.CharSequence getText() -> getText
    java.lang.String getHtmlText() -> getHtmlText
    android.net.Uri getStream() -> getStream
    android.net.Uri getStream(int) -> getStream
    int getStreamCount() -> getStreamCount
    java.lang.String[] getEmailTo() -> getEmailTo
    java.lang.String[] getEmailCc() -> getEmailCc
    java.lang.String[] getEmailBcc() -> getEmailBcc
    java.lang.String getSubject() -> getSubject
    java.lang.String getCallingPackage() -> getCallingPackage
    android.content.ComponentName getCallingActivity() -> getCallingActivity
    android.graphics.drawable.Drawable getCallingActivityIcon() -> getCallingActivityIcon
    android.graphics.drawable.Drawable getCallingApplicationIcon() -> getCallingApplicationIcon
    java.lang.CharSequence getCallingApplicationLabel() -> getCallingApplicationLabel
android.support.v4.app.ShareCompat$ShareCompatImpl -> android.support.v4.app.ShareCompat$ShareCompatImpl:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
android.support.v4.app.ShareCompat$ShareCompatImplBase -> android.support.v4.app.ShareCompat$ShareCompatImplBase:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
    void withinStyle(java.lang.StringBuilder,java.lang.CharSequence,int,int) -> withinStyle
android.support.v4.app.ShareCompat$ShareCompatImplICS -> android.support.v4.app.ShareCompat$ShareCompatImplICS:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    boolean shouldAddChooserIntent(android.view.MenuItem) -> shouldAddChooserIntent
android.support.v4.app.ShareCompat$ShareCompatImplJB -> android.support.v4.app.ShareCompat$ShareCompatImplJB:
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
    boolean shouldAddChooserIntent(android.view.MenuItem) -> shouldAddChooserIntent
android.support.v4.app.ShareCompatICS -> android.support.v4.app.ShareCompatICS:
    java.lang.String HISTORY_FILENAME_PREFIX -> HISTORY_FILENAME_PREFIX
    void configureMenuItem(android.view.MenuItem,android.app.Activity,android.content.Intent) -> configureMenuItem
android.support.v4.app.ShareCompatJB -> android.support.v4.app.ShareCompatJB:
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.SuperNotCalledException:
android.support.v4.app.TaskStackBuilder -> android.support.v4.app.TaskStackBuilder:
    java.lang.String TAG -> TAG
    android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl IMPL -> IMPL
    java.util.ArrayList mIntents -> mIntents
    android.content.Context mSourceContext -> mSourceContext
    android.support.v4.app.TaskStackBuilder create(android.content.Context) -> create
    android.support.v4.app.TaskStackBuilder from(android.content.Context) -> from
    android.support.v4.app.TaskStackBuilder addNextIntent(android.content.Intent) -> addNextIntent
    android.support.v4.app.TaskStackBuilder addNextIntentWithParentStack(android.content.Intent) -> addNextIntentWithParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(android.app.Activity) -> addParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(java.lang.Class) -> addParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(android.content.ComponentName) -> addParentStack
    int getIntentCount() -> getIntentCount
    android.content.Intent getIntent(int) -> getIntent
    android.content.Intent editIntentAt(int) -> editIntentAt
    java.util.Iterator iterator() -> iterator
    void startActivities() -> startActivities
    void startActivities(android.os.Bundle) -> startActivities
    android.app.PendingIntent getPendingIntent(int,int) -> getPendingIntent
    android.app.PendingIntent getPendingIntent(int,int,android.os.Bundle) -> getPendingIntent
    android.content.Intent[] getIntents() -> getIntents
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplJellybean -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplJellybean:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilderHoneycomb -> android.support.v4.app.TaskStackBuilderHoneycomb:
    android.app.PendingIntent getActivitiesPendingIntent(android.content.Context,int,android.content.Intent[],int) -> getActivitiesPendingIntent
android.support.v4.app.TaskStackBuilderJellybean -> android.support.v4.app.TaskStackBuilderJellybean:
    android.app.PendingIntent getActivitiesPendingIntent(android.content.Context,int,android.content.Intent[],int,android.os.Bundle) -> getActivitiesPendingIntent
android.support.v4.content.AsyncTaskLoader -> android.support.v4.content.AsyncTaskLoader:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.content.AsyncTaskLoader$LoadTask mTask -> mTask
    android.support.v4.content.AsyncTaskLoader$LoadTask mCancellingTask -> mCancellingTask
    long mUpdateThrottle -> mUpdateThrottle
    long mLastLoadCompleteTime -> mLastLoadCompleteTime
    android.os.Handler mHandler -> mHandler
    void setUpdateThrottle(long) -> setUpdateThrottle
    void onForceLoad() -> onForceLoad
    boolean cancelLoad() -> cancelLoad
    void onCanceled(java.lang.Object) -> onCanceled
    void executePendingTask() -> executePendingTask
    void dispatchOnCancelled(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> dispatchOnCancelled
    void dispatchOnLoadComplete(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> dispatchOnLoadComplete
    java.lang.Object loadInBackground() -> loadInBackground
    java.lang.Object onLoadInBackground() -> onLoadInBackground
    void waitForLoader() -> waitForLoader
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.content.AsyncTaskLoader$LoadTask -> android.support.v4.content.AsyncTaskLoader$LoadTask:
    java.lang.Object result -> result
    boolean waiting -> waiting
    java.util.concurrent.CountDownLatch done -> done
    android.support.v4.content.AsyncTaskLoader this$0 -> this$0
    java.lang.Object doInBackground(java.lang.Void[]) -> doInBackground
    void onPostExecute(java.lang.Object) -> onPostExecute
    void onCancelled() -> onCancelled
    void run() -> run
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    java.util.concurrent.CountDownLatch access$000(android.support.v4.content.AsyncTaskLoader$LoadTask) -> access$000
android.support.v4.content.ContextCompat -> android.support.v4.content.ContextCompat:
    boolean startActivities(android.content.Context,android.content.Intent[]) -> startActivities
    boolean startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
android.support.v4.content.ContextCompatHoneycomb -> android.support.v4.content.ContextCompatHoneycomb:
    void startActivities(android.content.Context,android.content.Intent[]) -> startActivities
android.support.v4.content.ContextCompatJellybean -> android.support.v4.content.ContextCompatJellybean:
    void startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
android.support.v4.content.CursorLoader -> android.support.v4.content.CursorLoader:
    android.support.v4.content.Loader$ForceLoadContentObserver mObserver -> mObserver
    android.net.Uri mUri -> mUri
    java.lang.String[] mProjection -> mProjection
    java.lang.String mSelection -> mSelection
    java.lang.String[] mSelectionArgs -> mSelectionArgs
    java.lang.String mSortOrder -> mSortOrder
    android.database.Cursor mCursor -> mCursor
    android.database.Cursor loadInBackground() -> loadInBackground
    void registerContentObserver(android.database.Cursor,android.database.ContentObserver) -> registerContentObserver
    void deliverResult(android.database.Cursor) -> deliverResult
    void onStartLoading() -> onStartLoading
    void onStopLoading() -> onStopLoading
    void onCanceled(android.database.Cursor) -> onCanceled
    void onReset() -> onReset
    android.net.Uri getUri() -> getUri
    void setUri(android.net.Uri) -> setUri
    java.lang.String[] getProjection() -> getProjection
    void setProjection(java.lang.String[]) -> setProjection
    java.lang.String getSelection() -> getSelection
    void setSelection(java.lang.String) -> setSelection
    java.lang.String[] getSelectionArgs() -> getSelectionArgs
    void setSelectionArgs(java.lang.String[]) -> setSelectionArgs
    java.lang.String getSortOrder() -> getSortOrder
    void setSortOrder(java.lang.String) -> setSortOrder
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.Object loadInBackground() -> loadInBackground
    void onCanceled(java.lang.Object) -> onCanceled
    void deliverResult(java.lang.Object) -> deliverResult
android.support.v4.content.IntentCompat -> android.support.v4.content.IntentCompat:
    android.support.v4.content.IntentCompat$IntentCompatImpl IMPL -> IMPL
    java.lang.String ACTION_EXTERNAL_APPLICATIONS_AVAILABLE -> ACTION_EXTERNAL_APPLICATIONS_AVAILABLE
    java.lang.String ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE -> ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE
    java.lang.String EXTRA_CHANGED_PACKAGE_LIST -> EXTRA_CHANGED_PACKAGE_LIST
    java.lang.String EXTRA_CHANGED_UID_LIST -> EXTRA_CHANGED_UID_LIST
    java.lang.String EXTRA_HTML_TEXT -> EXTRA_HTML_TEXT
    int FLAG_ACTIVITY_TASK_ON_HOME -> FLAG_ACTIVITY_TASK_ON_HOME
    int FLAG_ACTIVITY_CLEAR_TASK -> FLAG_ACTIVITY_CLEAR_TASK
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImpl -> android.support.v4.content.IntentCompat$IntentCompatImpl:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImplBase -> android.support.v4.content.IntentCompat$IntentCompatImplBase:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImplHC -> android.support.v4.content.IntentCompat$IntentCompatImplHC:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImplIcsMr1 -> android.support.v4.content.IntentCompat$IntentCompatImplIcsMr1:
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
android.support.v4.content.IntentCompatHoneycomb -> android.support.v4.content.IntentCompatHoneycomb:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompatIcsMr1 -> android.support.v4.content.IntentCompatIcsMr1:
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
android.support.v4.content.Loader -> android.support.v4.content.Loader:
    int mId -> mId
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> mListener
    android.content.Context mContext -> mContext
    boolean mStarted -> mStarted
    boolean mAbandoned -> mAbandoned
    boolean mReset -> mReset
    boolean mContentChanged -> mContentChanged
    void deliverResult(java.lang.Object) -> deliverResult
    android.content.Context getContext() -> getContext
    int getId() -> getId
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> registerListener
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> unregisterListener
    boolean isStarted() -> isStarted
    boolean isAbandoned() -> isAbandoned
    boolean isReset() -> isReset
    void startLoading() -> startLoading
    void onStartLoading() -> onStartLoading
    void forceLoad() -> forceLoad
    void onForceLoad() -> onForceLoad
    void stopLoading() -> stopLoading
    void onStopLoading() -> onStopLoading
    void abandon() -> abandon
    void onAbandon() -> onAbandon
    void reset() -> reset
    void onReset() -> onReset
    boolean takeContentChanged() -> takeContentChanged
    void onContentChanged() -> onContentChanged
    java.lang.String dataToString(java.lang.Object) -> dataToString
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.content.Loader$ForceLoadContentObserver -> android.support.v4.content.Loader$ForceLoadContentObserver:
    android.support.v4.content.Loader this$0 -> this$0
    boolean deliverSelfNotifications() -> deliverSelfNotifications
    void onChange(boolean) -> onChange
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.content.Loader$OnLoadCompleteListener:
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> onLoadComplete
android.support.v4.content.LocalBroadcastManager -> android.support.v4.content.LocalBroadcastManager:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.content.Context mAppContext -> mAppContext
    java.util.HashMap mReceivers -> mReceivers
    java.util.HashMap mActions -> mActions
    java.util.ArrayList mPendingBroadcasts -> mPendingBroadcasts
    int MSG_EXEC_PENDING_BROADCASTS -> MSG_EXEC_PENDING_BROADCASTS
    android.os.Handler mHandler -> mHandler
    java.lang.Object mLock -> mLock
    android.support.v4.content.LocalBroadcastManager mInstance -> mInstance
    android.support.v4.content.LocalBroadcastManager getInstance(android.content.Context) -> getInstance
    void registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter) -> registerReceiver
    void unregisterReceiver(android.content.BroadcastReceiver) -> unregisterReceiver
    boolean sendBroadcast(android.content.Intent) -> sendBroadcast
    void sendBroadcastSync(android.content.Intent) -> sendBroadcastSync
    void executePendingBroadcasts() -> executePendingBroadcasts
    void access$000(android.support.v4.content.LocalBroadcastManager) -> access$000
android.support.v4.content.LocalBroadcastManager$1 -> android.support.v4.content.LocalBroadcastManager$1:
    android.support.v4.content.LocalBroadcastManager this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.LocalBroadcastManager$BroadcastRecord -> android.support.v4.content.LocalBroadcastManager$BroadcastRecord:
    android.content.Intent intent -> intent
    java.util.ArrayList receivers -> receivers
android.support.v4.content.LocalBroadcastManager$ReceiverRecord -> android.support.v4.content.LocalBroadcastManager$ReceiverRecord:
    android.content.IntentFilter filter -> filter
    android.content.BroadcastReceiver receiver -> receiver
    boolean broadcasting -> broadcasting
    java.lang.String toString() -> toString
android.support.v4.content.ModernAsyncTask -> android.support.v4.content.ModernAsyncTask:
    java.lang.String LOG_TAG -> LOG_TAG
    int CORE_POOL_SIZE -> CORE_POOL_SIZE
    int MAXIMUM_POOL_SIZE -> MAXIMUM_POOL_SIZE
    int KEEP_ALIVE -> KEEP_ALIVE
    java.util.concurrent.ThreadFactory sThreadFactory -> sThreadFactory
    java.util.concurrent.BlockingQueue sPoolWorkQueue -> sPoolWorkQueue
    java.util.concurrent.Executor THREAD_POOL_EXECUTOR -> THREAD_POOL_EXECUTOR
    int MESSAGE_POST_RESULT -> MESSAGE_POST_RESULT
    int MESSAGE_POST_PROGRESS -> MESSAGE_POST_PROGRESS
    android.support.v4.content.ModernAsyncTask$InternalHandler sHandler -> sHandler
    java.util.concurrent.Executor sDefaultExecutor -> sDefaultExecutor
    android.support.v4.content.ModernAsyncTask$WorkerRunnable mWorker -> mWorker
    java.util.concurrent.FutureTask mFuture -> mFuture
    android.support.v4.content.ModernAsyncTask$Status mStatus -> mStatus
    java.util.concurrent.atomic.AtomicBoolean mTaskInvoked -> mTaskInvoked
    void init() -> init
    void setDefaultExecutor(java.util.concurrent.Executor) -> setDefaultExecutor
    void postResultIfNotInvoked(java.lang.Object) -> postResultIfNotInvoked
    java.lang.Object postResult(java.lang.Object) -> postResult
    android.support.v4.content.ModernAsyncTask$Status getStatus() -> getStatus
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    void onCancelled(java.lang.Object) -> onCancelled
    void onCancelled() -> onCancelled
    boolean isCancelled() -> isCancelled
    boolean cancel(boolean) -> cancel
    java.lang.Object get() -> get
    java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    android.support.v4.content.ModernAsyncTask execute(java.lang.Object[]) -> execute
    android.support.v4.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[]) -> executeOnExecutor
    void execute(java.lang.Runnable) -> execute
    void publishProgress(java.lang.Object[]) -> publishProgress
    void finish(java.lang.Object) -> finish
    java.util.concurrent.atomic.AtomicBoolean access$200(android.support.v4.content.ModernAsyncTask) -> access$200
    java.lang.Object access$300(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> access$300
    void access$400(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> access$400
    void access$500(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> access$500
android.support.v4.content.ModernAsyncTask$1 -> android.support.v4.content.ModernAsyncTask$1:
    java.util.concurrent.atomic.AtomicInteger mCount -> mCount
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
android.support.v4.content.ModernAsyncTask$2 -> android.support.v4.content.ModernAsyncTask$2:
    android.support.v4.content.ModernAsyncTask this$0 -> this$0
    java.lang.Object call() -> call
android.support.v4.content.ModernAsyncTask$3 -> android.support.v4.content.ModernAsyncTask$3:
    android.support.v4.content.ModernAsyncTask this$0 -> this$0
    void done() -> done
android.support.v4.content.ModernAsyncTask$4 -> android.support.v4.content.ModernAsyncTask$4:
    int[] $SwitchMap$android$support$v4$content$ModernAsyncTask$Status -> $SwitchMap$android$support$v4$content$ModernAsyncTask$Status
android.support.v4.content.ModernAsyncTask$AsyncTaskResult -> android.support.v4.content.ModernAsyncTask$AsyncTaskResult:
    android.support.v4.content.ModernAsyncTask mTask -> mTask
    java.lang.Object[] mData -> mData
android.support.v4.content.ModernAsyncTask$InternalHandler -> android.support.v4.content.ModernAsyncTask$InternalHandler:
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.ModernAsyncTask$Status -> android.support.v4.content.ModernAsyncTask$Status:
    android.support.v4.content.ModernAsyncTask$Status PENDING -> PENDING
    android.support.v4.content.ModernAsyncTask$Status RUNNING -> RUNNING
    android.support.v4.content.ModernAsyncTask$Status FINISHED -> FINISHED
    android.support.v4.content.ModernAsyncTask$Status[] $VALUES -> $VALUES
    android.support.v4.content.ModernAsyncTask$Status[] values() -> values
    android.support.v4.content.ModernAsyncTask$Status valueOf(java.lang.String) -> valueOf
android.support.v4.content.ModernAsyncTask$WorkerRunnable -> android.support.v4.content.ModernAsyncTask$WorkerRunnable:
    java.lang.Object[] mParams -> mParams
android.support.v4.content.pm.ActivityInfoCompat -> android.support.v4.content.pm.ActivityInfoCompat:
    int CONFIG_UI_MODE -> CONFIG_UI_MODE
android.support.v4.database.DatabaseUtilsCompat -> android.support.v4.database.DatabaseUtilsCompat:
    java.lang.String concatenateWhere(java.lang.String,java.lang.String) -> concatenateWhere
    java.lang.String[] appendSelectionArgs(java.lang.String[],java.lang.String[]) -> appendSelectionArgs
android.support.v4.net.ConnectivityManagerCompat -> android.support.v4.net.ConnectivityManagerCompat:
    android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl IMPL -> IMPL
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
    android.net.NetworkInfo getNetworkInfoFromBroadcast(android.net.ConnectivityManager,android.content.Intent) -> getNetworkInfoFromBroadcast
android.support.v4.net.ConnectivityManagerCompat$BaseConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$BaseConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$GingerbreadConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$GingerbreadConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$HoneycombMR2ConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$HoneycombMR2ConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$JellyBeanConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$JellyBeanConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompatGingerbread -> android.support.v4.net.ConnectivityManagerCompatGingerbread:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompatHoneycombMR2 -> android.support.v4.net.ConnectivityManagerCompatHoneycombMR2:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompatJellyBean -> android.support.v4.net.ConnectivityManagerCompatJellyBean:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.TrafficStatsCompat -> android.support.v4.net.TrafficStatsCompat:
    android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl IMPL -> IMPL
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompat$1 -> android.support.v4.net.TrafficStatsCompat$1:
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl -> android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl:
    java.lang.ThreadLocal mThreadSocketTags -> mThreadSocketTags
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$1 -> android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$1:
    android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl this$0 -> this$0
    android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags -> android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags:
    int statsTag -> statsTag
android.support.v4.net.TrafficStatsCompat$IcsTrafficStatsCompatImpl -> android.support.v4.net.TrafficStatsCompat$IcsTrafficStatsCompatImpl:
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl -> android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl:
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompatIcs -> android.support.v4.net.TrafficStatsCompatIcs:
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.os.ParcelableCompat -> android.support.v4.os.ParcelableCompat:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> newCreator
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.os.ParcelableCompat$CompatCreator:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> mCallbacks
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.os.ParcelableCompatCreatorCallbacks:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.os.ParcelableCompatCreatorHoneycombMR2:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> mCallbacks
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub:
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> instantiate
android.support.v4.util.AtomicFile -> android.support.v4.util.AtomicFile:
    java.io.File mBaseName -> mBaseName
    java.io.File mBackupName -> mBackupName
    java.io.File getBaseFile() -> getBaseFile
    void delete() -> delete
    java.io.FileOutputStream startWrite() -> startWrite
    void finishWrite(java.io.FileOutputStream) -> finishWrite
    void failWrite(java.io.FileOutputStream) -> failWrite
    java.io.FileInputStream openRead() -> openRead
    byte[] readFully() -> readFully
    boolean sync(java.io.FileOutputStream) -> sync
android.support.v4.util.DebugUtils -> android.support.v4.util.DebugUtils:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> buildShortClassTag
android.support.v4.util.LogWriter -> android.support.v4.util.LogWriter:
    java.lang.String mTag -> mTag
    java.lang.StringBuilder mBuilder -> mBuilder
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> flushBuilder
android.support.v4.util.LongSparseArray -> android.support.v4.util.LongSparseArray:
    java.lang.Object DELETED -> DELETED
    boolean mGarbage -> mGarbage
    long[] mKeys -> mKeys
    java.lang.Object[] mValues -> mValues
    int mSize -> mSize
    android.support.v4.util.LongSparseArray clone() -> clone
    java.lang.Object get(long) -> get
    java.lang.Object get(long,java.lang.Object) -> get
    void delete(long) -> delete
    void remove(long) -> remove
    void removeAt(int) -> removeAt
    void gc() -> gc
    void put(long,java.lang.Object) -> put
    int size() -> size
    long keyAt(int) -> keyAt
    java.lang.Object valueAt(int) -> valueAt
    void setValueAt(int,java.lang.Object) -> setValueAt
    int indexOfKey(long) -> indexOfKey
    int indexOfValue(java.lang.Object) -> indexOfValue
    void clear() -> clear
    void append(long,java.lang.Object) -> append
    int binarySearch(long[],int,int,long) -> binarySearch
    int idealByteArraySize(int) -> idealByteArraySize
    int idealLongArraySize(int) -> idealLongArraySize
    java.lang.Object clone() -> clone
android.support.v4.util.LruCache -> android.support.v4.util.LruCache:
    java.util.LinkedHashMap map -> map
    int size -> size
    int maxSize -> maxSize
    int putCount -> putCount
    int createCount -> createCount
    int evictionCount -> evictionCount
    int hitCount -> hitCount
    int missCount -> missCount
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void trimToSize(int) -> trimToSize
    java.lang.Object remove(java.lang.Object) -> remove
    void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> entryRemoved
    java.lang.Object create(java.lang.Object) -> create
    int safeSizeOf(java.lang.Object,java.lang.Object) -> safeSizeOf
    int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
    void evictAll() -> evictAll
    int size() -> size
    int maxSize() -> maxSize
    int hitCount() -> hitCount
    int missCount() -> missCount
    int createCount() -> createCount
    int putCount() -> putCount
    int evictionCount() -> evictionCount
    java.util.Map snapshot() -> snapshot
    java.lang.String toString() -> toString
android.support.v4.util.SparseArrayCompat -> android.support.v4.util.SparseArrayCompat:
    java.lang.Object DELETED -> DELETED
    boolean mGarbage -> mGarbage
    int[] mKeys -> mKeys
    java.lang.Object[] mValues -> mValues
    int mSize -> mSize
    java.lang.Object get(int) -> get
    java.lang.Object get(int,java.lang.Object) -> get
    void delete(int) -> delete
    void remove(int) -> remove
    void removeAt(int) -> removeAt
    void removeAtRange(int,int) -> removeAtRange
    void gc() -> gc
    void put(int,java.lang.Object) -> put
    int size() -> size
    int keyAt(int) -> keyAt
    java.lang.Object valueAt(int) -> valueAt
    void setValueAt(int,java.lang.Object) -> setValueAt
    int indexOfKey(int) -> indexOfKey
    int indexOfValue(java.lang.Object) -> indexOfValue
    void clear() -> clear
    void append(int,java.lang.Object) -> append
    int binarySearch(int[],int,int,int) -> binarySearch
    int idealByteArraySize(int) -> idealByteArraySize
    int idealIntArraySize(int) -> idealIntArraySize
android.support.v4.util.TimeUtils -> android.support.v4.util.TimeUtils:
    int HUNDRED_DAY_FIELD_LEN -> HUNDRED_DAY_FIELD_LEN
    int SECONDS_PER_MINUTE -> SECONDS_PER_MINUTE
    int SECONDS_PER_HOUR -> SECONDS_PER_HOUR
    int SECONDS_PER_DAY -> SECONDS_PER_DAY
    java.lang.Object sFormatSync -> sFormatSync
    char[] sFormatStr -> sFormatStr
    int accumField(int,int,boolean,int) -> accumField
    int printField(char[],int,char,int,boolean,int) -> printField
    int formatDurationLocked(long,int) -> formatDurationLocked
    void formatDuration(long,java.lang.StringBuilder) -> formatDuration
    void formatDuration(long,java.io.PrintWriter,int) -> formatDuration
    void formatDuration(long,java.io.PrintWriter) -> formatDuration
    void formatDuration(long,long,java.io.PrintWriter) -> formatDuration
android.support.v4.view.AccessibilityDelegateCompat -> android.support.v4.view.AccessibilityDelegateCompat:
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl IMPL -> IMPL
    java.lang.Object DEFAULT_DELEGATE -> DEFAULT_DELEGATE
    java.lang.Object mBridge -> mBridge
    java.lang.Object getBridge() -> getBridge
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> newAccessiblityDelegateDefaultImpl
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1 -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> val$compat
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl this$0 -> this$0
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> newAccessiblityDelegateDefaultImpl
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl:
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1 -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> val$compat
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl this$0 -> this$0
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> newAccessiblityDelegateDefaultImpl
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatIcs -> android.support.v4.view.AccessibilityDelegateCompatIcs:
    java.lang.Object newAccessibilityDelegateDefaultImpl() -> newAccessibilityDelegateDefaultImpl
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge) -> newAccessibilityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$1 -> android.support.v4.view.AccessibilityDelegateCompatIcs$1:
    android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge val$bridge -> val$bridge
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge -> android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatJellyBean -> android.support.v4.view.AccessibilityDelegateCompatJellyBean:
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean) -> newAccessibilityDelegateBridge
    java.lang.Object getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$1 -> android.support.v4.view.AccessibilityDelegateCompatJellyBean$1:
    android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean val$bridge -> val$bridge
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean -> android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.GestureDetectorCompat -> android.support.v4.view.GestureDetectorCompat:
    android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl mImpl -> mImpl
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl:
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase:
    int mTouchSlopSquare -> mTouchSlopSquare
    int mDoubleTapSlopSquare -> mDoubleTapSlopSquare
    int mMinimumFlingVelocity -> mMinimumFlingVelocity
    int mMaximumFlingVelocity -> mMaximumFlingVelocity
    int LONGPRESS_TIMEOUT -> LONGPRESS_TIMEOUT
    int TAP_TIMEOUT -> TAP_TIMEOUT
    int DOUBLE_TAP_TIMEOUT -> DOUBLE_TAP_TIMEOUT
    int SHOW_PRESS -> SHOW_PRESS
    int LONG_PRESS -> LONG_PRESS
    int TAP -> TAP
    android.os.Handler mHandler -> mHandler
    android.view.GestureDetector$OnGestureListener mListener -> mListener
    android.view.GestureDetector$OnDoubleTapListener mDoubleTapListener -> mDoubleTapListener
    boolean mStillDown -> mStillDown
    boolean mInLongPress -> mInLongPress
    boolean mAlwaysInTapRegion -> mAlwaysInTapRegion
    boolean mAlwaysInBiggerTapRegion -> mAlwaysInBiggerTapRegion
    android.view.MotionEvent mCurrentDownEvent -> mCurrentDownEvent
    android.view.MotionEvent mPreviousUpEvent -> mPreviousUpEvent
    boolean mIsDoubleTapping -> mIsDoubleTapping
    float mLastFocusX -> mLastFocusX
    float mLastFocusY -> mLastFocusY
    float mDownFocusX -> mDownFocusX
    float mDownFocusY -> mDownFocusY
    boolean mIsLongpressEnabled -> mIsLongpressEnabled
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    void init(android.content.Context) -> init
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void cancel() -> cancel
    void cancelTaps() -> cancelTaps
    boolean isConsideredDoubleTap(android.view.MotionEvent,android.view.MotionEvent,android.view.MotionEvent) -> isConsideredDoubleTap
    void dispatchLongPress() -> dispatchLongPress
    android.view.MotionEvent access$000(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$000
    android.view.GestureDetector$OnGestureListener access$100(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$100
    void access$200(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$200
    android.view.GestureDetector$OnDoubleTapListener access$300(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$300
    boolean access$400(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$400
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler:
    android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr1 -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr1:
    android.view.GestureDetector mDetector -> mDetector
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
android.support.v4.view.KeyEventCompat -> android.support.v4.view.KeyEventCompat:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> IMPL
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
    boolean hasModifiers(android.view.KeyEvent,int) -> hasModifiers
    boolean hasNoModifiers(android.view.KeyEvent) -> hasNoModifiers
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl:
    int META_MODIFIER_MASK -> META_MODIFIER_MASK
    int META_ALL_MASK -> META_ALL_MASK
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> metaStateFilterDirectionalModifiers
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl:
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$KeyEventVersionImpl:
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.KeyEventCompatHoneycomb:
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
android.support.v4.view.MenuCompat -> android.support.v4.view.MenuCompat:
    android.support.v4.view.MenuCompat$MenuVersionImpl IMPL -> IMPL
    boolean setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
android.support.v4.view.MenuCompat$BaseMenuVersionImpl -> android.support.v4.view.MenuCompat$BaseMenuVersionImpl:
    boolean setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
android.support.v4.view.MenuCompat$HoneycombMenuVersionImpl -> android.support.v4.view.MenuCompat$HoneycombMenuVersionImpl:
    boolean setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
android.support.v4.view.MenuCompat$MenuVersionImpl -> android.support.v4.view.MenuCompat$MenuVersionImpl:
    boolean setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
android.support.v4.view.MenuItemCompat -> android.support.v4.view.MenuItemCompat:
    int SHOW_AS_ACTION_NEVER -> SHOW_AS_ACTION_NEVER
    int SHOW_AS_ACTION_IF_ROOM -> SHOW_AS_ACTION_IF_ROOM
    int SHOW_AS_ACTION_ALWAYS -> SHOW_AS_ACTION_ALWAYS
    int SHOW_AS_ACTION_WITH_TEXT -> SHOW_AS_ACTION_WITH_TEXT
    int SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW -> SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW
    android.support.v4.view.MenuItemCompat$MenuVersionImpl IMPL -> IMPL
    boolean setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl -> android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl:
    boolean setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl -> android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl:
    boolean setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
android.support.v4.view.MenuItemCompat$MenuVersionImpl -> android.support.v4.view.MenuItemCompat$MenuVersionImpl:
    boolean setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
android.support.v4.view.MenuItemCompatHoneycomb -> android.support.v4.view.MenuItemCompatHoneycomb:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
android.support.v4.view.MotionEventCompat -> android.support.v4.view.MotionEventCompat:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> IMPL
    int ACTION_MASK -> ACTION_MASK
    int ACTION_POINTER_DOWN -> ACTION_POINTER_DOWN
    int ACTION_POINTER_UP -> ACTION_POINTER_UP
    int ACTION_HOVER_MOVE -> ACTION_HOVER_MOVE
    int ACTION_SCROLL -> ACTION_SCROLL
    int ACTION_POINTER_INDEX_MASK -> ACTION_POINTER_INDEX_MASK
    int ACTION_POINTER_INDEX_SHIFT -> ACTION_POINTER_INDEX_SHIFT
    int ACTION_HOVER_ENTER -> ACTION_HOVER_ENTER
    int ACTION_HOVER_EXIT -> ACTION_HOVER_EXIT
    int getActionMasked(android.view.MotionEvent) -> getActionMasked
    int getActionIndex(android.view.MotionEvent) -> getActionIndex
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.MotionEventCompat$MotionEventVersionImpl:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.MotionEventCompatEclair:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.PagerAdapter -> android.support.v4.view.PagerAdapter:
    android.database.DataSetObservable mObservable -> mObservable
    int POSITION_UNCHANGED -> POSITION_UNCHANGED
    int POSITION_NONE -> POSITION_NONE
    int getCount() -> getCount
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    void startUpdate(android.view.View) -> startUpdate
    java.lang.Object instantiateItem(android.view.View,int) -> instantiateItem
    void destroyItem(android.view.View,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.View) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    int getItemPosition(java.lang.Object) -> getItemPosition
    void notifyDataSetChanged() -> notifyDataSetChanged
    void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
    java.lang.CharSequence getPageTitle(int) -> getPageTitle
    float getPageWidth(int) -> getPageWidth
android.support.v4.view.PagerTabStrip -> android.support.v4.view.PagerTabStrip:
    java.lang.String TAG -> TAG
    int INDICATOR_HEIGHT -> INDICATOR_HEIGHT
    int MIN_PADDING_BOTTOM -> MIN_PADDING_BOTTOM
    int TAB_PADDING -> TAB_PADDING
    int TAB_SPACING -> TAB_SPACING
    int MIN_TEXT_SPACING -> MIN_TEXT_SPACING
    int FULL_UNDERLINE_HEIGHT -> FULL_UNDERLINE_HEIGHT
    int MIN_STRIP_HEIGHT -> MIN_STRIP_HEIGHT
    int mIndicatorColor -> mIndicatorColor
    int mIndicatorHeight -> mIndicatorHeight
    int mMinPaddingBottom -> mMinPaddingBottom
    int mMinTextSpacing -> mMinTextSpacing
    int mMinStripHeight -> mMinStripHeight
    int mTabPadding -> mTabPadding
    android.graphics.Paint mTabPaint -> mTabPaint
    android.graphics.Rect mTempRect -> mTempRect
    int mTabAlpha -> mTabAlpha
    boolean mDrawFullUnderline -> mDrawFullUnderline
    boolean mDrawFullUnderlineSet -> mDrawFullUnderlineSet
    int mFullUnderlineHeight -> mFullUnderlineHeight
    boolean mIgnoreTap -> mIgnoreTap
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    int mTouchSlop -> mTouchSlop
    void setTabIndicatorColor(int) -> setTabIndicatorColor
    void setTabIndicatorColorResource(int) -> setTabIndicatorColorResource
    int getTabIndicatorColor() -> getTabIndicatorColor
    void setPadding(int,int,int,int) -> setPadding
    void setTextSpacing(int) -> setTextSpacing
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setBackgroundColor(int) -> setBackgroundColor
    void setBackgroundResource(int) -> setBackgroundResource
    void setDrawFullUnderline(boolean) -> setDrawFullUnderline
    boolean getDrawFullUnderline() -> getDrawFullUnderline
    int getMinHeight() -> getMinHeight
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onDraw(android.graphics.Canvas) -> onDraw
    void updateTextPositions(int,float,boolean) -> updateTextPositions
android.support.v4.view.PagerTabStrip$1 -> android.support.v4.view.PagerTabStrip$1:
    android.support.v4.view.PagerTabStrip this$0 -> this$0
    void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTabStrip$2 -> android.support.v4.view.PagerTabStrip$2:
    android.support.v4.view.PagerTabStrip this$0 -> this$0
    void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTitleStrip -> android.support.v4.view.PagerTitleStrip:
    java.lang.String TAG -> TAG
    android.support.v4.view.ViewPager mPager -> mPager
    android.widget.TextView mPrevText -> mPrevText
    android.widget.TextView mCurrText -> mCurrText
    android.widget.TextView mNextText -> mNextText
    int mLastKnownCurrentPage -> mLastKnownCurrentPage
    float mLastKnownPositionOffset -> mLastKnownPositionOffset
    int mScaledTextSpacing -> mScaledTextSpacing
    int mGravity -> mGravity
    boolean mUpdatingText -> mUpdatingText
    boolean mUpdatingPositions -> mUpdatingPositions
    android.support.v4.view.PagerTitleStrip$PageListener mPageListener -> mPageListener
    java.lang.ref.WeakReference mWatchingAdapter -> mWatchingAdapter
    int[] ATTRS -> ATTRS
    int[] TEXT_ATTRS -> TEXT_ATTRS
    float SIDE_ALPHA -> SIDE_ALPHA
    int TEXT_SPACING -> TEXT_SPACING
    int mNonPrimaryAlpha -> mNonPrimaryAlpha
    int mTextColor -> mTextColor
    android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl IMPL -> IMPL
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
    void setTextSpacing(int) -> setTextSpacing
    int getTextSpacing() -> getTextSpacing
    void setNonPrimaryAlpha(float) -> setNonPrimaryAlpha
    void setTextColor(int) -> setTextColor
    void setTextSize(int,float) -> setTextSize
    void setGravity(int) -> setGravity
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void updateText(int,android.support.v4.view.PagerAdapter) -> updateText
    void requestLayout() -> requestLayout
    void updateAdapter(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> updateAdapter
    void updateTextPositions(int,float,boolean) -> updateTextPositions
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    int getMinHeight() -> getMinHeight
    float access$100(android.support.v4.view.PagerTitleStrip) -> access$100
android.support.v4.view.PagerTitleStrip$1 -> android.support.v4.view.PagerTitleStrip$1:
android.support.v4.view.PagerTitleStrip$PageListener -> android.support.v4.view.PagerTitleStrip$PageListener:
    int mScrollState -> mScrollState
    android.support.v4.view.PagerTitleStrip this$0 -> this$0
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> onAdapterChanged
    void onChanged() -> onChanged
android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl -> android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplBase -> android.support.v4.view.PagerTitleStrip$PagerTitleStripImplBase:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplIcs -> android.support.v4.view.PagerTitleStrip$PagerTitleStripImplIcs:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStripIcs -> android.support.v4.view.PagerTitleStripIcs:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStripIcs$SingleLineAllCapsTransform -> android.support.v4.view.PagerTitleStripIcs$SingleLineAllCapsTransform:
    java.lang.String TAG -> TAG
    java.util.Locale mLocale -> mLocale
    java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.VelocityTrackerCompat:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> IMPL
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.VelocityTrackerCompatHoneycomb:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.ViewCompat -> android.support.v4.view.ViewCompat:
    int OVER_SCROLL_ALWAYS -> OVER_SCROLL_ALWAYS
    int OVER_SCROLL_IF_CONTENT_SCROLLS -> OVER_SCROLL_IF_CONTENT_SCROLLS
    int OVER_SCROLL_NEVER -> OVER_SCROLL_NEVER
    long FAKE_FRAME_TIME -> FAKE_FRAME_TIME
    int IMPORTANT_FOR_ACCESSIBILITY_AUTO -> IMPORTANT_FOR_ACCESSIBILITY_AUTO
    int IMPORTANT_FOR_ACCESSIBILITY_YES -> IMPORTANT_FOR_ACCESSIBILITY_YES
    int IMPORTANT_FOR_ACCESSIBILITY_NO -> IMPORTANT_FOR_ACCESSIBILITY_NO
    int LAYER_TYPE_NONE -> LAYER_TYPE_NONE
    int LAYER_TYPE_SOFTWARE -> LAYER_TYPE_SOFTWARE
    int LAYER_TYPE_HARDWARE -> LAYER_TYPE_HARDWARE
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> IMPL
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.ViewCompat$BaseViewCompatImpl:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    long getFrameTime() -> getFrameTime
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.ViewCompat$GBViewCompatImpl:
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.ViewCompat$HCViewCompatImpl:
    long getFrameTime() -> getFrameTime
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.ViewCompat$ICSViewCompatImpl:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.ViewCompat$JBViewCompatImpl:
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl:
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.ViewCompat$ViewCompatImpl:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.ViewCompatGingerbread:
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
android.support.v4.view.ViewCompatHC -> android.support.v4.view.ViewCompatHC:
    long getFrameTime() -> getFrameTime
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
android.support.v4.view.ViewCompatICS -> android.support.v4.view.ViewCompatICS:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    void setAccessibilityDelegate(android.view.View,java.lang.Object) -> setAccessibilityDelegate
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
android.support.v4.view.ViewCompatJB -> android.support.v4.view.ViewCompatJB:
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
android.support.v4.view.ViewCompatJellybeanMr1 -> android.support.v4.view.ViewCompatJellybeanMr1:
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
android.support.v4.view.ViewConfigurationCompat -> android.support.v4.view.ViewConfigurationCompat:
    android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl IMPL -> IMPL
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompatFroyo -> android.support.v4.view.ViewConfigurationCompatFroyo:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewGroupCompat -> android.support.v4.view.ViewGroupCompat:
    android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl IMPL -> IMPL
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
android.support.v4.view.ViewGroupCompatIcs -> android.support.v4.view.ViewGroupCompatIcs:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    boolean USE_CACHE -> USE_CACHE
    int DEFAULT_OFFSCREEN_PAGES -> DEFAULT_OFFSCREEN_PAGES
    int MAX_SETTLE_DURATION -> MAX_SETTLE_DURATION
    int MIN_DISTANCE_FOR_FLING -> MIN_DISTANCE_FOR_FLING
    int DEFAULT_GUTTER_SIZE -> DEFAULT_GUTTER_SIZE
    int MIN_FLING_VELOCITY -> MIN_FLING_VELOCITY
    int[] LAYOUT_ATTRS -> LAYOUT_ATTRS
    java.util.Comparator COMPARATOR -> COMPARATOR
    android.view.animation.Interpolator sInterpolator -> sInterpolator
    java.util.ArrayList mItems -> mItems
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> mTempItem
    android.graphics.Rect mTempRect -> mTempRect
    android.support.v4.view.PagerAdapter mAdapter -> mAdapter
    int mCurItem -> mCurItem
    int mRestoredCurItem -> mRestoredCurItem
    android.os.Parcelable mRestoredAdapterState -> mRestoredAdapterState
    java.lang.ClassLoader mRestoredClassLoader -> mRestoredClassLoader
    android.widget.Scroller mScroller -> mScroller
    android.support.v4.view.ViewPager$PagerObserver mObserver -> mObserver
    int mPageMargin -> mPageMargin
    android.graphics.drawable.Drawable mMarginDrawable -> mMarginDrawable
    int mTopPageBounds -> mTopPageBounds
    int mBottomPageBounds -> mBottomPageBounds
    float mFirstOffset -> mFirstOffset
    float mLastOffset -> mLastOffset
    int mChildWidthMeasureSpec -> mChildWidthMeasureSpec
    int mChildHeightMeasureSpec -> mChildHeightMeasureSpec
    boolean mInLayout -> mInLayout
    boolean mScrollingCacheEnabled -> mScrollingCacheEnabled
    boolean mPopulatePending -> mPopulatePending
    int mOffscreenPageLimit -> mOffscreenPageLimit
    boolean mIsBeingDragged -> mIsBeingDragged
    boolean mIsUnableToDrag -> mIsUnableToDrag
    boolean mIgnoreGutter -> mIgnoreGutter
    int mDefaultGutterSize -> mDefaultGutterSize
    int mGutterSize -> mGutterSize
    int mTouchSlop -> mTouchSlop
    float mLastMotionX -> mLastMotionX
    float mLastMotionY -> mLastMotionY
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    int mActivePointerId -> mActivePointerId
    int INVALID_POINTER -> INVALID_POINTER
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    int mMinimumVelocity -> mMinimumVelocity
    int mMaximumVelocity -> mMaximumVelocity
    int mFlingDistance -> mFlingDistance
    int mCloseEnough -> mCloseEnough
    int CLOSE_ENOUGH -> CLOSE_ENOUGH
    boolean mFakeDragging -> mFakeDragging
    long mFakeDragBeginTime -> mFakeDragBeginTime
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> mLeftEdge
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> mRightEdge
    boolean mFirstLayout -> mFirstLayout
    boolean mNeedCalculatePageOffsets -> mNeedCalculatePageOffsets
    boolean mCalledSuper -> mCalledSuper
    int mDecorChildCount -> mDecorChildCount
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> mOnPageChangeListener
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> mInternalPageChangeListener
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> mAdapterChangeListener
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> mPageTransformer
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> mSetChildrenDrawingOrderEnabled
    int DRAW_ORDER_DEFAULT -> DRAW_ORDER_DEFAULT
    int DRAW_ORDER_FORWARD -> DRAW_ORDER_FORWARD
    int DRAW_ORDER_REVERSE -> DRAW_ORDER_REVERSE
    int mDrawingOrder -> mDrawingOrder
    java.util.ArrayList mDrawingOrderedChildren -> mDrawingOrderedChildren
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> sPositionComparator
    int SCROLL_STATE_IDLE -> SCROLL_STATE_IDLE
    int SCROLL_STATE_DRAGGING -> SCROLL_STATE_DRAGGING
    int SCROLL_STATE_SETTLING -> SCROLL_STATE_SETTLING
    java.lang.Runnable mEndScrollRunnable -> mEndScrollRunnable
    int mScrollState -> mScrollState
    void initViewPager() -> initViewPager
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> setScrollState
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    void removeNonDecorViews() -> removeNonDecorViews
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> setCurrentItem
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> setCurrentItemInternal
    void setCurrentItemInternal(int,boolean,boolean,int) -> setCurrentItemInternal
    void scrollToItem(int,boolean,int,boolean) -> scrollToItem
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void setPageTransformer(boolean,android.support.v4.view.ViewPager$PageTransformer) -> setPageTransformer
    void setChildrenDrawingOrderEnabledCompat(boolean) -> setChildrenDrawingOrderEnabledCompat
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    android.support.v4.view.ViewPager$OnPageChangeListener setInternalPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setInternalPageChangeListener
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    void smoothScrollTo(int,int) -> smoothScrollTo
    void smoothScrollTo(int,int,int) -> smoothScrollTo
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> addNewItem
    void dataSetChanged() -> dataSetChanged
    void populate() -> populate
    void populate(int) -> populate
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> calculatePageOffsets
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> infoForChild
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> infoForAnyChild
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> infoForPosition
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> recomputeScrollPosition
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> pageScrolled
    void onPageScrolled(int,float,int) -> onPageScrolled
    void completeScroll(boolean) -> completeScroll
    boolean isGutterDrag(float,float) -> isGutterDrag
    void enableLayers(boolean) -> enableLayers
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean performDrag(float) -> performDrag
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> infoForCurrentScrollPosition
    int determineTargetPage(int,float,int,int) -> determineTargetPage
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean beginFakeDrag() -> beginFakeDrag
    void endFakeDrag() -> endFakeDrag
    void fakeDragBy(float) -> fakeDragBy
    boolean isFakeDragging() -> isFakeDragging
    void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    void endDrag() -> endDrag
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScroll(android.view.View,boolean,int,int,int) -> canScroll
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> executeKeyEvent
    boolean arrowScroll(int) -> arrowScroll
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> getChildRectInPagerCoordinates
    boolean pageLeft() -> pageLeft
    boolean pageRight() -> pageRight
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void access$000(android.support.v4.view.ViewPager,int) -> access$000
    android.support.v4.view.PagerAdapter access$200(android.support.v4.view.ViewPager) -> access$200
    int access$300(android.support.v4.view.ViewPager) -> access$300
    int[] access$400() -> access$400
android.support.v4.view.ViewPager$1 -> android.support.v4.view.ViewPager$1:
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.ViewPager$2:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$3 -> android.support.v4.view.ViewPager$3:
    android.support.v4.view.ViewPager this$0 -> this$0
    void run() -> run
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.ViewPager$Decor:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.ViewPager$ItemInfo:
    java.lang.Object object -> object
    int position -> position
    boolean scrolling -> scrolling
    float widthFactor -> widthFactor
    float offset -> offset
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.ViewPager$LayoutParams:
    boolean isDecor -> isDecor
    int gravity -> gravity
    float widthFactor -> widthFactor
    boolean needsMeasure -> needsMeasure
    int position -> position
    int childIndex -> childIndex
android.support.v4.view.ViewPager$MyAccessibilityDelegate -> android.support.v4.view.ViewPager$MyAccessibilityDelegate:
    android.support.v4.view.ViewPager this$0 -> this$0
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.ViewPager$OnAdapterChangeListener:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> onAdapterChanged
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.ViewPager$OnPageChangeListener:
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.ViewPager$PageTransformer:
    void transformPage(android.view.View,float) -> transformPage
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.ViewPager$PagerObserver:
    android.support.v4.view.ViewPager this$0 -> this$0
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> position
    android.os.Parcelable adapterState -> adapterState
    java.lang.ClassLoader loader -> loader
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.ViewPager$SavedState$1:
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
android.support.v4.view.ViewPager$SimpleOnPageChangeListener -> android.support.v4.view.ViewPager$SimpleOnPageChangeListener:
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.ViewPager$ViewPositionComparator:
    int compare(android.view.View,android.view.View) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.accessibility.AccessibilityEventCompat -> android.support.v4.view.accessibility.AccessibilityEventCompat:
    android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl IMPL -> IMPL
    int TYPE_VIEW_HOVER_ENTER -> TYPE_VIEW_HOVER_ENTER
    int TYPE_VIEW_HOVER_EXIT -> TYPE_VIEW_HOVER_EXIT
    int TYPE_TOUCH_EXPLORATION_GESTURE_START -> TYPE_TOUCH_EXPLORATION_GESTURE_START
    int TYPE_TOUCH_EXPLORATION_GESTURE_END -> TYPE_TOUCH_EXPLORATION_GESTURE_END
    int TYPE_WINDOW_CONTENT_CHANGED -> TYPE_WINDOW_CONTENT_CHANGED
    int TYPE_VIEW_SCROLLED -> TYPE_VIEW_SCROLLED
    int TYPE_VIEW_TEXT_SELECTION_CHANGED -> TYPE_VIEW_TEXT_SELECTION_CHANGED
    int TYPE_ANNOUNCEMENT -> TYPE_ANNOUNCEMENT
    int TYPE_VIEW_ACCESSIBILITY_FOCUSED -> TYPE_VIEW_ACCESSIBILITY_FOCUSED
    int TYPE_VIEW_ACCESSIBILITY_FOCUS_CLEARED -> TYPE_VIEW_ACCESSIBILITY_FOCUS_CLEARED
    int TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY -> TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY
    int TYPE_GESTURE_DETECTION_START -> TYPE_GESTURE_DETECTION_START
    int TYPE_GESTURE_DETECTION_END -> TYPE_GESTURE_DETECTION_END
    int TYPE_TOUCH_INTERACTION_START -> TYPE_TOUCH_INTERACTION_START
    int TYPE_TOUCH_INTERACTION_END -> TYPE_TOUCH_INTERACTION_END
    int TYPES_ALL_MASK -> TYPES_ALL_MASK
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    void appendRecord(android.view.accessibility.AccessibilityEvent,android.support.v4.view.accessibility.AccessibilityRecordCompat) -> appendRecord
    android.support.v4.view.accessibility.AccessibilityRecordCompat getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventIcsImpl -> android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventIcsImpl:
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventStubImpl -> android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventStubImpl:
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl -> android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl:
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
android.support.v4.view.accessibility.AccessibilityEventCompatIcs -> android.support.v4.view.accessibility.AccessibilityEventCompatIcs:
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
android.support.v4.view.accessibility.AccessibilityManagerCompat -> android.support.v4.view.accessibility.AccessibilityManagerCompat:
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl IMPL -> IMPL
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl access$000() -> access$000
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> newAccessiblityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl$1 -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl$1:
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat val$listener -> val$listener
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl this$0 -> this$0
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerStubImpl -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerStubImpl:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> newAccessiblityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> newAccessiblityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat:
    java.lang.Object mListener -> mListener
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs -> android.support.v4.view.accessibility.AccessibilityManagerCompatIcs:
    java.lang.Object newAccessibilityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge) -> newAccessibilityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,java.lang.Object) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,java.lang.Object) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$1 -> android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$1:
    android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge val$bridge -> val$bridge
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge -> android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge:
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat:
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl IMPL -> IMPL
    java.lang.Object mInfo -> mInfo
    int ACTION_FOCUS -> ACTION_FOCUS
    int ACTION_CLEAR_FOCUS -> ACTION_CLEAR_FOCUS
    int ACTION_SELECT -> ACTION_SELECT
    int ACTION_CLEAR_SELECTION -> ACTION_CLEAR_SELECTION
    int ACTION_CLICK -> ACTION_CLICK
    int ACTION_LONG_CLICK -> ACTION_LONG_CLICK
    int ACTION_ACCESSIBILITY_FOCUS -> ACTION_ACCESSIBILITY_FOCUS
    int ACTION_CLEAR_ACCESSIBILITY_FOCUS -> ACTION_CLEAR_ACCESSIBILITY_FOCUS
    int ACTION_NEXT_AT_MOVEMENT_GRANULARITY -> ACTION_NEXT_AT_MOVEMENT_GRANULARITY
    int ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY -> ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY
    int ACTION_NEXT_HTML_ELEMENT -> ACTION_NEXT_HTML_ELEMENT
    int ACTION_PREVIOUS_HTML_ELEMENT -> ACTION_PREVIOUS_HTML_ELEMENT
    int ACTION_SCROLL_FORWARD -> ACTION_SCROLL_FORWARD
    int ACTION_SCROLL_BACKWARD -> ACTION_SCROLL_BACKWARD
    java.lang.String ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT -> ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT
    java.lang.String ACTION_ARGUMENT_HTML_ELEMENT_STRING -> ACTION_ARGUMENT_HTML_ELEMENT_STRING
    int FOCUS_INPUT -> FOCUS_INPUT
    int FOCUS_ACCESSIBILITY -> FOCUS_ACCESSIBILITY
    int MOVEMENT_GRANULARITY_CHARACTER -> MOVEMENT_GRANULARITY_CHARACTER
    int MOVEMENT_GRANULARITY_WORD -> MOVEMENT_GRANULARITY_WORD
    int MOVEMENT_GRANULARITY_LINE -> MOVEMENT_GRANULARITY_LINE
    int MOVEMENT_GRANULARITY_PARAGRAPH -> MOVEMENT_GRANULARITY_PARAGRAPH
    int MOVEMENT_GRANULARITY_PAGE -> MOVEMENT_GRANULARITY_PAGE
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat wrapNonNullInstance(java.lang.Object) -> wrapNonNullInstance
    java.lang.Object getInfo() -> getInfo
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View) -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View,int) -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain() -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> obtain
    void setSource(android.view.View) -> setSource
    void setSource(android.view.View,int) -> setSource
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> findFocus
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat focusSearch(int) -> focusSearch
    int getWindowId() -> getWindowId
    int getChildCount() -> getChildCount
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getChild(int) -> getChild
    void addChild(android.view.View) -> addChild
    void addChild(android.view.View,int) -> addChild
    int getActions() -> getActions
    void addAction(int) -> addAction
    boolean performAction(int) -> performAction
    boolean performAction(int,android.os.Bundle) -> performAction
    void setMovementGranularities(int) -> setMovementGranularities
    int getMovementGranularities() -> getMovementGranularities
    java.util.List findAccessibilityNodeInfosByText(java.lang.String) -> findAccessibilityNodeInfosByText
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getParent() -> getParent
    void setParent(android.view.View) -> setParent
    void setParent(android.view.View,int) -> setParent
    void getBoundsInParent(android.graphics.Rect) -> getBoundsInParent
    void setBoundsInParent(android.graphics.Rect) -> setBoundsInParent
    void getBoundsInScreen(android.graphics.Rect) -> getBoundsInScreen
    void setBoundsInScreen(android.graphics.Rect) -> setBoundsInScreen
    boolean isCheckable() -> isCheckable
    void setCheckable(boolean) -> setCheckable
    boolean isChecked() -> isChecked
    void setChecked(boolean) -> setChecked
    boolean isFocusable() -> isFocusable
    void setFocusable(boolean) -> setFocusable
    boolean isFocused() -> isFocused
    void setFocused(boolean) -> setFocused
    boolean isVisibleToUser() -> isVisibleToUser
    void setVisibleToUser(boolean) -> setVisibleToUser
    boolean isAccessibilityFocused() -> isAccessibilityFocused
    void setAccessibilityFocused(boolean) -> setAccessibilityFocused
    boolean isSelected() -> isSelected
    void setSelected(boolean) -> setSelected
    boolean isClickable() -> isClickable
    void setClickable(boolean) -> setClickable
    boolean isLongClickable() -> isLongClickable
    void setLongClickable(boolean) -> setLongClickable
    boolean isEnabled() -> isEnabled
    void setEnabled(boolean) -> setEnabled
    boolean isPassword() -> isPassword
    void setPassword(boolean) -> setPassword
    boolean isScrollable() -> isScrollable
    void setScrollable(boolean) -> setScrollable
    java.lang.CharSequence getPackageName() -> getPackageName
    void setPackageName(java.lang.CharSequence) -> setPackageName
    java.lang.CharSequence getClassName() -> getClassName
    void setClassName(java.lang.CharSequence) -> setClassName
    java.lang.CharSequence getText() -> getText
    void setText(java.lang.CharSequence) -> setText
    java.lang.CharSequence getContentDescription() -> getContentDescription
    void setContentDescription(java.lang.CharSequence) -> setContentDescription
    void recycle() -> recycle
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void addAction(java.lang.Object,int) -> addAction
    void addChild(java.lang.Object,android.view.View) -> addChild
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    int getActions(java.lang.Object) -> getActions
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    java.lang.Object getParent(java.lang.Object) -> getParent
    java.lang.CharSequence getText(java.lang.Object) -> getText
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isCheckable(java.lang.Object) -> isCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isClickable(java.lang.Object) -> isClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFocusable(java.lang.Object) -> isFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    boolean isSelected(java.lang.Object) -> isSelected
    boolean performAction(java.lang.Object,int) -> performAction
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setClickable(java.lang.Object,boolean) -> setClickable
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    void setFocused(java.lang.Object,boolean) -> setFocused
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    void setParent(java.lang.Object,android.view.View) -> setParent
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSelected(java.lang.Object,boolean) -> setSelected
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    java.lang.Object obtain(android.view.View,int) -> obtain
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    int getWindowId(java.lang.Object) -> getWindowId
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    void addChild(java.lang.Object,android.view.View) -> addChild
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    int getActions(java.lang.Object) -> getActions
    void addAction(java.lang.Object,int) -> addAction
    boolean performAction(java.lang.Object,int) -> performAction
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    java.lang.Object getParent(java.lang.Object) -> getParent
    void setParent(java.lang.Object,android.view.View,int) -> setParent
    void setParent(java.lang.Object,android.view.View) -> setParent
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    boolean isCheckable(java.lang.Object) -> isCheckable
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    void setChecked(java.lang.Object,boolean) -> setChecked
    boolean isFocusable(java.lang.Object) -> isFocusable
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    void setFocused(java.lang.Object,boolean) -> setFocused
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    void setAccessibilityFocused(java.lang.Object,boolean) -> setAccessibilityFocused
    boolean isSelected(java.lang.Object) -> isSelected
    void setSelected(java.lang.Object,boolean) -> setSelected
    boolean isClickable(java.lang.Object) -> isClickable
    void setClickable(java.lang.Object,boolean) -> setClickable
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    boolean isPassword(java.lang.Object) -> isPassword
    void setPassword(java.lang.Object,boolean) -> setPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    java.lang.CharSequence getText(java.lang.Object) -> getText
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl:
    java.lang.Object obtain(android.view.View,int) -> obtain
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    void setAccessibilityFocused(java.lang.Object,boolean) -> setAccessibilityFocused
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    void setParent(java.lang.Object,android.view.View,int) -> setParent
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(android.view.View,int) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void addAction(java.lang.Object,int) -> addAction
    void addChild(java.lang.Object,android.view.View) -> addChild
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    int getActions(java.lang.Object) -> getActions
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    java.lang.Object getParent(java.lang.Object) -> getParent
    java.lang.CharSequence getText(java.lang.Object) -> getText
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isCheckable(java.lang.Object) -> isCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isClickable(java.lang.Object) -> isClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFocusable(java.lang.Object) -> isFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    boolean isSelected(java.lang.Object) -> isSelected
    boolean performAction(java.lang.Object,int) -> performAction
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setClickable(java.lang.Object,boolean) -> setClickable
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    void setFocused(java.lang.Object,boolean) -> setFocused
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    void setAccessibilityFocused(java.lang.Object,boolean) -> setAccessibilityFocused
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    void setParent(java.lang.Object,android.view.View) -> setParent
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSelected(java.lang.Object,boolean) -> setSelected
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    void recycle(java.lang.Object) -> recycle
    void setParent(java.lang.Object,android.view.View,int) -> setParent
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void addAction(java.lang.Object,int) -> addAction
    void addChild(java.lang.Object,android.view.View) -> addChild
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    int getActions(java.lang.Object) -> getActions
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    java.lang.Object getParent(java.lang.Object) -> getParent
    java.lang.CharSequence getText(java.lang.Object) -> getText
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isCheckable(java.lang.Object) -> isCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isClickable(java.lang.Object) -> isClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFocusable(java.lang.Object) -> isFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    boolean isSelected(java.lang.Object) -> isSelected
    boolean performAction(java.lang.Object,int) -> performAction
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setClickable(java.lang.Object,boolean) -> setClickable
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    void setFocused(java.lang.Object,boolean) -> setFocused
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    void setParent(java.lang.Object,android.view.View) -> setParent
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSelected(java.lang.Object,boolean) -> setSelected
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean:
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    java.lang.Object obtain(android.view.View,int) -> obtain
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    void setParent(java.lang.Object,android.view.View,int) -> setParent
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    void setAccesibilityFocused(java.lang.Object,boolean) -> setAccesibilityFocused
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl IMPL -> IMPL
    java.lang.Object mProvider -> mProvider
    java.lang.Object getProvider() -> getProvider
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> val$compat
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl this$0 -> this$0
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge val$bridge -> val$bridge
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge:
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
android.support.v4.view.accessibility.AccessibilityRecordCompat -> android.support.v4.view.accessibility.AccessibilityRecordCompat:
    android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl IMPL -> IMPL
    java.lang.Object mRecord -> mRecord
    java.lang.Object getImpl() -> getImpl
    android.support.v4.view.accessibility.AccessibilityRecordCompat obtain(android.support.v4.view.accessibility.AccessibilityRecordCompat) -> obtain
    android.support.v4.view.accessibility.AccessibilityRecordCompat obtain() -> obtain
    void setSource(android.view.View) -> setSource
    void setSource(android.view.View,int) -> setSource
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource() -> getSource
    int getWindowId() -> getWindowId
    boolean isChecked() -> isChecked
    void setChecked(boolean) -> setChecked
    boolean isEnabled() -> isEnabled
    void setEnabled(boolean) -> setEnabled
    boolean isPassword() -> isPassword
    void setPassword(boolean) -> setPassword
    boolean isFullScreen() -> isFullScreen
    void setFullScreen(boolean) -> setFullScreen
    boolean isScrollable() -> isScrollable
    void setScrollable(boolean) -> setScrollable
    int getItemCount() -> getItemCount
    void setItemCount(int) -> setItemCount
    int getCurrentItemIndex() -> getCurrentItemIndex
    void setCurrentItemIndex(int) -> setCurrentItemIndex
    int getFromIndex() -> getFromIndex
    void setFromIndex(int) -> setFromIndex
    int getToIndex() -> getToIndex
    void setToIndex(int) -> setToIndex
    int getScrollX() -> getScrollX
    void setScrollX(int) -> setScrollX
    int getScrollY() -> getScrollY
    void setScrollY(int) -> setScrollY
    int getMaxScrollX() -> getMaxScrollX
    void setMaxScrollX(int) -> setMaxScrollX
    int getMaxScrollY() -> getMaxScrollY
    void setMaxScrollY(int) -> setMaxScrollY
    int getAddedCount() -> getAddedCount
    void setAddedCount(int) -> setAddedCount
    int getRemovedCount() -> getRemovedCount
    void setRemovedCount(int) -> setRemovedCount
    java.lang.CharSequence getClassName() -> getClassName
    void setClassName(java.lang.CharSequence) -> setClassName
    java.util.List getText() -> getText
    java.lang.CharSequence getBeforeText() -> getBeforeText
    void setBeforeText(java.lang.CharSequence) -> setBeforeText
    java.lang.CharSequence getContentDescription() -> getContentDescription
    void setContentDescription(java.lang.CharSequence) -> setContentDescription
    android.os.Parcelable getParcelableData() -> getParcelableData
    void setParcelableData(android.os.Parcelable) -> setParcelableData
    void recycle() -> recycle
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    int getAddedCount(java.lang.Object) -> getAddedCount
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    int getItemCount(java.lang.Object) -> getItemCount
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    int getScrollX(java.lang.Object) -> getScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> getSource
    java.util.List getText(java.lang.Object) -> getText
    int getToIndex(java.lang.Object) -> getToIndex
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void recycle(java.lang.Object) -> recycle
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    void setItemCount(java.lang.Object,int) -> setItemCount
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    void setScrollX(java.lang.Object,int) -> setScrollX
    void setScrollY(java.lang.Object,int) -> setScrollY
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setToIndex(java.lang.Object,int) -> setToIndex
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl:
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> getSource
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    void setChecked(java.lang.Object,boolean) -> setChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    boolean isPassword(java.lang.Object) -> isPassword
    void setPassword(java.lang.Object,boolean) -> setPassword
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    boolean isScrollable(java.lang.Object) -> isScrollable
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    int getItemCount(java.lang.Object) -> getItemCount
    void setItemCount(java.lang.Object,int) -> setItemCount
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    int getToIndex(java.lang.Object) -> getToIndex
    void setToIndex(java.lang.Object,int) -> setToIndex
    int getScrollX(java.lang.Object) -> getScrollX
    void setScrollX(java.lang.Object,int) -> setScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    void setScrollY(java.lang.Object,int) -> setScrollY
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
    int getAddedCount(java.lang.Object) -> getAddedCount
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    java.util.List getText(java.lang.Object) -> getText
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl:
    void setSource(java.lang.Object,android.view.View,int) -> setSource
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    int getAddedCount(java.lang.Object) -> getAddedCount
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    int getItemCount(java.lang.Object) -> getItemCount
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    int getScrollX(java.lang.Object) -> getScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> getSource
    java.util.List getText(java.lang.Object) -> getText
    int getToIndex(java.lang.Object) -> getToIndex
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void recycle(java.lang.Object) -> recycle
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    void setItemCount(java.lang.Object,int) -> setItemCount
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    void setScrollX(java.lang.Object,int) -> setScrollX
    void setScrollY(java.lang.Object,int) -> setScrollY
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    void setToIndex(java.lang.Object,int) -> setToIndex
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs -> android.support.v4.view.accessibility.AccessibilityRecordCompatIcs:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    int getAddedCount(java.lang.Object) -> getAddedCount
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    int getItemCount(java.lang.Object) -> getItemCount
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    int getScrollX(java.lang.Object) -> getScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    java.lang.Object getSource(java.lang.Object) -> getSource
    java.util.List getText(java.lang.Object) -> getText
    int getToIndex(java.lang.Object) -> getToIndex
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void recycle(java.lang.Object) -> recycle
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    void setItemCount(java.lang.Object,int) -> setItemCount
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    void setScrollX(java.lang.Object,int) -> setScrollX
    void setScrollY(java.lang.Object,int) -> setScrollY
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setToIndex(java.lang.Object,int) -> setToIndex
android.support.v4.view.accessibility.AccessibilityRecordCompatIcsMr1 -> android.support.v4.view.accessibility.AccessibilityRecordCompatIcsMr1:
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
android.support.v4.view.accessibility.AccessibilityRecordCompatJellyBean -> android.support.v4.view.accessibility.AccessibilityRecordCompatJellyBean:
    void setSource(java.lang.Object,android.view.View,int) -> setSource
android.support.v4.widget.CursorAdapter -> android.support.v4.widget.CursorAdapter:
    boolean mDataValid -> mDataValid
    boolean mAutoRequery -> mAutoRequery
    android.database.Cursor mCursor -> mCursor
    android.content.Context mContext -> mContext
    int mRowIDColumn -> mRowIDColumn
    android.support.v4.widget.CursorAdapter$ChangeObserver mChangeObserver -> mChangeObserver
    android.database.DataSetObserver mDataSetObserver -> mDataSetObserver
    android.support.v4.widget.CursorFilter mCursorFilter -> mCursorFilter
    android.widget.FilterQueryProvider mFilterQueryProvider -> mFilterQueryProvider
    int FLAG_AUTO_REQUERY -> FLAG_AUTO_REQUERY
    int FLAG_REGISTER_CONTENT_OBSERVER -> FLAG_REGISTER_CONTENT_OBSERVER
    void init(android.content.Context,android.database.Cursor,boolean) -> init
    void init(android.content.Context,android.database.Cursor,int) -> init
    android.database.Cursor getCursor() -> getCursor
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    boolean hasStableIds() -> hasStableIds
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    void changeCursor(android.database.Cursor) -> changeCursor
    android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    android.widget.Filter getFilter() -> getFilter
    android.widget.FilterQueryProvider getFilterQueryProvider() -> getFilterQueryProvider
    void setFilterQueryProvider(android.widget.FilterQueryProvider) -> setFilterQueryProvider
    void onContentChanged() -> onContentChanged
android.support.v4.widget.CursorAdapter$1 -> android.support.v4.widget.CursorAdapter$1:
android.support.v4.widget.CursorAdapter$ChangeObserver -> android.support.v4.widget.CursorAdapter$ChangeObserver:
    android.support.v4.widget.CursorAdapter this$0 -> this$0
    boolean deliverSelfNotifications() -> deliverSelfNotifications
    void onChange(boolean) -> onChange
android.support.v4.widget.CursorAdapter$MyDataSetObserver -> android.support.v4.widget.CursorAdapter$MyDataSetObserver:
    android.support.v4.widget.CursorAdapter this$0 -> this$0
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.widget.CursorFilter -> android.support.v4.widget.CursorFilter:
    android.support.v4.widget.CursorFilter$CursorFilterClient mClient -> mClient
    java.lang.CharSequence convertResultToString(java.lang.Object) -> convertResultToString
    android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence) -> performFiltering
    void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults) -> publishResults
android.support.v4.widget.CursorFilter$CursorFilterClient -> android.support.v4.widget.CursorFilter$CursorFilterClient:
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    android.database.Cursor getCursor() -> getCursor
    void changeCursor(android.database.Cursor) -> changeCursor
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.widget.EdgeEffectCompat:
    java.lang.Object mEdgeEffect -> mEdgeEffect
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> IMPL
    void setSize(int,int) -> setSize
    boolean isFinished() -> isFinished
    void finish() -> finish
    boolean onPull(float) -> onPull
    boolean onRelease() -> onRelease
    boolean onAbsorb(int) -> onAbsorb
    boolean draw(android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.widget.EdgeEffectCompatIcs:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.ResourceCursorAdapter -> android.support.v4.widget.ResourceCursorAdapter:
    int mLayout -> mLayout
    int mDropDownLayout -> mDropDownLayout
    android.view.LayoutInflater mInflater -> mInflater
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    void setViewResource(int) -> setViewResource
    void setDropDownViewResource(int) -> setDropDownViewResource
android.support.v4.widget.ScrollerCompat -> android.support.v4.widget.ScrollerCompat:
    android.widget.Scroller mScroller -> mScroller
    android.support.v4.widget.ScrollerCompat from(android.content.Context) -> from
    boolean isFinished() -> isFinished
    int getDuration() -> getDuration
    int getCurrX() -> getCurrX
    int getCurrY() -> getCurrY
    float getCurrVelocity() -> getCurrVelocity
    boolean computeScrollOffset() -> computeScrollOffset
    void startScroll(int,int,int,int) -> startScroll
    void startScroll(int,int,int,int,int) -> startScroll
    void fling(int,int,int,int,int,int,int,int) -> fling
    void abortAnimation() -> abortAnimation
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs:
    float getCurrVelocity() -> getCurrVelocity
android.support.v4.widget.ScrollerCompatIcs -> android.support.v4.widget.ScrollerCompatIcs:
    float getCurrVelocity(android.widget.Scroller) -> getCurrVelocity
android.support.v4.widget.SearchViewCompat -> android.support.v4.widget.SearchViewCompat:
    android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl IMPL -> IMPL
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
    void setOnQueryTextListener(android.view.View,android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> setOnQueryTextListener
    void setOnCloseListener(android.view.View,android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
    android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl access$000() -> access$000
android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat -> android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat:
    java.lang.Object mListener -> mListener
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat -> android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat:
    java.lang.Object mListener -> mListener
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$1 -> android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$1:
    android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat val$listener -> val$listener
    android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl this$0 -> this$0
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$2 -> android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$2:
    android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat val$listener -> val$listener
    android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl this$0 -> this$0
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompat$SearchViewCompatIcsImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatIcsImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompat$SearchViewCompatStubImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatStubImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompatHoneycomb -> android.support.v4.widget.SearchViewCompatHoneycomb:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompatHoneycomb$1 -> android.support.v4.widget.SearchViewCompatHoneycomb$1:
    android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge val$listener -> val$listener
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompatHoneycomb$2 -> android.support.v4.widget.SearchViewCompatHoneycomb$2:
    android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge val$listener -> val$listener
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge -> android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge:
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge -> android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge:
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompatIcs -> android.support.v4.widget.SearchViewCompatIcs:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
android.support.v4.widget.SearchViewCompatIcs$MySearchView -> android.support.v4.widget.SearchViewCompatIcs$MySearchView:
    void onActionViewCollapsed() -> onActionViewCollapsed
android.support.v4.widget.SimpleCursorAdapter -> android.support.v4.widget.SimpleCursorAdapter:
    int[] mFrom -> mFrom
    int[] mTo -> mTo
    int mStringConversionColumn -> mStringConversionColumn
    android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter mCursorToStringConverter -> mCursorToStringConverter
    android.support.v4.widget.SimpleCursorAdapter$ViewBinder mViewBinder -> mViewBinder
    java.lang.String[] mOriginalFrom -> mOriginalFrom
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    android.support.v4.widget.SimpleCursorAdapter$ViewBinder getViewBinder() -> getViewBinder
    void setViewBinder(android.support.v4.widget.SimpleCursorAdapter$ViewBinder) -> setViewBinder
    void setViewImage(android.widget.ImageView,java.lang.String) -> setViewImage
    void setViewText(android.widget.TextView,java.lang.String) -> setViewText
    int getStringConversionColumn() -> getStringConversionColumn
    void setStringConversionColumn(int) -> setStringConversionColumn
    android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter getCursorToStringConverter() -> getCursorToStringConverter
    void setCursorToStringConverter(android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter) -> setCursorToStringConverter
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    void findColumns(java.lang.String[]) -> findColumns
    android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
    void changeCursorAndColumns(android.database.Cursor,java.lang.String[],int[]) -> changeCursorAndColumns
android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter -> android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter:
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
android.support.v4.widget.SimpleCursorAdapter$ViewBinder -> android.support.v4.widget.SimpleCursorAdapter$ViewBinder:
    boolean setViewValue(android.view.View,android.database.Cursor,int) -> setViewValue
com.baidu.android.common.logging.Log -> com.baidu.android.a.a.a:
    boolean sLogEnabled -> a
    boolean sLog2File -> b
    java.util.logging.Logger sFilelogger -> c
    void i(java.lang.String,java.lang.String) -> a
    void d(java.lang.String,java.lang.String) -> b
    void w(java.lang.String,java.lang.String) -> c
    void e(java.lang.String,java.lang.String) -> d
    void e(java.lang.String,java.lang.Throwable) -> a
    void e(java.lang.String,java.lang.String,java.lang.Throwable) -> a
    java.lang.String getStackTraceString(java.lang.Throwable) -> a
com.baidu.android.common.net.ConnectManager -> com.baidu.android.a.b.a:
    java.lang.String TAG -> a
    java.lang.String mApn -> b
    java.lang.String mProxy -> c
    java.lang.String mPort -> d
    boolean mUseWap -> e
    java.lang.String mNetType -> f
    boolean isNetworkConnected(android.content.Context) -> a
    boolean isWapNetwork() -> a
    java.lang.String getProxy() -> b
    java.lang.String getProxyPort() -> c
    java.lang.String getNetType() -> d
com.baidu.android.common.net.ProxyHttpClient -> com.baidu.android.a.b.b:
    java.lang.String TAG -> a
    java.lang.String mProxy -> b
    java.lang.String mPort -> c
    boolean mUseWap -> d
    java.lang.RuntimeException mLeakedException -> e
    void finalize() -> finalize
    void close() -> a
    org.apache.http.params.HttpParams createHttpParams() -> createHttpParams
com.baidu.android.common.security.AESUtil -> com.baidu.android.a.c.a:
    byte[] encrypt(java.lang.String,java.lang.String,byte[]) -> a
    byte[] decrypt(java.lang.String,java.lang.String,byte[]) -> b
com.baidu.android.common.security.Base64 -> com.baidu.android.a.c.b:
    byte[] MAP -> a
    byte[] decode(byte[]) -> a
    java.lang.String encode(byte[],java.lang.String) -> a
com.baidu.android.common.security.RSAUtil -> com.baidu.android.a.c.c:
    byte[] decryptByPublicKey(byte[],java.lang.String) -> a
com.baidu.android.common.util.CommonParam -> com.baidu.android.a.d.a:
    java.lang.String TAG -> a
    java.lang.String getCUID(android.content.Context) -> a
com.baidu.android.common.util.DeviceId -> com.baidu.android.a.d.b:
    java.lang.String getDeviceID(android.content.Context) -> a
    void checkPermission(android.content.Context,java.lang.String) -> a
    java.lang.String getExternalDeviceId(java.lang.String) -> a
    void setExternalDeviceId(java.lang.String,java.lang.String) -> a
com.baidu.android.common.util.DeviceId$IMEIInfo -> com.baidu.android.a.d.c:
    java.lang.String IMEI -> a
    boolean CAN_READ_AND_WRITE_SYSTEM_SETTINGS -> b
    java.lang.String getIMEI(android.content.Context,java.lang.String) -> a
    com.baidu.android.common.util.DeviceId$IMEIInfo getIMEIInfo(android.content.Context) -> a
com.baidu.android.common.util.Util -> com.baidu.android.a.d.d:
    java.lang.String toMd5(byte[],boolean) -> a
com.baidu.android.pushservice.BasicPushNotificationBuilder -> com.baidu.android.pushservice.BasicPushNotificationBuilder:
    android.app.Notification construct(android.content.Context) -> construct
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
com.baidu.android.pushservice.CustomPushNotificationBuilder -> com.baidu.android.pushservice.CustomPushNotificationBuilder:
    int mLayoutId -> mLayoutId
    int mLayoutIconId -> mLayoutIconId
    int mLayoutTitleId -> mLayoutTitleId
    int mLayoutTextId -> mLayoutTextId
    int mLayoutIconDrawable -> mLayoutIconDrawable
    void setLayoutDrawable(int) -> setLayoutDrawable
    android.app.Notification construct(android.content.Context) -> construct
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
com.baidu.android.pushservice.PushConstants -> com.baidu.android.pushservice.PushConstants:
    java.lang.String EXTRA_PUSH_MESSAGE -> EXTRA_PUSH_MESSAGE
    java.lang.String EXTRA_PUSH_MESSAGE_STRING -> EXTRA_PUSH_MESSAGE_STRING
    java.lang.String ACTION_MESSAGE -> ACTION_MESSAGE
    java.lang.String ACTION_METHOD -> ACTION_METHOD
    java.lang.String ACTION_RECEIVE -> ACTION_RECEIVE
    java.lang.String ACTION_RECEIVER_NOTIFICATION_CLICK -> ACTION_RECEIVER_NOTIFICATION_CLICK
    java.lang.String EXTRA_METHOD -> EXTRA_METHOD
    java.lang.String PACKAGE_NAME -> PACKAGE_NAME
    java.lang.String EXTRA_ERROR_CODE -> EXTRA_ERROR_CODE
    java.lang.String EXTRA_CONTENT -> EXTRA_CONTENT
    java.lang.String EXTRA_TAGS_LIST -> EXTRA_TAGS_LIST
    java.lang.String EXTRA_APP_ID -> EXTRA_APP_ID
    java.lang.String EXTRA_USER_ID -> EXTRA_USER_ID
    java.lang.String EXTRA_APP -> EXTRA_APP
    java.lang.String EXTRA_ACCESS_TOKEN -> EXTRA_ACCESS_TOKEN
    java.lang.String EXTRA_API_KEY -> EXTRA_API_KEY
    java.lang.String EXTRA_BIND_NAME -> EXTRA_BIND_NAME
    java.lang.String EXTRA_BIND_STATUS -> EXTRA_BIND_STATUS
    java.lang.String EXTRA_PUSH_SDK_VERSION -> EXTRA_PUSH_SDK_VERSION
    java.lang.String EXTRA_MSG_KEY -> EXTRA_MSG_KEY
    java.lang.String EXTRA_MSG -> EXTRA_MSG
    java.lang.String EXTRA_CB_URL -> EXTRA_CB_URL
    java.lang.String EXTRA_TIMESTAMP -> EXTRA_TIMESTAMP
    java.lang.String EXTRA_MSGID -> EXTRA_MSGID
    java.lang.String EXTRA_HASHCODE -> EXTRA_HASHCODE
    java.lang.String EXTRA_OPENTYPE -> EXTRA_OPENTYPE
    java.lang.String EXTRA_EXTRA -> EXTRA_EXTRA
    int OPEN_BY_USER -> OPEN_BY_USER
    int OPEN_BY_NOTIFICATION -> OPEN_BY_NOTIFICATION
    int BIND_STATUS_ONLINE -> BIND_STATUS_ONLINE
    int BIND_STATUS_OFFLINE -> BIND_STATUS_OFFLINE
    java.lang.String METHOD_SEND_MSG_TO_SERVER -> METHOD_SEND_MSG_TO_SERVER
    java.lang.String METHOD_SEND_MSG_TO_USER -> METHOD_SEND_MSG_TO_USER
    java.lang.String METHOD_APPSTART -> METHOD_APPSTART
    java.lang.String METHOD_APPSTOP -> METHOD_APPSTOP
    java.lang.String METHOD_SEND -> METHOD_SEND
    java.lang.String METHOD_BIND -> METHOD_BIND
    java.lang.String METHOD_UNBIND -> METHOD_UNBIND
    java.lang.String EXTRA_FETCH_TYPE -> EXTRA_FETCH_TYPE
    java.lang.String EXTRA_FETCH_NUM -> EXTRA_FETCH_NUM
    java.lang.String METHOD_FETCH -> METHOD_FETCH
    java.lang.String METHOD_COUNT -> METHOD_COUNT
    java.lang.String EXTRA_MSG_IDS -> EXTRA_MSG_IDS
    java.lang.String METHOD_DELETE -> METHOD_DELETE
    java.lang.String METHOD_GBIND -> METHOD_GBIND
    java.lang.String EXTRA_GID -> EXTRA_GID
    java.lang.String METHOD_SET_TAGS -> METHOD_SET_TAGS
    java.lang.String METHOD_DEL_TAGS -> METHOD_DEL_TAGS
    java.lang.String EXTRA_TAGS -> EXTRA_TAGS
    java.lang.String EXTRA_NOTIFICATION_TITLE -> EXTRA_NOTIFICATION_TITLE
    java.lang.String EXTRA_NOTIFICATION_CONTENT -> EXTRA_NOTIFICATION_CONTENT
    java.lang.String METHOD_GUNBIND -> METHOD_GUNBIND
    java.lang.String METHOD_GINFO -> METHOD_GINFO
    java.lang.String METHOD_GLIST -> METHOD_GLIST
    java.lang.String METHOD_LISTTAGS -> METHOD_LISTTAGS
    java.lang.String METHOD_FETCHGMSG -> METHOD_FETCHGMSG
    java.lang.String EXTRA_GROUP_FETCH_TYPE -> EXTRA_GROUP_FETCH_TYPE
    java.lang.String EXTRA_GROUP_FETCH_NUM -> EXTRA_GROUP_FETCH_NUM
    java.lang.String METHOD_COUNTGMSG -> METHOD_COUNTGMSG
    java.lang.String METHOD_ONLINE -> METHOD_ONLINE
    int ERROR_SUCCESS -> ERROR_SUCCESS
    int ERROR_NETWORK_ERROR -> ERROR_NETWORK_ERROR
    int ERROR_SERVICE_NOT_AVAILABLE -> ERROR_SERVICE_NOT_AVAILABLE
    int ERROR_SERVICE_NOT_AVAILABLE_TEMP -> ERROR_SERVICE_NOT_AVAILABLE_TEMP
    int ERROR_UNKNOWN -> ERROR_UNKNOWN
    int ERROR_SERVER_INTERNAL_ERROR -> ERROR_SERVER_INTERNAL_ERROR
    int ERROR_METHOD_ERROR -> ERROR_METHOD_ERROR
    int ERROR_PARAMS_ERROR -> ERROR_PARAMS_ERROR
    int ERROR_AUTHENTICATION_FAILED -> ERROR_AUTHENTICATION_FAILED
    int ERROR_QUOTA_USE_UP -> ERROR_QUOTA_USE_UP
    int ERROR_DATA_NOT_FOUND -> ERROR_DATA_NOT_FOUND
    int ERROR_TIME_EXPIRES -> ERROR_TIME_EXPIRES
    int ERROR_CHANNEL_TOKEN_TIMEOUT -> ERROR_CHANNEL_TOKEN_TIMEOUT
    int ERROR_BIND_NOT_EXIST -> ERROR_BIND_NOT_EXIST
    int ERROR_BIND_OVERLOAD -> ERROR_BIND_OVERLOAD
    java.lang.String REG_ERROR_UNKNOWN -> REG_ERROR_UNKNOWN
    int LOGIN_TYPE_API_KEY -> LOGIN_TYPE_API_KEY
    int LOGIN_TYPE_ACCESS_TOKEN -> LOGIN_TYPE_ACCESS_TOKEN
    int LOGIN_TYPE_BDUSS -> LOGIN_TYPE_BDUSS
    int LOGIN_TYPE_UNKNOWN -> LOGIN_TYPE_UNKNOWN
    java.lang.String rsaEncrypt(java.lang.String) -> rsaEncrypt
    android.content.Intent createMethodIntent(android.content.Context) -> createMethodIntent
    void restartPushService(android.content.Context) -> restartPushService
    void startPushService(android.content.Context) -> startPushService
    java.lang.String getErrorMsg(int) -> getErrorMsg
com.baidu.android.pushservice.PushManager -> com.baidu.android.pushservice.PushManager:
    java.lang.String TAG -> TAG
    int INFO_MAX_NUM -> INFO_MAX_NUM
    java.util.HashMap mStatisticsMap -> mStatisticsMap
    void init(android.content.Context,java.lang.String,java.lang.String) -> init
    void init(android.content.Context,java.lang.String) -> init
    void initFromAKSK(android.content.Context,java.lang.String) -> initFromAKSK
    void startWork(android.content.Context,java.lang.String,java.lang.String) -> startWork
    void startWork(android.content.Context,int,java.lang.String) -> startWork
    void stopWork(android.content.Context) -> stopWork
    void resumeWork(android.content.Context) -> resumeWork
    boolean isPushEnabled(android.content.Context) -> isPushEnabled
    void activityStarted(android.app.Activity) -> activityStarted
    void activityStoped(android.app.Activity) -> activityStoped
    void setAccessToken(android.content.Context,java.lang.String) -> setAccessToken
    void setApiKey(android.content.Context,java.lang.String) -> setApiKey
    void setBduss(android.content.Context,java.lang.String) -> setBduss
    void bind(android.content.Context,int) -> bind
    void unbind(android.content.Context) -> unbind
    void fetchMessages(android.content.Context,int,int) -> fetchMessages
    void getMessageCounts(android.content.Context) -> getMessageCounts
    void deleteMessages(android.content.Context,java.lang.String[]) -> deleteMessages
    void sendMsgToServer(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> sendMsgToServer
    void sendMsgToUser(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> sendMsgToUser
    void bindGroup(android.content.Context,java.lang.String) -> bindGroup
    void setTags(android.content.Context,java.util.List) -> setTags
    void listTags(android.content.Context) -> listTags
    void delTags(android.content.Context,java.util.List) -> delTags
    void unbindGroup(android.content.Context,java.lang.String) -> unbindGroup
    void getGroupInfo(android.content.Context,java.lang.String) -> getGroupInfo
    void getGroupList(android.content.Context) -> getGroupList
    void fetchGroupMessages(android.content.Context,java.lang.String,int,int) -> fetchGroupMessages
    void getGroupMessageCounts(android.content.Context,java.lang.String) -> getGroupMessageCounts
    void setDefaultNotificationBuilder(android.content.Context,com.baidu.android.pushservice.PushNotificationBuilder) -> setDefaultNotificationBuilder
    void setNotificationBuilder(android.content.Context,int,com.baidu.android.pushservice.PushNotificationBuilder) -> setNotificationBuilder
    void setMediaNotificationBuilder(android.content.Context,com.baidu.android.pushservice.PushNotificationBuilder) -> setMediaNotificationBuilder
    boolean isConnected(android.content.Context) -> isConnected
    void tryConnect(android.content.Context) -> tryConnect
    android.content.Intent createMethodIntent(android.content.Context) -> createMethodIntent
    void insertAppStartInfo(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String) -> insertAppStartInfo
    void insertAppStopInfo(android.content.Context,java.lang.String,int,java.lang.String) -> insertAppStopInfo
    void enableLbs(android.content.Context) -> enableLbs
    void disableLbs(android.content.Context) -> disableLbs
    boolean isNullContext(android.content.Context) -> isNullContext
com.baidu.android.pushservice.PushNotificationBuilder -> com.baidu.android.pushservice.PushNotificationBuilder:
    int mStatusbarIcon -> mStatusbarIcon
    int mNotificationFlags -> mNotificationFlags
    int mNotificationDefaults -> mNotificationDefaults
    android.net.Uri mNotificationsound -> mNotificationsound
    long[] mVibratePattern -> mVibratePattern
    java.lang.String mNotificationTitle -> mNotificationTitle
    java.lang.String mNotificationText -> mNotificationText
    void setStatusbarIcon(int) -> setStatusbarIcon
    void setNotificationTitle(java.lang.String) -> setNotificationTitle
    void setNotificationText(java.lang.String) -> setNotificationText
    void setNotificationFlags(int) -> setNotificationFlags
    void setNotificationDefaults(int) -> setNotificationDefaults
    void setNotificationSound(android.net.Uri) -> setNotificationSound
    void setNotificationVibrate(long[]) -> setNotificationVibrate
    android.app.Notification construct(android.content.Context) -> construct
com.baidu.android.pushservice.PushSDK -> com.baidu.android.pushservice.PushSDK:
    java.lang.String TAG -> TAG
    com.baidu.android.pushservice.PushSDK mPushSDK -> mPushSDK
    int ALARM_TIMEOUT -> ALARM_TIMEOUT
    int ALARM_TIMEOUT_BAD_NET -> ALARM_TIMEOUT_BAD_NET
    int alarmTimeout -> alarmTimeout
    com.baidu.android.pushservice.e mPushConnection -> mPushConnection
    java.lang.Object mPushConnLock -> mPushConnLock
    android.net.LocalServerSocket mLocalSocket -> mLocalSocket
    java.lang.String LOCAL_SOCKET_ADDRESS -> LOCAL_SOCKET_ADDRESS
    com.baidu.android.pushservice.x mRegistrationService -> mRegistrationService
    java.lang.Boolean mIsAlive -> mIsAlive
    java.lang.Object mIsAlive_lock -> mIsAlive_lock
    android.content.Context mContext -> mContext
    android.os.Handler mHandler -> mHandler
    java.lang.Runnable mStartRunnable -> mStartRunnable
    java.lang.Runnable mRegisterRunnable -> mRegisterRunnable
    java.lang.Runnable mConnectRunnable -> mConnectRunnable
    com.baidu.android.pushservice.PushSDK getInstantce(android.content.Context) -> getInstantce
    boolean initPushSDK() -> initPushSDK
    void destory() -> destory
    com.baidu.android.pushservice.x getRegistrationService() -> getRegistrationService
    boolean handleOnStart(android.content.Intent) -> handleOnStart
    boolean isAlive() -> isAlive
    void setAlarmTimeout(int) -> setAlarmTimeout
    void doDestory() -> doDestory
    boolean shouldStopSelf(android.content.Context) -> shouldStopSelf
    boolean shouldReConnect(android.content.Context) -> shouldReConnect
    void newPushConnection() -> newPushConnection
    void setAlarmRepeat() -> setAlarmRepeat
    void cancelAlarmRepeat() -> cancelAlarmRepeat
    void sendRequestTokenIntent() -> sendRequestTokenIntent
    boolean tryConnect() -> tryConnect
    boolean heartbeat() -> heartbeat
    void scheduleRegister() -> scheduleRegister
    void scheduleConnect() -> scheduleConnect
    java.lang.Object access$000() -> access$000
com.baidu.android.pushservice.PushService -> com.baidu.android.pushservice.PushService:
    boolean a -> a
    android.os.Handler b -> b
    java.lang.Runnable c -> c
    void onCreate() -> onCreate
    android.os.IBinder onBind(android.content.Intent) -> onBind
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void onDestroy() -> onDestroy
    void a(boolean,boolean) -> a
com.baidu.android.pushservice.PushServiceReceiver -> com.baidu.android.pushservice.PushServiceReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void a(android.content.Context,java.lang.String,java.lang.String,com.baidu.android.pushservice.message.PublicMsg,java.lang.String,java.lang.String) -> a
    void a(android.content.Context,java.lang.String,java.lang.String,com.baidu.android.pushservice.message.PublicMsg,java.lang.String) -> a
    void a(android.content.Context,com.baidu.android.pushservice.message.PublicMsg) -> a
com.baidu.android.pushservice.PushSettings -> com.baidu.android.pushservice.PushSettings:
    android.content.Context a -> a
    void a(android.content.Context) -> a
    java.lang.String a() -> a
    void a(java.lang.String) -> a
    java.lang.String b() -> b
    void a(java.lang.String,int,java.lang.String) -> a
    void a(java.util.HashMap) -> a
    java.lang.String b(java.lang.String) -> b
    java.util.HashMap g() -> g
    void c(java.lang.String) -> c
    boolean c() -> c
    void enableDebugMode(android.content.Context,boolean) -> enableDebugMode
    boolean b(android.content.Context) -> b
    void a(int) -> a
    int d() -> d
    void a(long) -> a
    long c(android.content.Context) -> c
    void b(long) -> b
    long d(android.content.Context) -> d
    void c(long) -> c
    void b(int) -> b
    int e() -> e
    void a(android.content.Context,boolean) -> a
    boolean f() -> f
    void a(android.content.Context,java.lang.String) -> a
    void e(android.content.Context) -> e
com.baidu.android.pushservice.PushTestActivity -> com.baidu.android.pushservice.PushTestActivity:
    java.lang.String a -> a
    android.widget.LinearLayout b -> b
    void onCreate(android.os.Bundle) -> onCreate
    void a() -> a
    void b() -> b
    void c() -> c
    void d() -> d
    void e() -> e
    void f() -> f
    void g() -> g
    void h() -> h
com.baidu.android.pushservice.RegistrationReceiver -> com.baidu.android.pushservice.RegistrationReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void a(android.content.Context,android.content.Intent) -> a
    void a(android.content.Context,com.baidu.android.pushservice.d) -> a
com.baidu.android.pushservice.a -> com.baidu.android.pushservice.a:
    com.baidu.android.pushservice.a c -> c
    android.content.Context d -> d
    java.util.ArrayList a -> a
    java.util.ArrayList b -> b
    java.util.HashMap e -> e
    com.baidu.android.pushservice.a a(android.content.Context) -> a
    void b(android.content.Context) -> b
    com.baidu.android.pushservice.d a(java.lang.String) -> a
    com.baidu.android.pushservice.d b(java.lang.String) -> b
    boolean c(java.lang.String) -> c
    java.lang.String c(android.content.Context) -> c
    java.lang.String d(android.content.Context) -> d
    java.util.ArrayList d(java.lang.String) -> d
    java.lang.String a(java.util.List) -> a
    java.lang.String a(com.baidu.android.pushservice.d,boolean) -> a
    java.lang.String b(com.baidu.android.pushservice.d,boolean) -> b
    java.lang.String e(java.lang.String) -> e
    void a(java.lang.String,com.baidu.android.pushservice.a.g) -> a
    void f(java.lang.String) -> f
    boolean a(java.lang.String,java.lang.String) -> a
com.baidu.android.pushservice.a.a -> com.baidu.android.pushservice.a.a:
    android.content.Context a -> a
    com.baidu.android.pushservice.a.l b -> b
    java.lang.String c -> c
    boolean d -> d
    void run() -> run
    void a() -> a
    boolean b() -> b
    void a(int) -> a
    void a(int,byte[]) -> a
    void b(int,byte[]) -> b
    void a(java.lang.String) -> a
    void a(java.util.List) -> a
    java.lang.String b(java.lang.String) -> b
    void a(android.content.Intent) -> a
com.baidu.android.pushservice.a.aa -> com.baidu.android.pushservice.a.aa:
    void a(java.util.List) -> a
com.baidu.android.pushservice.a.b -> com.baidu.android.pushservice.a.b:
    void a(java.util.List) -> a
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
    void a(android.content.Context,java.util.ArrayList) -> a
com.baidu.android.pushservice.a.c -> com.baidu.android.pushservice.a.c:
    boolean b() -> b
com.baidu.android.pushservice.a.d -> com.baidu.android.pushservice.a.d:
    boolean e -> e
    java.lang.String b(java.lang.String) -> b
com.baidu.android.pushservice.a.e -> com.baidu.android.pushservice.a.e:
    boolean b() -> b
com.baidu.android.pushservice.a.f -> com.baidu.android.pushservice.a.f:
    int f -> f
    java.lang.String g -> g
    int h -> h
    void a(java.util.List) -> a
    void a(android.content.Intent) -> a
    java.lang.String b(java.lang.String) -> b
com.baidu.android.pushservice.a.g -> com.baidu.android.pushservice.a.g:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String toString() -> toString
com.baidu.android.pushservice.a.h -> com.baidu.android.pushservice.a.h:
    void a(java.util.List) -> a
com.baidu.android.pushservice.a.i -> com.baidu.android.pushservice.a.i:
    java.lang.String e -> e
    void a(java.util.List) -> a
com.baidu.android.pushservice.a.j -> com.baidu.android.pushservice.a.j:
    java.lang.String e -> e
    void a(java.util.List) -> a
com.baidu.android.pushservice.a.k -> com.baidu.android.pushservice.a.k:
    java.lang.String[] e -> e
    void a(java.util.List) -> a
com.baidu.android.pushservice.a.l -> com.baidu.android.pushservice.a.l:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String toString() -> toString
com.baidu.android.pushservice.a.m -> com.baidu.android.pushservice.a.m:
    int e -> e
    int f -> f
    void a(java.util.List) -> a
com.baidu.android.pushservice.a.n -> com.baidu.android.pushservice.a.n:
    int e -> e
    int f -> f
    java.lang.String g -> g
    void a(java.util.List) -> a
com.baidu.android.pushservice.a.o -> com.baidu.android.pushservice.a.o:
    java.lang.String e -> e
    void a(java.util.List) -> a
com.baidu.android.pushservice.a.p -> com.baidu.android.pushservice.a.p:
    java.lang.String e -> e
    void a(java.util.List) -> a
com.baidu.android.pushservice.a.q -> com.baidu.android.pushservice.a.q:
    void a(java.util.List) -> a
com.baidu.android.pushservice.a.r -> com.baidu.android.pushservice.a.r:
    java.lang.String e -> e
    void a(java.util.List) -> a
com.baidu.android.pushservice.a.s -> com.baidu.android.pushservice.a.s:
    java.util.ArrayList e -> e
    void a(java.util.List) -> a
    java.lang.String b(java.lang.String) -> b
    void a(int,byte[]) -> a
com.baidu.android.pushservice.a.t -> com.baidu.android.pushservice.a.t:
    void a(java.util.List) -> a
com.baidu.android.pushservice.a.u -> com.baidu.android.pushservice.a.u:
    java.lang.String f -> f
    void a(java.util.List) -> a
com.baidu.android.pushservice.a.v -> com.baidu.android.pushservice.a.v:
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    void a(java.util.List) -> a
com.baidu.android.pushservice.a.w -> com.baidu.android.pushservice.a.w:
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    void a(java.util.List) -> a
com.baidu.android.pushservice.a.x -> com.baidu.android.pushservice.a.x:
    java.lang.String e -> e
    void a(java.util.List) -> a
com.baidu.android.pushservice.a.y -> com.baidu.android.pushservice.a.y:
    android.content.Context a -> a
    int b -> b
    int c -> c
    boolean d -> d
    void run() -> run
    void a() -> a
    void a(int) -> a
    boolean b() -> b
    java.util.List c() -> c
    void d() -> d
com.baidu.android.pushservice.a.z -> com.baidu.android.pushservice.a.z:
    void a(java.util.List) -> a
com.baidu.android.pushservice.b -> com.baidu.android.pushservice.b:
    int a -> a
    int b -> b
    int c -> c
    boolean a() -> a
    boolean a(android.content.Context) -> a
    void a(android.content.Context,boolean) -> a
    boolean b(android.content.Context) -> b
    void b(android.content.Context,boolean) -> b
    java.lang.String c(android.content.Context) -> c
    void c(android.content.Context,boolean) -> c
    void a(android.content.Context,android.content.Intent) -> a
com.baidu.android.pushservice.b.a -> com.baidu.android.pushservice.b.a:
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String a() -> a
    void a(java.lang.String) -> a
    java.lang.String b() -> b
    void b(java.lang.String) -> b
com.baidu.android.pushservice.b.b -> com.baidu.android.pushservice.b.b:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    int g -> g
    java.lang.String h -> h
    int i -> i
    java.lang.String a() -> a
    void a(java.lang.String) -> a
    java.lang.String b() -> b
    void b(java.lang.String) -> b
    java.lang.String c() -> c
    void c(java.lang.String) -> c
    java.lang.String d() -> d
    void d(java.lang.String) -> d
    java.lang.String e() -> e
    void e(java.lang.String) -> e
    java.lang.String f() -> f
    void f(java.lang.String) -> f
    int g() -> g
    void a(int) -> a
    java.lang.String h() -> h
    void g(java.lang.String) -> g
    int i() -> i
    void b(int) -> b
com.baidu.android.pushservice.b.c -> com.baidu.android.pushservice.b.c:
    java.lang.String b -> b
    int c -> c
    android.location.Location d -> d
    int e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.util.List a -> a
    void a(int,android.location.Location,int,java.lang.String) -> a
    void a(com.baidu.android.pushservice.b.d) -> a
    java.lang.String a() -> a
com.baidu.android.pushservice.b.d -> com.baidu.android.pushservice.b.d:
    int a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    org.json.JSONObject i -> i
    org.json.JSONObject a() -> a
com.baidu.android.pushservice.b.e -> com.baidu.android.pushservice.b.e:
    android.database.sqlite.SQLiteDatabase c -> c
    com.baidu.android.pushservice.b.c d -> d
    com.baidu.android.pushservice.b.e e -> e
    int f -> f
    android.location.Location g -> g
    int h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    android.telephony.TelephonyManager l -> l
    android.net.wifi.WifiManager m -> m
    android.location.LocationManager n -> n
    com.baidu.android.pushservice.b.e a(android.content.Context) -> a
    android.database.sqlite.SQLiteDatabase f() -> f
    void a(java.lang.String,java.util.List) -> a
    boolean a() -> a
    java.lang.String b() -> b
    void h() -> h
    void c() -> c
    void d() -> d
    void i() -> i
    boolean e() -> e
com.baidu.android.pushservice.b.f -> com.baidu.android.pushservice.b.f:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    int h -> h
    java.lang.String i -> i
    long j -> j
    java.lang.String k -> k
    int l -> l
    java.lang.String m -> m
    int c() -> c
    java.lang.String d() -> d
    void c(java.lang.String) -> c
    long e() -> e
    void a(long) -> a
    java.lang.String f() -> f
    void d(java.lang.String) -> d
    int g() -> g
    void a(int) -> a
    java.lang.String h() -> h
    void e(java.lang.String) -> e
    int i() -> i
com.baidu.android.pushservice.b.g -> com.baidu.android.pushservice.b.g:
    byte[] a(java.lang.String) -> a
com.baidu.android.pushservice.b.h -> com.baidu.android.pushservice.b.h:
    java.lang.String c -> c
    int d -> d
    com.baidu.android.pushservice.b.h e -> e
    com.baidu.android.pushservice.b.h a(android.content.Context) -> a
    java.lang.String f() -> f
    boolean a() -> a
    java.lang.String h() -> h
    java.lang.String b() -> b
    void c() -> c
    void d() -> d
    void a(java.lang.String,java.util.List) -> a
    boolean e() -> e
com.baidu.android.pushservice.b.i -> com.baidu.android.pushservice.b.i:
    int h -> h
    int a() -> a
    void b(int) -> b
com.baidu.android.pushservice.b.j -> com.baidu.android.pushservice.b.j:
    java.lang.String h -> h
    int i -> i
    int j -> j
    java.lang.String a() -> a
    void a(java.lang.String) -> a
    int b() -> b
    void b(int) -> b
    int j() -> j
    void c(int) -> c
com.baidu.android.pushservice.b.k -> com.baidu.android.pushservice.b.k:
    android.content.Context a -> a
    java.lang.String b -> b
    boolean c -> c
    void g() -> g
    boolean a() -> a
    java.lang.String b() -> b
    void a(java.lang.String,java.util.List) -> a
    void c() -> c
    void d() -> d
    boolean e() -> e
    void f() -> f
    void a(com.baidu.android.pushservice.b.k) -> a
    boolean a(com.baidu.android.pushservice.b.k,boolean) -> a
com.baidu.android.pushservice.b.l -> com.baidu.android.pushservice.b.l:
    com.baidu.android.pushservice.b.k a -> a
    void run() -> run
com.baidu.android.pushservice.b.m -> com.baidu.android.pushservice.b.m:
    double a -> a
    double b -> b
    double c -> c
    double d -> d
    com.baidu.android.pushservice.b.n a() -> a
    int e() -> e
    com.baidu.android.pushservice.b.n a(java.lang.String) -> a
    java.lang.String a(java.io.InputStream) -> a
    long b() -> b
    int[] a(android.content.Context) -> a
    java.lang.String c() -> c
    java.lang.String d() -> d
    java.lang.String b(android.content.Context) -> b
    boolean c(android.content.Context) -> c
    java.lang.String d(android.content.Context) -> d
    boolean e(android.content.Context) -> e
com.baidu.android.pushservice.b.n -> com.baidu.android.pushservice.b.n:
    int a -> a
    int b -> b
    int c -> c
    double d -> d
    long e -> e
com.baidu.android.pushservice.b.o -> com.baidu.android.pushservice.b.o:
    android.content.Context b -> b
    java.lang.String a -> a
    com.baidu.android.pushservice.b.o c -> c
    com.baidu.android.pushservice.b.r d -> d
    boolean e -> e
    java.lang.String a() -> a
    void b() -> b
    boolean d() -> d
    void c() -> c
    java.lang.String a(java.io.InputStream) -> a
    java.lang.String b(java.io.InputStream) -> b
    java.lang.String c(java.io.InputStream) -> c
    java.io.InputStream a(org.apache.http.HttpEntity) -> a
    boolean a(com.baidu.android.pushservice.b.o) -> a
    android.content.Context b(com.baidu.android.pushservice.b.o) -> b
    java.lang.String a(com.baidu.android.pushservice.b.o,java.io.InputStream) -> a
    java.lang.String b(com.baidu.android.pushservice.b.o,java.io.InputStream) -> b
    java.lang.String c(com.baidu.android.pushservice.b.o,java.io.InputStream) -> c
    java.io.InputStream a(com.baidu.android.pushservice.b.o,org.apache.http.HttpEntity) -> a
com.baidu.android.pushservice.b.p -> com.baidu.android.pushservice.b.p:
    com.baidu.android.pushservice.b.o a -> a
    void run() -> run
com.baidu.android.pushservice.b.q -> com.baidu.android.pushservice.b.q:
    java.lang.CharSequence b -> b
    java.lang.String c -> c
    com.baidu.android.pushservice.b.o a -> a
    void run() -> run
    java.io.InputStream a(org.apache.http.HttpResponse) -> a
    org.apache.http.client.entity.UrlEncodedFormEntity a() -> a
com.baidu.android.pushservice.b.r -> com.baidu.android.pushservice.b.r:
    java.lang.String a -> a
    com.baidu.android.pushservice.b.r b -> b
    android.content.Context c -> c
    com.baidu.android.pushservice.b.r a(android.content.Context) -> a
    java.lang.String a() -> a
    java.lang.String b() -> b
com.baidu.android.pushservice.b.s -> com.baidu.android.pushservice.b.s:
    android.content.Context a -> a
    com.baidu.android.pushservice.b.e b -> b
    com.baidu.android.pushservice.b.h c -> c
    long d -> d
    com.baidu.android.pushservice.b.o e -> e
    void a() -> a
    void b() -> b
    boolean c() -> c
    long a(android.content.Context,com.baidu.android.pushservice.b.j) -> a
    long a(android.content.Context,com.baidu.android.pushservice.b.a) -> a
    long a(android.content.Context,com.baidu.android.pushservice.b.i) -> a
    long a(android.content.Context,com.baidu.android.pushservice.b.b) -> a
com.baidu.android.pushservice.c -> com.baidu.android.pushservice.c:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.Object c -> c
    int d -> d
    android.app.Notification a(android.content.Context,int,java.lang.String,java.lang.String) -> a
    android.app.Notification a(android.content.Context,int,int,java.lang.String,java.lang.String) -> a
    void a(android.content.Context,com.baidu.android.pushservice.PushNotificationBuilder) -> a
    void a(android.content.Context,int,com.baidu.android.pushservice.PushNotificationBuilder) -> a
    void b(android.content.Context,com.baidu.android.pushservice.PushNotificationBuilder) -> b
    com.baidu.android.pushservice.PushNotificationBuilder a(android.content.Context) -> a
    com.baidu.android.pushservice.PushNotificationBuilder b(android.content.Context) -> b
    com.baidu.android.pushservice.PushNotificationBuilder a(android.content.Context,int) -> a
com.baidu.android.pushservice.d -> com.baidu.android.pushservice.d:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String toString() -> toString
com.baidu.android.pushservice.e -> com.baidu.android.pushservice.e:
    int a -> a
    boolean d -> d
    java.lang.Boolean e -> e
    boolean f -> f
    java.net.Socket g -> g
    java.io.InputStream h -> h
    java.io.OutputStream i -> i
    java.util.LinkedList j -> j
    com.baidu.android.pushservice.j k -> k
    com.baidu.android.pushservice.i l -> l
    boolean m -> m
    int n -> n
    android.os.Handler b -> b
    android.content.Context o -> o
    com.baidu.android.pushservice.message.a c -> c
    com.baidu.android.pushservice.e p -> p
    java.util.HashSet q -> q
    boolean r -> r
    java.lang.Runnable s -> s
    java.lang.Runnable t -> t
    long u -> u
    int[] v -> v
    int[] w -> w
    int x -> x
    int y -> y
    int z -> z
    int A -> A
    com.baidu.android.pushservice.e a(android.content.Context) -> a
    boolean a() -> a
    void b() -> b
    void f() -> f
    void c() -> c
    void g() -> g
    void h() -> h
    void a(com.baidu.android.pushservice.message.b) -> a
    void d() -> d
    void a(boolean) -> a
    java.util.HashSet e() -> e
    boolean a(java.lang.String) -> a
    void a(java.util.HashSet) -> a
    void b(boolean) -> b
    void a(int) -> a
    int i() -> i
    void j() -> j
    java.lang.Boolean a(java.lang.Boolean) -> a
    void a(com.baidu.android.pushservice.e) -> a
    java.net.Socket a(com.baidu.android.pushservice.e,java.net.Socket) -> a
    java.io.InputStream a(com.baidu.android.pushservice.e,java.io.InputStream) -> a
    java.net.Socket b(com.baidu.android.pushservice.e) -> b
    java.io.OutputStream a(com.baidu.android.pushservice.e,java.io.OutputStream) -> a
    android.content.Context c(com.baidu.android.pushservice.e) -> c
    java.io.InputStream d(com.baidu.android.pushservice.e) -> d
    java.io.OutputStream e(com.baidu.android.pushservice.e) -> e
    boolean a(com.baidu.android.pushservice.e,boolean) -> a
    com.baidu.android.pushservice.i f(com.baidu.android.pushservice.e) -> f
    com.baidu.android.pushservice.j g(com.baidu.android.pushservice.e) -> g
    boolean b(com.baidu.android.pushservice.e,boolean) -> b
    com.baidu.android.pushservice.i a(com.baidu.android.pushservice.e,com.baidu.android.pushservice.i) -> a
    com.baidu.android.pushservice.j a(com.baidu.android.pushservice.e,com.baidu.android.pushservice.j) -> a
    void h(com.baidu.android.pushservice.e) -> h
    boolean i(com.baidu.android.pushservice.e) -> i
    boolean c(com.baidu.android.pushservice.e,boolean) -> c
    void d(com.baidu.android.pushservice.e,boolean) -> d
    void j(com.baidu.android.pushservice.e) -> j
    boolean k(com.baidu.android.pushservice.e) -> k
    java.lang.Runnable l(com.baidu.android.pushservice.e) -> l
    int a(com.baidu.android.pushservice.e,int) -> a
    java.util.LinkedList m(com.baidu.android.pushservice.e) -> m
com.baidu.android.pushservice.f -> com.baidu.android.pushservice.f:
    com.baidu.android.pushservice.e a -> a
    void run() -> run
com.baidu.android.pushservice.g -> com.baidu.android.pushservice.g:
    com.baidu.android.pushservice.e a -> a
    void run() -> run
com.baidu.android.pushservice.h -> com.baidu.android.pushservice.h:
    com.baidu.android.pushservice.e a -> a
    void run() -> run
com.baidu.android.pushservice.i -> com.baidu.android.pushservice.i:
    com.baidu.android.pushservice.e a -> a
    void run() -> run
com.baidu.android.pushservice.j -> com.baidu.android.pushservice.j:
    com.baidu.android.pushservice.e a -> a
    void run() -> run
com.baidu.android.pushservice.jni.PushSocket -> com.baidu.android.pushservice.jni.PushSocket:
    byte[] b -> b
    int c -> c
    java.lang.String d -> d
    int e -> e
    int f -> f
    boolean a -> a
    int createSocket(java.lang.String,int) -> createSocket
    int sendMsg(int,byte[],int) -> sendMsg
    byte[] rcvMsg(int) -> rcvMsg
    int getLastSocketError() -> getLastSocketError
    int closeSocket(int) -> closeSocket
    short a(byte[],int) -> a
    int b(byte[],int) -> b
    byte[] a(int,com.baidu.android.pushservice.message.a) -> a
    boolean a(int) -> a
com.baidu.android.pushservice.k -> com.baidu.android.pushservice.k:
    com.baidu.android.pushservice.PushSDK a -> a
    void run() -> run
com.baidu.android.pushservice.l -> com.baidu.android.pushservice.l:
    com.baidu.android.pushservice.PushSDK a -> a
    void run() -> run
com.baidu.android.pushservice.m -> com.baidu.android.pushservice.m:
    com.baidu.android.pushservice.PushSDK a -> a
    void run() -> run
com.baidu.android.pushservice.message.PublicMsg -> com.baidu.android.pushservice.message.PublicMsg:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    int g -> g
    java.lang.String h -> h
    int i -> i
    int j -> j
    int k -> k
    int l -> l
    int m -> m
    java.lang.String n -> n
    java.lang.String o -> o
    boolean p -> p
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void a(android.content.Context,java.lang.String,java.lang.String) -> a
    void b(android.content.Context,java.lang.String,java.lang.String) -> b
    void a(android.content.Context,com.baidu.android.pushservice.d,com.baidu.android.pushservice.b.j,com.baidu.android.pushservice.b.b) -> a
    void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String a(android.content.Context,java.lang.String) -> a
    void c(android.content.Context,java.lang.String,java.lang.String) -> c
    void a(android.content.Intent) -> a
    void a(android.content.Context,java.lang.String,int) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
com.baidu.android.pushservice.message.a -> com.baidu.android.pushservice.message.a:
    java.io.InputStream a -> a
    java.io.OutputStream b -> b
    android.content.Context c -> c
    com.baidu.android.pushservice.e d -> d
    void a(com.baidu.android.pushservice.message.b) -> a
    com.baidu.android.pushservice.message.b a(byte[],int) -> a
    void b(com.baidu.android.pushservice.message.b) -> b
    void a(int) -> a
    void a() -> a
    com.baidu.android.pushservice.message.b b() -> b
    void c() -> c
    void d() -> d
com.baidu.android.pushservice.message.b -> com.baidu.android.pushservice.message.b:
    int a -> a
    int b -> b
    byte[] c -> c
    boolean d -> d
    boolean e -> e
    boolean a() -> a
    void a(boolean) -> a
    java.lang.String toString() -> toString
com.baidu.android.pushservice.message.c -> com.baidu.android.pushservice.message.c:
    com.baidu.android.pushservice.util.a e -> e
    com.baidu.android.pushservice.message.b a(byte[],int) -> a
    com.baidu.android.pushservice.message.b b() -> b
    void b(com.baidu.android.pushservice.message.b) -> b
    void a(int) -> a
    void a() -> a
    void c() -> c
    void d() -> d
    byte[] a(short,byte[]) -> a
    byte[] a(long,int) -> a
    void d(com.baidu.android.pushservice.message.b) -> d
    void c(com.baidu.android.pushservice.message.b) -> c
    void e(com.baidu.android.pushservice.message.b) -> e
    void a(java.lang.String,java.lang.String,int,byte[],int) -> a
    int a(byte[]) -> a
    int a(java.lang.String,java.lang.String,byte[]) -> a
    int b(java.lang.String,java.lang.String,byte[]) -> b
    int c(java.lang.String,java.lang.String,byte[]) -> c
    int d(java.lang.String,java.lang.String,byte[]) -> d
    void a(com.baidu.android.pushservice.d,com.baidu.android.pushservice.b.j,com.baidu.android.pushservice.b.b) -> a
    int a(java.lang.String,byte[]) -> a
    void a(com.baidu.android.pushservice.message.PublicMsg,java.lang.String) -> a
    void a(java.lang.String,com.baidu.android.pushservice.message.PublicMsg,java.lang.String) -> a
    void a(com.baidu.android.pushservice.message.PublicMsg,java.lang.String,java.lang.String) -> a
    java.lang.String b(byte[]) -> b
    byte[] a(java.lang.String,int) -> a
    boolean a(com.baidu.android.pushservice.message.PublicMsg) -> a
    void a(java.lang.String) -> a
com.baidu.android.pushservice.message.d -> com.baidu.android.pushservice.message.d:
com.baidu.android.pushservice.message.e -> com.baidu.android.pushservice.message.e:
    android.content.Context a -> a
    com.baidu.android.pushservice.message.PublicMsg b -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.baidu.android.pushservice.message.f -> com.baidu.android.pushservice.message.f:
    com.baidu.android.pushservice.message.PublicMsg a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.baidu.android.pushservice.message.g -> com.baidu.android.pushservice.message.g:
    android.content.Context a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    com.baidu.android.pushservice.message.PublicMsg e -> e
    void run() -> run
com.baidu.android.pushservice.message.h -> com.baidu.android.pushservice.message.h:
    com.baidu.android.pushservice.message.PublicMsg a(android.os.Parcel) -> a
    com.baidu.android.pushservice.message.PublicMsg[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.baidu.android.pushservice.message.i -> com.baidu.android.pushservice.message.i:
    com.baidu.android.pushservice.message.PublicMsg a(java.lang.String,java.lang.String,byte[]) -> a
com.baidu.android.pushservice.n -> com.baidu.android.pushservice.n:
    com.baidu.android.pushservice.PushService a -> a
    void run() -> run
com.baidu.android.pushservice.o -> com.baidu.android.pushservice.o:
    android.content.Context a -> a
    android.widget.RemoteViews b -> b
    int c -> c
    int d -> d
    int e -> e
    int f -> f
    android.app.NotificationManager g -> g
    com.baidu.android.pushservice.message.PublicMsg h -> h
    com.baidu.android.pushservice.PushServiceReceiver i -> i
    void a(com.baidu.android.pushservice.richmedia.b) -> a
    void a(com.baidu.android.pushservice.richmedia.b,com.baidu.android.pushservice.richmedia.m) -> a
    void a(com.baidu.android.pushservice.richmedia.b,com.baidu.android.pushservice.richmedia.r) -> a
    void a(com.baidu.android.pushservice.richmedia.b,java.lang.Throwable) -> a
    void b(com.baidu.android.pushservice.richmedia.b) -> b
com.baidu.android.pushservice.p -> com.baidu.android.pushservice.p:
    com.baidu.android.pushservice.PushTestActivity a -> a
    void onClick(android.view.View) -> onClick
com.baidu.android.pushservice.q -> com.baidu.android.pushservice.q:
    com.baidu.android.pushservice.PushTestActivity a -> a
    void onClick(android.view.View) -> onClick
com.baidu.android.pushservice.r -> com.baidu.android.pushservice.r:
    com.baidu.android.pushservice.PushTestActivity a -> a
    void onClick(android.view.View) -> onClick
com.baidu.android.pushservice.richmedia.MediaListActivity -> com.baidu.android.pushservice.richmedia.MediaListActivity:
    android.widget.ListView c -> c
    int d -> d
    int e -> e
    int f -> f
    int g -> g
    int h -> h
    int i -> i
    int j -> j
    int k -> k
    android.widget.LinearLayout l -> l
    android.widget.RemoteViews m -> m
    int n -> n
    int o -> o
    int p -> p
    int q -> q
    java.util.ArrayList a -> a
    java.lang.String r -> r
    android.app.NotificationManager b -> b
    android.widget.AdapterView$OnItemClickListener s -> s
    android.widget.AdapterView$OnItemLongClickListener t -> t
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void a(java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String a() -> a
    void a(com.baidu.android.pushservice.richmedia.MediaListActivity,java.lang.String,java.lang.String,java.lang.String) -> a
    android.widget.RemoteViews a(com.baidu.android.pushservice.richmedia.MediaListActivity) -> a
    int b(com.baidu.android.pushservice.richmedia.MediaListActivity) -> b
    int c(com.baidu.android.pushservice.richmedia.MediaListActivity) -> c
    int d(com.baidu.android.pushservice.richmedia.MediaListActivity) -> d
    int e(com.baidu.android.pushservice.richmedia.MediaListActivity) -> e
    int f(com.baidu.android.pushservice.richmedia.MediaListActivity) -> f
    int g(com.baidu.android.pushservice.richmedia.MediaListActivity) -> g
    int h(com.baidu.android.pushservice.richmedia.MediaListActivity) -> h
    int i(com.baidu.android.pushservice.richmedia.MediaListActivity) -> i
    int j(com.baidu.android.pushservice.richmedia.MediaListActivity) -> j
com.baidu.android.pushservice.richmedia.MediaViewActivity -> com.baidu.android.pushservice.richmedia.MediaViewActivity:
    android.widget.RelativeLayout b -> b
    android.webkit.WebView a -> a
    android.webkit.WebChromeClient c -> c
    android.webkit.WebViewClient d -> d
    void onCreate(android.os.Bundle) -> onCreate
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onPause() -> onPause
    void onResume() -> onResume
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
com.baidu.android.pushservice.richmedia.a -> com.baidu.android.pushservice.richmedia.a:
    com.baidu.android.pushservice.richmedia.l b -> b
    org.apache.http.impl.client.DefaultHttpClient a -> a
    org.apache.http.HttpResponse a(java.lang.String,java.lang.String,java.util.Map,java.util.List) -> a
com.baidu.android.pushservice.richmedia.b -> com.baidu.android.pushservice.richmedia.b:
    com.baidu.android.pushservice.richmedia.l g -> g
    com.baidu.android.pushservice.richmedia.s a -> a
    java.lang.ref.WeakReference b -> b
    java.util.HashSet h -> h
    long c -> c
    com.baidu.android.pushservice.richmedia.n d -> d
    boolean i -> i
    boolean j -> j
    int e -> e
    int f -> f
    com.baidu.android.pushservice.richmedia.r a(com.baidu.android.pushservice.richmedia.n[]) -> a
    void onCancelled() -> onCancelled
    void a(com.baidu.android.pushservice.richmedia.r) -> a
    void onPreExecute() -> onPreExecute
    void a(com.baidu.android.pushservice.richmedia.m[]) -> a
    int a(com.baidu.android.pushservice.richmedia.b) -> a
    long a() -> a
    boolean a(com.baidu.android.pushservice.richmedia.n) -> a
    boolean b(com.baidu.android.pushservice.richmedia.n) -> b
    com.baidu.android.pushservice.util.j a(android.content.Context,java.lang.String) -> a
    int a(java.lang.String) -> a
    void a(java.io.File,java.lang.String) -> a
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    int compareTo(java.lang.Object) -> compareTo
com.baidu.android.pushservice.richmedia.c -> com.baidu.android.pushservice.richmedia.c:
    com.baidu.android.pushservice.richmedia.MediaListActivity a -> a
    void onClick(android.view.View) -> onClick
com.baidu.android.pushservice.richmedia.d -> com.baidu.android.pushservice.richmedia.d:
    com.baidu.android.pushservice.richmedia.MediaListActivity a -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.baidu.android.pushservice.richmedia.e -> com.baidu.android.pushservice.richmedia.e:
    com.baidu.android.pushservice.richmedia.MediaListActivity a -> a
    boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long) -> onItemLongClick
com.baidu.android.pushservice.richmedia.f -> com.baidu.android.pushservice.richmedia.f:
    com.baidu.android.pushservice.richmedia.e a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.baidu.android.pushservice.richmedia.g -> com.baidu.android.pushservice.richmedia.g:
    long a -> a
    com.baidu.android.pushservice.richmedia.e b -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.baidu.android.pushservice.richmedia.h -> com.baidu.android.pushservice.richmedia.h:
    com.baidu.android.pushservice.richmedia.MediaListActivity a -> a
    void a(com.baidu.android.pushservice.richmedia.b) -> a
    void a(com.baidu.android.pushservice.richmedia.b,com.baidu.android.pushservice.richmedia.m) -> a
    void a(com.baidu.android.pushservice.richmedia.b,com.baidu.android.pushservice.richmedia.r) -> a
    void a(com.baidu.android.pushservice.richmedia.b,java.lang.Throwable) -> a
    void b(com.baidu.android.pushservice.richmedia.b) -> b
com.baidu.android.pushservice.richmedia.i -> com.baidu.android.pushservice.richmedia.i:
    android.content.Context b -> b
    java.util.ArrayList c -> c
    com.baidu.android.pushservice.richmedia.MediaListActivity a -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.baidu.android.pushservice.richmedia.j -> com.baidu.android.pushservice.richmedia.j:
    com.baidu.android.pushservice.richmedia.MediaViewActivity a -> a
    void onProgressChanged(android.webkit.WebView,int) -> onProgressChanged
    void onShowCustomView(android.view.View,android.webkit.WebChromeClient$CustomViewCallback) -> onShowCustomView
    void onHideCustomView() -> onHideCustomView
com.baidu.android.pushservice.richmedia.k -> com.baidu.android.pushservice.richmedia.k:
    com.baidu.android.pushservice.richmedia.MediaViewActivity a -> a
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
com.baidu.android.pushservice.richmedia.l -> com.baidu.android.pushservice.richmedia.l:
    boolean a -> a
    java.util.Hashtable b -> b
    java.lang.String c -> c
    com.baidu.android.pushservice.richmedia.l a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
com.baidu.android.pushservice.richmedia.m -> com.baidu.android.pushservice.richmedia.m:
    long a -> a
    long b -> b
com.baidu.android.pushservice.richmedia.n -> com.baidu.android.pushservice.richmedia.n:
    com.baidu.android.pushservice.richmedia.l i -> i
    java.lang.String a -> a
    java.lang.String j -> j
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    com.baidu.android.pushservice.richmedia.o e -> e
    java.util.Map k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    java.util.List f -> f
    boolean g -> g
    boolean h -> h
    java.util.Map a() -> a
    com.baidu.android.pushservice.richmedia.o b() -> b
    void a(com.baidu.android.pushservice.richmedia.o) -> a
    java.lang.String c() -> c
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    java.lang.String d() -> d
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.baidu.android.pushservice.richmedia.o -> com.baidu.android.pushservice.richmedia.o:
    com.baidu.android.pushservice.richmedia.o a -> a
    com.baidu.android.pushservice.richmedia.o[] b -> b
    com.baidu.android.pushservice.richmedia.o[] values() -> values
    com.baidu.android.pushservice.richmedia.o valueOf(java.lang.String) -> valueOf
com.baidu.android.pushservice.richmedia.p -> com.baidu.android.pushservice.richmedia.p:
    com.baidu.android.pushservice.richmedia.n a(com.baidu.android.pushservice.richmedia.o,java.lang.String) -> a
com.baidu.android.pushservice.richmedia.q -> com.baidu.android.pushservice.richmedia.q:
    int[] a -> a
com.baidu.android.pushservice.richmedia.r -> com.baidu.android.pushservice.richmedia.r:
    com.baidu.android.pushservice.richmedia.o a -> a
    int b -> b
    int c -> c
    com.baidu.android.pushservice.richmedia.n d -> d
    java.lang.String e -> e
com.baidu.android.pushservice.richmedia.s -> com.baidu.android.pushservice.richmedia.s:
    void a(com.baidu.android.pushservice.richmedia.b) -> a
    void a(com.baidu.android.pushservice.richmedia.b,com.baidu.android.pushservice.richmedia.m) -> a
    void a(com.baidu.android.pushservice.richmedia.b,com.baidu.android.pushservice.richmedia.r) -> a
    void a(com.baidu.android.pushservice.richmedia.b,java.lang.Throwable) -> a
    void b(com.baidu.android.pushservice.richmedia.b) -> b
com.baidu.android.pushservice.s -> com.baidu.android.pushservice.s:
    com.baidu.android.pushservice.PushTestActivity a -> a
    void onClick(android.view.View) -> onClick
com.baidu.android.pushservice.t -> com.baidu.android.pushservice.t:
    com.baidu.android.pushservice.PushTestActivity a -> a
    void onClick(android.view.View) -> onClick
com.baidu.android.pushservice.u -> com.baidu.android.pushservice.u:
    com.baidu.android.pushservice.PushTestActivity a -> a
    void onClick(android.view.View) -> onClick
com.baidu.android.pushservice.util.Internal -> com.baidu.android.pushservice.util.Internal:
    void enablePushService(android.content.Context) -> enablePushService
    void disablePushService(android.content.Context) -> disablePushService
    void disablePushConnection(android.content.Context) -> disablePushConnection
    void enablePushConnection(android.content.Context) -> enablePushConnection
    android.content.Intent createBdussInent(android.content.Context) -> createBdussInent
com.baidu.android.pushservice.util.NoProGuard -> com.baidu.android.pushservice.util.NoProGuard:
com.baidu.android.pushservice.util.PushDatabase -> com.baidu.android.pushservice.util.PushDatabase:
    com.baidu.android.pushservice.util.h mDbHelper -> mDbHelper
    int DB_VERSION -> DB_VERSION
    java.lang.String DB_DIR -> DB_DIR
    java.lang.String DB_NAME -> DB_NAME
    java.lang.String TAG -> TAG
    void close() -> close
    android.database.sqlite.SQLiteDatabase getDb(android.content.Context) -> getDb
    java.util.List selectStatisticsInfo(android.database.sqlite.SQLiteDatabase) -> selectStatisticsInfo
    java.util.List selectStatisticsInfo(android.database.sqlite.SQLiteDatabase,int) -> selectStatisticsInfo
    java.util.List getPushBehaviorInfoByAppId(android.database.sqlite.SQLiteDatabase,java.lang.String) -> getPushBehaviorInfoByAppId
    java.util.List getApiBehaviorInfoByAppId(android.database.sqlite.SQLiteDatabase,java.lang.String) -> getApiBehaviorInfoByAppId
    java.util.List getPromptBehaviorInfo(android.database.sqlite.SQLiteDatabase) -> getPromptBehaviorInfo
    java.util.List getPushBehaviorInfo(android.database.sqlite.SQLiteDatabase,int) -> getPushBehaviorInfo
    com.baidu.android.pushservice.b.b needToInsertUpdate(android.database.sqlite.SQLiteDatabase,com.baidu.android.pushservice.b.b) -> needToInsertUpdate
    java.util.List getAppInfo(android.database.sqlite.SQLiteDatabase) -> getAppInfo
    java.util.List selectFileDownloadingInfo(android.database.sqlite.SQLiteDatabase) -> selectFileDownloadingInfo
    com.baidu.android.pushservice.util.j getFileDownloadingInfo(android.database.sqlite.SQLiteDatabase,java.lang.String) -> getFileDownloadingInfo
    int getStatisticsInfoCounts(android.database.sqlite.SQLiteDatabase) -> getStatisticsInfoCounts
    int getBehaviorInfoCounts(android.database.sqlite.SQLiteDatabase) -> getBehaviorInfoCounts
    int getFileDownloadingInfoCounts(android.database.sqlite.SQLiteDatabase) -> getFileDownloadingInfoCounts
    int deleteStatisticsInfo(android.database.sqlite.SQLiteDatabase,int) -> deleteStatisticsInfo
    void deleteOldBehaviors(android.database.sqlite.SQLiteDatabase) -> deleteOldBehaviors
    int deleteBehavior(android.database.sqlite.SQLiteDatabase,int) -> deleteBehavior
    int deleteFileDownloadingInfo(android.database.sqlite.SQLiteDatabase,java.lang.String) -> deleteFileDownloadingInfo
    long insertPushBehavior(android.database.sqlite.SQLiteDatabase,com.baidu.android.pushservice.b.j) -> insertPushBehavior
    long insertApiBehavior(android.database.sqlite.SQLiteDatabase,com.baidu.android.pushservice.b.a) -> insertApiBehavior
    long insertPromptBehavior(android.database.sqlite.SQLiteDatabase,com.baidu.android.pushservice.b.i) -> insertPromptBehavior
    int updateBehavior(android.database.sqlite.SQLiteDatabase,int,com.baidu.android.pushservice.b.f) -> updateBehavior
    long insertAppInfo(android.database.sqlite.SQLiteDatabase,com.baidu.android.pushservice.b.b) -> insertAppInfo
    int updateAppInfo(android.database.sqlite.SQLiteDatabase,int,com.baidu.android.pushservice.b.b) -> updateAppInfo
    long insertStatisticsInfo(android.database.sqlite.SQLiteDatabase,com.baidu.android.pushservice.util.k) -> insertStatisticsInfo
    long insertFileDownloadingInfo(android.database.sqlite.SQLiteDatabase,com.baidu.android.pushservice.util.j) -> insertFileDownloadingInfo
    long clearStatisticsInfo(android.database.sqlite.SQLiteDatabase) -> clearStatisticsInfo
    long clearFileDownloadingInfo(android.database.sqlite.SQLiteDatabase) -> clearFileDownloadingInfo
    long clearAppInfo(android.database.sqlite.SQLiteDatabase) -> clearAppInfo
    long clearBehaviorInfo(android.database.sqlite.SQLiteDatabase) -> clearBehaviorInfo
    int updateStatisticsInfo(android.database.sqlite.SQLiteDatabase,int,com.baidu.android.pushservice.util.k) -> updateStatisticsInfo
    int updateFileDownloadingInfo(android.database.sqlite.SQLiteDatabase,java.lang.String,com.baidu.android.pushservice.util.j) -> updateFileDownloadingInfo
    com.baidu.android.pushservice.util.h getDbOpenHelper(android.content.Context) -> getDbOpenHelper
com.baidu.android.pushservice.util.a -> com.baidu.android.pushservice.util.a:
    java.io.DataInputStream b -> b
    byte[] a -> a
    int a(int) -> a
    int a() -> a
    short b() -> b
    com.baidu.android.pushservice.util.b c() -> c
    void a(byte[]) -> a
com.baidu.android.pushservice.util.b -> com.baidu.android.pushservice.util.b:
    java.lang.String a -> a
    long b -> b
com.baidu.android.pushservice.util.c -> com.baidu.android.pushservice.util.c:
    java.io.DataOutputStream b -> b
    byte[] a -> a
    void a(int) -> a
    void b(int) -> b
    void a() -> a
    void a(byte[]) -> a
    void a(long) -> a
com.baidu.android.pushservice.util.d -> com.baidu.android.pushservice.util.d:
    java.util.concurrent.ThreadFactory a -> a
    java.lang.String b -> b
    java.util.concurrent.atomic.AtomicInteger c -> c
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
    java.lang.String a(int) -> a
com.baidu.android.pushservice.util.e -> com.baidu.android.pushservice.util.e:
    com.baidu.android.pushservice.util.e a -> a
    com.baidu.android.pushservice.util.e b -> b
    com.baidu.android.pushservice.util.e c -> c
    com.baidu.android.pushservice.util.e d -> d
    com.baidu.android.pushservice.util.e e -> e
    com.baidu.android.pushservice.util.e f -> f
    com.baidu.android.pushservice.util.e g -> g
    com.baidu.android.pushservice.util.e h -> h
    com.baidu.android.pushservice.util.e i -> i
    com.baidu.android.pushservice.util.e j -> j
    com.baidu.android.pushservice.util.e[] k -> k
    com.baidu.android.pushservice.util.e[] values() -> values
    com.baidu.android.pushservice.util.e valueOf(java.lang.String) -> valueOf
com.baidu.android.pushservice.util.f -> com.baidu.android.pushservice.util.f:
    com.baidu.android.pushservice.util.f a -> a
    com.baidu.android.pushservice.util.f b -> b
    com.baidu.android.pushservice.util.f c -> c
    com.baidu.android.pushservice.util.f d -> d
    com.baidu.android.pushservice.util.f e -> e
    com.baidu.android.pushservice.util.f f -> f
    com.baidu.android.pushservice.util.f g -> g
    com.baidu.android.pushservice.util.f h -> h
    com.baidu.android.pushservice.util.f i -> i
    com.baidu.android.pushservice.util.f j -> j
    com.baidu.android.pushservice.util.f k -> k
    com.baidu.android.pushservice.util.f l -> l
    com.baidu.android.pushservice.util.f[] m -> m
    com.baidu.android.pushservice.util.f[] values() -> values
    com.baidu.android.pushservice.util.f valueOf(java.lang.String) -> valueOf
com.baidu.android.pushservice.util.g -> com.baidu.android.pushservice.util.g:
    java.io.File getDatabasePath(java.lang.String) -> getDatabasePath
    android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,int,android.database.sqlite.SQLiteDatabase$CursorFactory) -> openOrCreateDatabase
com.baidu.android.pushservice.util.h -> com.baidu.android.pushservice.util.h:
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    void a(android.database.sqlite.SQLiteDatabase) -> a
com.baidu.android.pushservice.util.i -> com.baidu.android.pushservice.util.i:
    com.baidu.android.pushservice.util.i a -> a
    com.baidu.android.pushservice.util.i b -> b
    com.baidu.android.pushservice.util.i c -> c
    com.baidu.android.pushservice.util.i d -> d
    com.baidu.android.pushservice.util.i e -> e
    com.baidu.android.pushservice.util.i f -> f
    com.baidu.android.pushservice.util.i g -> g
    com.baidu.android.pushservice.util.i h -> h
    com.baidu.android.pushservice.util.i i -> i
    com.baidu.android.pushservice.util.i j -> j
    com.baidu.android.pushservice.util.i[] k -> k
    com.baidu.android.pushservice.util.i[] values() -> values
    com.baidu.android.pushservice.util.i valueOf(java.lang.String) -> valueOf
com.baidu.android.pushservice.util.j -> com.baidu.android.pushservice.util.j:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    int g -> g
    int h -> h
    int i -> i
    long j -> j
com.baidu.android.pushservice.util.k -> com.baidu.android.pushservice.util.k:
    int a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    org.json.JSONObject h -> h
com.baidu.android.pushservice.util.l -> com.baidu.android.pushservice.util.l:
    com.baidu.android.pushservice.util.l a -> a
    com.baidu.android.pushservice.util.l b -> b
    com.baidu.android.pushservice.util.l c -> c
    com.baidu.android.pushservice.util.l d -> d
    com.baidu.android.pushservice.util.l e -> e
    com.baidu.android.pushservice.util.l f -> f
    com.baidu.android.pushservice.util.l g -> g
    com.baidu.android.pushservice.util.l h -> h
    com.baidu.android.pushservice.util.l[] i -> i
    com.baidu.android.pushservice.util.l[] values() -> values
    com.baidu.android.pushservice.util.l valueOf(java.lang.String) -> valueOf
com.baidu.android.pushservice.util.m -> com.baidu.android.pushservice.util.m:
    java.lang.String[] a -> a
    boolean a(android.content.Context) -> a
    android.content.pm.PackageInfo a(android.content.Context,java.lang.String) -> a
    android.content.Intent b(android.content.Context,java.lang.String) -> b
    boolean c(android.content.Context,java.lang.String) -> c
    int[] b(android.content.Context) -> b
    int d(android.content.Context,java.lang.String) -> d
    boolean e(android.content.Context,java.lang.String) -> e
    boolean f(android.content.Context,java.lang.String) -> f
    boolean c(android.content.Context) -> c
    void a(android.content.Context,android.content.Intent,long) -> a
    android.content.Intent d(android.content.Context) -> d
    android.content.Intent e(android.content.Context) -> e
    java.lang.String a(android.content.Context,java.lang.String,java.lang.String) -> a
    boolean b(android.content.Context,java.lang.String,java.lang.String) -> b
    void f(android.content.Context) -> f
    boolean g(android.content.Context) -> g
    boolean a(java.lang.String,java.lang.String[]) -> a
    boolean a(java.lang.String,java.util.List) -> a
    boolean c(android.content.Context,java.lang.String,java.lang.String) -> c
    boolean h(android.content.Context) -> h
    void a(android.content.Context,long) -> a
    void i(android.content.Context) -> i
    void a(android.content.Context,boolean) -> a
    void b(android.content.Context,boolean) -> b
    void g(android.content.Context,java.lang.String) -> g
    void j(android.content.Context) -> j
    long k(android.content.Context) -> k
    void c(android.content.Context,boolean) -> c
    boolean l(android.content.Context) -> l
    boolean m(android.content.Context) -> m
    java.util.List n(android.content.Context) -> n
    boolean o(android.content.Context) -> o
    java.lang.String p(android.content.Context) -> p
    java.util.ArrayList t(android.content.Context) -> t
    java.util.ArrayList q(android.content.Context) -> q
    void a(java.lang.String) -> a
    java.lang.String a(long) -> a
    java.lang.String a(java.lang.Throwable) -> a
    com.baidu.android.pushservice.b.b a(com.baidu.android.pushservice.b.b,android.content.Context,java.lang.String) -> a
    int h(android.content.Context,java.lang.String) -> h
    int r(android.content.Context) -> r
    java.lang.String b(java.lang.String) -> b
    long s(android.content.Context) -> s
    java.lang.String i(android.content.Context,java.lang.String) -> i
com.baidu.android.pushservice.util.n -> com.baidu.android.pushservice.util.n:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.baidu.android.pushservice.v -> com.baidu.android.pushservice.v:
    com.baidu.android.pushservice.PushTestActivity a -> a
    void onClick(android.view.View) -> onClick
com.baidu.android.pushservice.w -> com.baidu.android.pushservice.w:
    java.lang.String i -> i
    java.lang.String j -> j
    int k -> k
    java.lang.String l -> l
    java.lang.String a -> a
    java.lang.String b -> b
    int c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    void a() -> a
com.baidu.android.pushservice.x -> com.baidu.android.pushservice.x:
    android.content.Context a -> a
    com.baidu.android.pushservice.b.s b -> b
    java.util.concurrent.ExecutorService c -> c
    boolean a(android.content.Intent) -> a
    void b(android.content.Intent) -> b
    void c(android.content.Intent) -> c
    void d(android.content.Intent) -> d
    void e(android.content.Intent) -> e
    void f(android.content.Intent) -> f
    void g(android.content.Intent) -> g
    void h(android.content.Intent) -> h
    void i(android.content.Intent) -> i
    void j(android.content.Intent) -> j
    void k(android.content.Intent) -> k
    void l(android.content.Intent) -> l
    void m(android.content.Intent) -> m
    void n(android.content.Intent) -> n
    void o(android.content.Intent) -> o
    void p(android.content.Intent) -> p
    void q(android.content.Intent) -> q
    void r(android.content.Intent) -> r
    void s(android.content.Intent) -> s
    void t(android.content.Intent) -> t
    void u(android.content.Intent) -> u
    void v(android.content.Intent) -> v
    void w(android.content.Intent) -> w
    void a(com.baidu.android.pushservice.a.a) -> a
    void a(java.lang.String,int,java.lang.String) -> a
    java.lang.String a() -> a
com.baidu.android.pushservice.y -> com.baidu.android.pushservice.y:
    com.baidu.android.pushservice.y a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.Thread d -> d
    boolean e -> e
    com.baidu.android.pushservice.y a() -> a
    boolean b() -> b
    void a(boolean) -> a
    void a(android.content.Context,boolean) -> a
    java.lang.String c() -> c
    java.lang.String d() -> d
    void a(java.lang.String,java.lang.String) -> a
    boolean e() -> e
com.baidu.loctp.str.BDLocManager -> com.baidu.a.a.a:
    long a -> a
    android.content.Context b -> b
    android.telephony.TelephonyManager c -> c
    com.baidu.loctp.str.BDLocManager$a d -> d
    java.lang.reflect.Method e -> e
    java.lang.reflect.Method f -> f
    java.lang.reflect.Method g -> g
    java.lang.Class h -> h
    android.net.wifi.WifiManager i -> i
    com.baidu.loctp.str.BDLocManager$WifiList j -> j
    java.lang.Object k -> k
    java.lang.reflect.Method l -> l
    boolean m -> m
    long n -> n
    java.lang.String o -> o
    int p -> p
    java.lang.String q -> q
    char[] r -> r
    java.lang.String getLocString(int) -> a
    java.lang.String a(int) -> b
    boolean a() -> a
    java.lang.String a(java.lang.String) -> a
    java.lang.String a(byte[]) -> a
com.baidu.loctp.str.BDLocManager$WifiList -> com.baidu.a.a.b:
    java.util.List _WifiList -> a
    long b -> c
    com.baidu.loctp.str.BDLocManager a -> b
    int size() -> a
    void a() -> b
    boolean a(com.baidu.loctp.str.BDLocManager$WifiList) -> a
com.baidu.loctp.str.BDLocManager$a -> com.baidu.a.a.c:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    char e -> e
    com.baidu.loctp.str.BDLocManager f -> f
    boolean a() -> a
    java.lang.String toString() -> toString
    boolean a(com.baidu.loctp.str.BDLocManager$a) -> a
com.sun.activation.registries.LineTokenizer -> com.sun.activation.registries.LineTokenizer:
    int currentPosition -> currentPosition
    int maxPosition -> maxPosition
    java.lang.String str -> str
    java.util.Vector stack -> stack
    java.lang.String singles -> singles
    void skipWhiteSpace() -> skipWhiteSpace
    boolean hasMoreTokens() -> hasMoreTokens
    java.lang.String nextToken() -> nextToken
    void pushToken(java.lang.String) -> pushToken
com.sun.activation.registries.LogSupport -> com.sun.activation.registries.LogSupport:
    boolean debug -> debug
    java.util.logging.Logger logger -> logger
    java.util.logging.Level level -> level
    void log(java.lang.String) -> log
    void log(java.lang.String,java.lang.Throwable) -> log
    boolean isLoggable() -> isLoggable
com.sun.activation.registries.MailcapFile -> com.sun.activation.registries.MailcapFile:
    java.util.Map type_hash -> type_hash
    java.util.Map fallback_hash -> fallback_hash
    java.util.Map native_commands -> native_commands
    boolean addReverse -> addReverse
    java.util.Map getMailcapList(java.lang.String) -> getMailcapList
    java.util.Map getMailcapFallbackList(java.lang.String) -> getMailcapFallbackList
    java.lang.String[] getMimeTypes() -> getMimeTypes
    java.lang.String[] getNativeCommands(java.lang.String) -> getNativeCommands
    java.util.Map mergeResults(java.util.Map,java.util.Map) -> mergeResults
    void appendToMailcap(java.lang.String) -> appendToMailcap
    void parse(java.io.Reader) -> parse
    void parseLine(java.lang.String) -> parseLine
    void reportParseError(int,int,java.lang.String) -> reportParseError
    void reportParseError(int,int,int,java.lang.String) -> reportParseError
    void reportParseError(int,int,int,int,java.lang.String) -> reportParseError
com.sun.activation.registries.MailcapParseException -> com.sun.activation.registries.MailcapParseException:
com.sun.activation.registries.MailcapTokenizer -> com.sun.activation.registries.MailcapTokenizer:
    int UNKNOWN_TOKEN -> UNKNOWN_TOKEN
    int START_TOKEN -> START_TOKEN
    int STRING_TOKEN -> STRING_TOKEN
    int EOI_TOKEN -> EOI_TOKEN
    int SLASH_TOKEN -> SLASH_TOKEN
    int SEMICOLON_TOKEN -> SEMICOLON_TOKEN
    int EQUALS_TOKEN -> EQUALS_TOKEN
    java.lang.String data -> data
    int dataIndex -> dataIndex
    int dataLength -> dataLength
    int currentToken -> currentToken
    java.lang.String currentTokenValue -> currentTokenValue
    boolean isAutoquoting -> isAutoquoting
    char autoquoteChar -> autoquoteChar
    void setIsAutoquoting(boolean) -> setIsAutoquoting
    int getCurrentToken() -> getCurrentToken
    java.lang.String nameForToken(int) -> nameForToken
    java.lang.String getCurrentTokenValue() -> getCurrentTokenValue
    int nextToken() -> nextToken
    void processStringToken() -> processStringToken
    void processAutoquoteToken() -> processAutoquoteToken
    boolean isSpecialChar(char) -> isSpecialChar
    boolean isControlChar(char) -> isControlChar
    boolean isWhiteSpaceChar(char) -> isWhiteSpaceChar
    boolean isStringTokenChar(char) -> isStringTokenChar
    java.lang.String fixEscapeSequences(java.lang.String) -> fixEscapeSequences
com.sun.activation.registries.MimeTypeEntry -> com.sun.activation.registries.MimeTypeEntry:
    java.lang.String type -> type
    java.lang.String extension -> extension
    java.lang.String getMIMEType() -> getMIMEType
    java.lang.String getFileExtension() -> getFileExtension
    java.lang.String toString() -> toString
com.sun.activation.registries.MimeTypeFile -> com.sun.activation.registries.MimeTypeFile:
    java.lang.String fname -> fname
    java.util.Hashtable type_hash -> type_hash
    com.sun.activation.registries.MimeTypeEntry getMimeTypeEntry(java.lang.String) -> getMimeTypeEntry
    java.lang.String getMIMETypeString(java.lang.String) -> getMIMETypeString
    void appendToRegistry(java.lang.String) -> appendToRegistry
    void parse(java.io.BufferedReader) -> parse
    void parseEntry(java.lang.String) -> parseEntry
com.sun.mail.dsn.DeliveryStatus -> com.sun.mail.dsn.DeliveryStatus:
    boolean debug -> debug
    javax.mail.internet.InternetHeaders messageDSN -> messageDSN
    javax.mail.internet.InternetHeaders[] recipientDSN -> recipientDSN
    javax.mail.internet.InternetHeaders getMessageDSN() -> getMessageDSN
    void setMessageDSN(javax.mail.internet.InternetHeaders) -> setMessageDSN
    int getRecipientDSNCount() -> getRecipientDSNCount
    javax.mail.internet.InternetHeaders getRecipientDSN(int) -> getRecipientDSN
    void addRecipientDSN(javax.mail.internet.InternetHeaders) -> addRecipientDSN
    void writeTo(java.io.OutputStream) -> writeTo
    void writeInternetHeaders(javax.mail.internet.InternetHeaders,com.sun.mail.util.LineOutputStream) -> writeInternetHeaders
    java.lang.String toString() -> toString
com.sun.mail.dsn.MessageHeaders -> com.sun.mail.dsn.MessageHeaders:
    int getSize() -> getSize
    java.io.InputStream getInputStream() -> getInputStream
    java.io.InputStream getContentStream() -> getContentStream
    void setDataHandler(javax.activation.DataHandler) -> setDataHandler
com.sun.mail.dsn.MultipartReport -> com.sun.mail.dsn.MultipartReport:
    boolean constructed -> constructed
    java.lang.String getText() -> getText
    void setText(java.lang.String) -> setText
    javax.mail.internet.MimeBodyPart getTextBodyPart() -> getTextBodyPart
    void setTextBodyPart(javax.mail.internet.MimeBodyPart) -> setTextBodyPart
    com.sun.mail.dsn.DeliveryStatus getDeliveryStatus() -> getDeliveryStatus
    void setDeliveryStatus(com.sun.mail.dsn.DeliveryStatus) -> setDeliveryStatus
    javax.mail.internet.MimeMessage getReturnedMessage() -> getReturnedMessage
    void setReturnedMessage(javax.mail.internet.MimeMessage) -> setReturnedMessage
    void setBodyPart(javax.mail.BodyPart,int) -> setBodyPart
    void setSubType(java.lang.String) -> setSubType
    boolean removeBodyPart(javax.mail.BodyPart) -> removeBodyPart
    void removeBodyPart(int) -> removeBodyPart
    void addBodyPart(javax.mail.BodyPart) -> addBodyPart
    void addBodyPart(javax.mail.BodyPart,int) -> addBodyPart
com.sun.mail.dsn.message_deliverystatus -> com.sun.mail.dsn.message_deliverystatus:
    javax.activation.ActivationDataFlavor ourDataFlavor -> ourDataFlavor
    myjava.awt.datatransfer.DataFlavor[] getTransferDataFlavors() -> getTransferDataFlavors
    java.lang.Object getTransferData(myjava.awt.datatransfer.DataFlavor,javax.activation.DataSource) -> getTransferData
    java.lang.Object getContent(javax.activation.DataSource) -> getContent
    void writeTo(java.lang.Object,java.lang.String,java.io.OutputStream) -> writeTo
com.sun.mail.dsn.multipart_report -> com.sun.mail.dsn.multipart_report:
    javax.activation.ActivationDataFlavor myDF -> myDF
    myjava.awt.datatransfer.DataFlavor[] getTransferDataFlavors() -> getTransferDataFlavors
    java.lang.Object getTransferData(myjava.awt.datatransfer.DataFlavor,javax.activation.DataSource) -> getTransferData
    java.lang.Object getContent(javax.activation.DataSource) -> getContent
    void writeTo(java.lang.Object,java.lang.String,java.io.OutputStream) -> writeTo
com.sun.mail.dsn.text_rfc822headers -> com.sun.mail.dsn.text_rfc822headers:
    javax.activation.ActivationDataFlavor myDF -> myDF
    javax.activation.ActivationDataFlavor myDFs -> myDFs
    myjava.awt.datatransfer.DataFlavor[] getTransferDataFlavors() -> getTransferDataFlavors
    java.lang.Object getTransferData(myjava.awt.datatransfer.DataFlavor,javax.activation.DataSource) -> getTransferData
    java.lang.Object getContent(javax.activation.DataSource) -> getContent
    java.lang.Object getStringContent(javax.activation.DataSource) -> getStringContent
    void writeTo(java.lang.Object,java.lang.String,java.io.OutputStream) -> writeTo
    java.lang.String getCharset(java.lang.String) -> getCharset
com.sun.mail.handlers.message_rfc822 -> com.sun.mail.handlers.message_rfc822:
    javax.activation.ActivationDataFlavor ourDataFlavor -> ourDataFlavor
    myjava.awt.datatransfer.DataFlavor[] getTransferDataFlavors() -> getTransferDataFlavors
    java.lang.Object getTransferData(myjava.awt.datatransfer.DataFlavor,javax.activation.DataSource) -> getTransferData
    java.lang.Object getContent(javax.activation.DataSource) -> getContent
    void writeTo(java.lang.Object,java.lang.String,java.io.OutputStream) -> writeTo
com.sun.mail.handlers.multipart_mixed -> com.sun.mail.handlers.multipart_mixed:
    javax.activation.ActivationDataFlavor myDF -> myDF
    myjava.awt.datatransfer.DataFlavor[] getTransferDataFlavors() -> getTransferDataFlavors
    java.lang.Object getTransferData(myjava.awt.datatransfer.DataFlavor,javax.activation.DataSource) -> getTransferData
    java.lang.Object getContent(javax.activation.DataSource) -> getContent
    void writeTo(java.lang.Object,java.lang.String,java.io.OutputStream) -> writeTo
com.sun.mail.handlers.text_html -> com.sun.mail.handlers.text_html:
    javax.activation.ActivationDataFlavor myDF -> myDF
    javax.activation.ActivationDataFlavor getDF() -> getDF
com.sun.mail.handlers.text_plain -> com.sun.mail.handlers.text_plain:
    javax.activation.ActivationDataFlavor myDF -> myDF
    javax.activation.ActivationDataFlavor getDF() -> getDF
    myjava.awt.datatransfer.DataFlavor[] getTransferDataFlavors() -> getTransferDataFlavors
    java.lang.Object getTransferData(myjava.awt.datatransfer.DataFlavor,javax.activation.DataSource) -> getTransferData
    java.lang.Object getContent(javax.activation.DataSource) -> getContent
    void writeTo(java.lang.Object,java.lang.String,java.io.OutputStream) -> writeTo
    java.lang.String getCharset(java.lang.String) -> getCharset
com.sun.mail.handlers.text_xml -> com.sun.mail.handlers.text_xml:
    javax.activation.ActivationDataFlavor myDF -> myDF
    javax.activation.ActivationDataFlavor getDF() -> getDF
com.sun.mail.iap.AString -> com.sun.mail.iap.AString:
    byte[] bytes -> bytes
com.sun.mail.iap.Argument -> com.sun.mail.iap.Argument:
    java.util.Vector items -> items
    void append(com.sun.mail.iap.Argument) -> append
    void writeString(java.lang.String) -> writeString
    void writeString(java.lang.String,java.lang.String) -> writeString
    void writeBytes(byte[]) -> writeBytes
    void writeBytes(java.io.ByteArrayOutputStream) -> writeBytes
    void writeBytes(com.sun.mail.iap.Literal) -> writeBytes
    void writeAtom(java.lang.String) -> writeAtom
    void writeNumber(int) -> writeNumber
    void writeNumber(long) -> writeNumber
    void writeArgument(com.sun.mail.iap.Argument) -> writeArgument
    void write(com.sun.mail.iap.Protocol) -> write
    void astring(byte[],com.sun.mail.iap.Protocol) -> astring
    void literal(byte[],com.sun.mail.iap.Protocol) -> literal
    void literal(java.io.ByteArrayOutputStream,com.sun.mail.iap.Protocol) -> literal
    void literal(com.sun.mail.iap.Literal,com.sun.mail.iap.Protocol) -> literal
    java.io.OutputStream startLiteral(com.sun.mail.iap.Protocol,int) -> startLiteral
com.sun.mail.iap.Atom -> com.sun.mail.iap.Atom:
    java.lang.String string -> string
com.sun.mail.iap.BadCommandException -> com.sun.mail.iap.BadCommandException:
    long serialVersionUID -> serialVersionUID
com.sun.mail.iap.ByteArray -> com.sun.mail.iap.ByteArray:
    byte[] bytes -> bytes
    int start -> start
    int count -> count
    byte[] getBytes() -> getBytes
    byte[] getNewBytes() -> getNewBytes
    int getStart() -> getStart
    int getCount() -> getCount
    void setCount(int) -> setCount
    java.io.ByteArrayInputStream toByteArrayInputStream() -> toByteArrayInputStream
    void grow(int) -> grow
com.sun.mail.iap.CommandFailedException -> com.sun.mail.iap.CommandFailedException:
    long serialVersionUID -> serialVersionUID
com.sun.mail.iap.ConnectionException -> com.sun.mail.iap.ConnectionException:
    com.sun.mail.iap.Protocol p -> p
    long serialVersionUID -> serialVersionUID
    com.sun.mail.iap.Protocol getProtocol() -> getProtocol
com.sun.mail.iap.Literal -> com.sun.mail.iap.Literal:
    int size() -> size
    void writeTo(java.io.OutputStream) -> writeTo
com.sun.mail.iap.LiteralException -> com.sun.mail.iap.LiteralException:
    long serialVersionUID -> serialVersionUID
com.sun.mail.iap.ParsingException -> com.sun.mail.iap.ParsingException:
    long serialVersionUID -> serialVersionUID
com.sun.mail.iap.Protocol -> com.sun.mail.iap.Protocol:
    java.lang.String host -> host
    java.net.Socket socket -> socket
    boolean debug -> debug
    boolean quote -> quote
    java.io.PrintStream out -> out
    java.util.Properties props -> props
    java.lang.String prefix -> prefix
    boolean connected -> connected
    com.sun.mail.util.TraceInputStream traceInput -> traceInput
    com.sun.mail.iap.ResponseInputStream input -> input
    com.sun.mail.util.TraceOutputStream traceOutput -> traceOutput
    java.io.DataOutputStream output -> output
    int tagCounter -> tagCounter
    java.util.Vector handlers -> handlers
    long timestamp -> timestamp
    byte[] CRLF -> CRLF
    void initStreams(java.io.PrintStream) -> initStreams
    long getTimestamp() -> getTimestamp
    void addResponseHandler(com.sun.mail.iap.ResponseHandler) -> addResponseHandler
    void removeResponseHandler(com.sun.mail.iap.ResponseHandler) -> removeResponseHandler
    void notifyResponseHandlers(com.sun.mail.iap.Response[]) -> notifyResponseHandlers
    void processGreeting(com.sun.mail.iap.Response) -> processGreeting
    com.sun.mail.iap.ResponseInputStream getInputStream() -> getInputStream
    java.io.OutputStream getOutputStream() -> getOutputStream
    boolean supportsNonSyncLiterals() -> supportsNonSyncLiterals
    com.sun.mail.iap.Response readResponse() -> readResponse
    com.sun.mail.iap.ByteArray getResponseBuffer() -> getResponseBuffer
    java.lang.String writeCommand(java.lang.String,com.sun.mail.iap.Argument) -> writeCommand
    com.sun.mail.iap.Response[] command(java.lang.String,com.sun.mail.iap.Argument) -> command
    void handleResult(com.sun.mail.iap.Response) -> handleResult
    void simpleCommand(java.lang.String,com.sun.mail.iap.Argument) -> simpleCommand
    void startTLS(java.lang.String) -> startTLS
    void disconnect() -> disconnect
    void finalize() -> finalize
com.sun.mail.iap.ProtocolException -> com.sun.mail.iap.ProtocolException:
    com.sun.mail.iap.Response response -> response
    long serialVersionUID -> serialVersionUID
    com.sun.mail.iap.Response getResponse() -> getResponse
com.sun.mail.iap.Response -> com.sun.mail.iap.Response:
    int index -> index
    int pindex -> pindex
    int size -> size
    byte[] buffer -> buffer
    int type -> type
    java.lang.String tag -> tag
    int increment -> increment
    int TAG_MASK -> TAG_MASK
    int CONTINUATION -> CONTINUATION
    int TAGGED -> TAGGED
    int UNTAGGED -> UNTAGGED
    int TYPE_MASK -> TYPE_MASK
    int OK -> OK
    int NO -> NO
    int BAD -> BAD
    int BYE -> BYE
    int SYNTHETIC -> SYNTHETIC
    com.sun.mail.iap.Response byeResponse(java.lang.Exception) -> byeResponse
    void parse() -> parse
    void skipSpaces() -> skipSpaces
    void skipToken() -> skipToken
    void skip(int) -> skip
    byte peekByte() -> peekByte
    byte readByte() -> readByte
    java.lang.String readAtom() -> readAtom
    java.lang.String readAtom(char) -> readAtom
    java.lang.String readString(char) -> readString
    java.lang.String[] readStringList() -> readStringList
    int readNumber() -> readNumber
    long readLong() -> readLong
    java.lang.String readString() -> readString
    java.io.ByteArrayInputStream readBytes() -> readBytes
    com.sun.mail.iap.ByteArray readByteArray() -> readByteArray
    java.lang.String readAtomString() -> readAtomString
    java.lang.Object parseString(boolean,boolean) -> parseString
    int getType() -> getType
    boolean isContinuation() -> isContinuation
    boolean isTagged() -> isTagged
    boolean isUnTagged() -> isUnTagged
    boolean isOK() -> isOK
    boolean isNO() -> isNO
    boolean isBAD() -> isBAD
    boolean isBYE() -> isBYE
    boolean isSynthetic() -> isSynthetic
    java.lang.String getTag() -> getTag
    java.lang.String getRest() -> getRest
    void reset() -> reset
    java.lang.String toString() -> toString
com.sun.mail.iap.ResponseHandler -> com.sun.mail.iap.ResponseHandler:
    void handleResponse(com.sun.mail.iap.Response) -> handleResponse
com.sun.mail.iap.ResponseInputStream -> com.sun.mail.iap.ResponseInputStream:
    int minIncrement -> minIncrement
    int maxIncrement -> maxIncrement
    int incrementSlop -> incrementSlop
    java.io.BufferedInputStream bin -> bin
    com.sun.mail.iap.ByteArray readResponse() -> readResponse
    com.sun.mail.iap.ByteArray readResponse(com.sun.mail.iap.ByteArray) -> readResponse
com.sun.mail.imap.ACL -> com.sun.mail.imap.ACL:
    java.lang.String name -> name
    com.sun.mail.imap.Rights rights -> rights
    java.lang.String getName() -> getName
    void setRights(com.sun.mail.imap.Rights) -> setRights
    com.sun.mail.imap.Rights getRights() -> getRights
    java.lang.Object clone() -> clone
com.sun.mail.imap.AppendUID -> com.sun.mail.imap.AppendUID:
    long uidvalidity -> uidvalidity
    long uid -> uid
com.sun.mail.imap.DefaultFolder -> com.sun.mail.imap.DefaultFolder:
    java.lang.String getName() -> getName
    javax.mail.Folder getParent() -> getParent
    javax.mail.Folder[] list(java.lang.String) -> list
    javax.mail.Folder[] listSubscribed(java.lang.String) -> listSubscribed
    boolean hasNewMessages() -> hasNewMessages
    javax.mail.Folder getFolder(java.lang.String) -> getFolder
    boolean delete(boolean) -> delete
    boolean renameTo(javax.mail.Folder) -> renameTo
    void appendMessages(javax.mail.Message[]) -> appendMessages
    javax.mail.Message[] expunge() -> expunge
com.sun.mail.imap.DefaultFolder$1 -> com.sun.mail.imap.DefaultFolder$1:
    com.sun.mail.imap.DefaultFolder this$0 -> this$0
    java.lang.String val$pattern -> val$pattern
    java.lang.Object doCommand(com.sun.mail.imap.protocol.IMAPProtocol) -> doCommand
com.sun.mail.imap.DefaultFolder$2 -> com.sun.mail.imap.DefaultFolder$2:
    com.sun.mail.imap.DefaultFolder this$0 -> this$0
    java.lang.String val$pattern -> val$pattern
    java.lang.Object doCommand(com.sun.mail.imap.protocol.IMAPProtocol) -> doCommand
com.sun.mail.imap.IMAPBodyPart -> com.sun.mail.imap.IMAPBodyPart:
    com.sun.mail.imap.IMAPMessage message -> message
    com.sun.mail.imap.protocol.BODYSTRUCTURE bs -> bs
    java.lang.String sectionId -> sectionId
    java.lang.String type -> type
    java.lang.String description -> description
    boolean headersLoaded -> headersLoaded
    void updateHeaders() -> updateHeaders
    int getSize() -> getSize
    int getLineCount() -> getLineCount
    java.lang.String getContentType() -> getContentType
    java.lang.String getDisposition() -> getDisposition
    void setDisposition(java.lang.String) -> setDisposition
    java.lang.String getEncoding() -> getEncoding
    java.lang.String getContentID() -> getContentID
    java.lang.String getContentMD5() -> getContentMD5
    void setContentMD5(java.lang.String) -> setContentMD5
    java.lang.String getDescription() -> getDescription
    void setDescription(java.lang.String,java.lang.String) -> setDescription
    java.lang.String getFileName() -> getFileName
    void setFileName(java.lang.String) -> setFileName
    java.io.InputStream getContentStream() -> getContentStream
    javax.activation.DataHandler getDataHandler() -> getDataHandler
    void setDataHandler(javax.activation.DataHandler) -> setDataHandler
    void setContent(java.lang.Object,java.lang.String) -> setContent
    void setContent(javax.mail.Multipart) -> setContent
    java.lang.String[] getHeader(java.lang.String) -> getHeader
    void setHeader(java.lang.String,java.lang.String) -> setHeader
    void addHeader(java.lang.String,java.lang.String) -> addHeader
    void removeHeader(java.lang.String) -> removeHeader
    java.util.Enumeration getAllHeaders() -> getAllHeaders
    java.util.Enumeration getMatchingHeaders(java.lang.String[]) -> getMatchingHeaders
    java.util.Enumeration getNonMatchingHeaders(java.lang.String[]) -> getNonMatchingHeaders
    void addHeaderLine(java.lang.String) -> addHeaderLine
    java.util.Enumeration getAllHeaderLines() -> getAllHeaderLines
    java.util.Enumeration getMatchingHeaderLines(java.lang.String[]) -> getMatchingHeaderLines
    java.util.Enumeration getNonMatchingHeaderLines(java.lang.String[]) -> getNonMatchingHeaderLines
    void loadHeaders() -> loadHeaders
com.sun.mail.imap.IMAPFolder -> com.sun.mail.imap.IMAPFolder:
    java.lang.String fullName -> fullName
    java.lang.String name -> name
    int type -> type
    char separator -> separator
    javax.mail.Flags availableFlags -> availableFlags
    javax.mail.Flags permanentFlags -> permanentFlags
    boolean exists -> exists
    boolean isNamespace -> isNamespace
    java.lang.String[] attributes -> attributes
    com.sun.mail.imap.protocol.IMAPProtocol protocol -> protocol
    java.util.Vector messageCache -> messageCache
    java.lang.Object messageCacheLock -> messageCacheLock
    java.util.Hashtable uidTable -> uidTable
    char UNKNOWN_SEPARATOR -> UNKNOWN_SEPARATOR
    boolean opened -> opened
    boolean reallyClosed -> reallyClosed
    int RUNNING -> RUNNING
    int IDLE -> IDLE
    int ABORTING -> ABORTING
    int idleState -> idleState
    int total -> total
    int recent -> recent
    int realTotal -> realTotal
    long uidvalidity -> uidvalidity
    long uidnext -> uidnext
    boolean doExpungeNotification -> doExpungeNotification
    com.sun.mail.imap.protocol.Status cachedStatus -> cachedStatus
    long cachedStatusTime -> cachedStatusTime
    boolean debug -> debug
    java.io.PrintStream out -> out
    boolean connectionPoolDebug -> connectionPoolDebug
    boolean $assertionsDisabled -> $assertionsDisabled
    void checkExists() -> checkExists
    void checkClosed() -> checkClosed
    void checkOpened() -> checkOpened
    void checkRange(int) -> checkRange
    void checkFlags(javax.mail.Flags) -> checkFlags
    java.lang.String getName() -> getName
    java.lang.String getFullName() -> getFullName
    javax.mail.Folder getParent() -> getParent
    boolean exists() -> exists
    int findName(com.sun.mail.imap.protocol.ListInfo[],java.lang.String) -> findName
    javax.mail.Folder[] list(java.lang.String) -> list
    javax.mail.Folder[] listSubscribed(java.lang.String) -> listSubscribed
    javax.mail.Folder[] doList(java.lang.String,boolean) -> doList
    char getSeparator() -> getSeparator
    int getType() -> getType
    boolean isSubscribed() -> isSubscribed
    void setSubscribed(boolean) -> setSubscribed
    boolean create(int) -> create
    boolean hasNewMessages() -> hasNewMessages
    javax.mail.Folder getFolder(java.lang.String) -> getFolder
    boolean delete(boolean) -> delete
    boolean renameTo(javax.mail.Folder) -> renameTo
    void open(int) -> open
    void fetch(javax.mail.Message[],javax.mail.FetchProfile) -> fetch
    void setFlags(javax.mail.Message[],javax.mail.Flags,boolean) -> setFlags
    void close(boolean) -> close
    void forceClose() -> forceClose
    void close(boolean,boolean) -> close
    void cleanup(boolean) -> cleanup
    boolean isOpen() -> isOpen
    javax.mail.Flags getPermanentFlags() -> getPermanentFlags
    int getMessageCount() -> getMessageCount
    int getNewMessageCount() -> getNewMessageCount
    int getUnreadMessageCount() -> getUnreadMessageCount
    int getDeletedMessageCount() -> getDeletedMessageCount
    com.sun.mail.imap.protocol.Status getStatus() -> getStatus
    javax.mail.Message getMessage(int) -> getMessage
    void appendMessages(javax.mail.Message[]) -> appendMessages
    com.sun.mail.imap.AppendUID[] appendUIDMessages(javax.mail.Message[]) -> appendUIDMessages
    javax.mail.Message[] addMessages(javax.mail.Message[]) -> addMessages
    void copyMessages(javax.mail.Message[],javax.mail.Folder) -> copyMessages
    javax.mail.Message[] expunge() -> expunge
    javax.mail.Message[] expunge(javax.mail.Message[]) -> expunge
    javax.mail.Message[] search(javax.mail.search.SearchTerm) -> search
    javax.mail.Message[] search(javax.mail.search.SearchTerm,javax.mail.Message[]) -> search
    long getUIDValidity() -> getUIDValidity
    long getUIDNext() -> getUIDNext
    javax.mail.Message getMessageByUID(long) -> getMessageByUID
    javax.mail.Message[] getMessagesByUID(long,long) -> getMessagesByUID
    javax.mail.Message[] getMessagesByUID(long[]) -> getMessagesByUID
    long getUID(javax.mail.Message) -> getUID
    javax.mail.Quota[] getQuota() -> getQuota
    void setQuota(javax.mail.Quota) -> setQuota
    com.sun.mail.imap.ACL[] getACL() -> getACL
    void addACL(com.sun.mail.imap.ACL) -> addACL
    void removeACL(java.lang.String) -> removeACL
    void addRights(com.sun.mail.imap.ACL) -> addRights
    void removeRights(com.sun.mail.imap.ACL) -> removeRights
    com.sun.mail.imap.Rights[] listRights(java.lang.String) -> listRights
    com.sun.mail.imap.Rights myRights() -> myRights
    void setACL(com.sun.mail.imap.ACL,char) -> setACL
    java.lang.String[] getAttributes() -> getAttributes
    void idle() -> idle
    void waitIfIdle() -> waitIfIdle
    void handleResponse(com.sun.mail.iap.Response) -> handleResponse
    void handleResponses(com.sun.mail.iap.Response[]) -> handleResponses
    com.sun.mail.imap.protocol.IMAPProtocol getStoreProtocol() -> getStoreProtocol
    void throwClosedException(com.sun.mail.iap.ConnectionException) -> throwClosedException
    com.sun.mail.imap.protocol.IMAPProtocol getProtocol() -> getProtocol
    java.lang.Object doCommand(com.sun.mail.imap.IMAPFolder$ProtocolCommand) -> doCommand
    java.lang.Object doOptionalCommand(java.lang.String,com.sun.mail.imap.IMAPFolder$ProtocolCommand) -> doOptionalCommand
    java.lang.Object doCommandIgnoreFailure(com.sun.mail.imap.IMAPFolder$ProtocolCommand) -> doCommandIgnoreFailure
    java.lang.Object doProtocolCommand(com.sun.mail.imap.IMAPFolder$ProtocolCommand) -> doProtocolCommand
    void releaseStoreProtocol(com.sun.mail.imap.protocol.IMAPProtocol) -> releaseStoreProtocol
    void releaseProtocol(boolean) -> releaseProtocol
    void keepConnectionAlive(boolean) -> keepConnectionAlive
    com.sun.mail.imap.IMAPMessage getMessageBySeqNumber(int) -> getMessageBySeqNumber
    boolean isDirectory() -> isDirectory
    com.sun.mail.imap.protocol.Status access$0(com.sun.mail.imap.IMAPFolder) -> access$0
    int access$1(com.sun.mail.imap.IMAPFolder) -> access$1
    void access$2(com.sun.mail.imap.IMAPFolder,int) -> access$2
com.sun.mail.imap.IMAPFolder$1 -> com.sun.mail.imap.IMAPFolder$1:
    com.sun.mail.imap.IMAPFolder this$0 -> this$0
    java.lang.String val$lname -> val$lname
    java.lang.Object doCommand(com.sun.mail.imap.protocol.IMAPProtocol) -> doCommand
com.sun.mail.imap.IMAPFolder$10 -> com.sun.mail.imap.IMAPFolder$10:
    com.sun.mail.imap.IMAPFolder this$0 -> this$0
    javax.mail.Flags val$f -> val$f
    java.util.Date val$dd -> val$dd
    com.sun.mail.imap.MessageLiteral val$mos -> val$mos
    java.lang.Object doCommand(com.sun.mail.imap.protocol.IMAPProtocol) -> doCommand
com.sun.mail.imap.IMAPFolder$11 -> com.sun.mail.imap.IMAPFolder$11:
    com.sun.mail.imap.IMAPFolder this$0 -> this$0
    javax.mail.Flags val$f -> val$f
    java.util.Date val$dd -> val$dd
    com.sun.mail.imap.MessageLiteral val$mos -> val$mos
    java.lang.Object doCommand(com.sun.mail.imap.protocol.IMAPProtocol) -> doCommand
com.sun.mail.imap.IMAPFolder$12 -> com.sun.mail.imap.IMAPFolder$12:
    com.sun.mail.imap.IMAPFolder this$0 -> this$0
    java.lang.Object doCommand(com.sun.mail.imap.protocol.IMAPProtocol) -> doCommand
com.sun.mail.imap.IMAPFolder$13 -> com.sun.mail.imap.IMAPFolder$13:
    com.sun.mail.imap.IMAPFolder this$0 -> this$0
    javax.mail.Quota val$quota -> val$quota
    java.lang.Object doCommand(com.sun.mail.imap.protocol.IMAPProtocol) -> doCommand
com.sun.mail.imap.IMAPFolder$14 -> com.sun.mail.imap.IMAPFolder$14:
    com.sun.mail.imap.IMAPFolder this$0 -> this$0
    java.lang.Object doCommand(com.sun.mail.imap.protocol.IMAPProtocol) -> doCommand
com.sun.mail.imap.IMAPFolder$15 -> com.sun.mail.imap.IMAPFolder$15:
    com.sun.mail.imap.IMAPFolder this$0 -> this$0
    java.lang.String val$name -> val$name
    java.lang.Object doCommand(com.sun.mail.imap.protocol.IMAPProtocol) -> doCommand
com.sun.mail.imap.IMAPFolder$16 -> com.sun.mail.imap.IMAPFolder$16:
    com.sun.mail.imap.IMAPFolder this$0 -> this$0
    java.lang.String val$name -> val$name
    java.lang.Object doCommand(com.sun.mail.imap.protocol.IMAPProtocol) -> doCommand
com.sun.mail.imap.IMAPFolder$17 -> com.sun.mail.imap.IMAPFolder$17:
    com.sun.mail.imap.IMAPFolder this$0 -> this$0
    java.lang.Object doCommand(com.sun.mail.imap.protocol.IMAPProtocol) -> doCommand
com.sun.mail.imap.IMAPFolder$18 -> com.sun.mail.imap.IMAPFolder$18:
    com.sun.mail.imap.IMAPFolder this$0 -> this$0
    char val$mod -> val$mod
    com.sun.mail.imap.ACL val$acl -> val$acl
    java.lang.Object doCommand(com.sun.mail.imap.protocol.IMAPProtocol) -> doCommand
com.sun.mail.imap.IMAPFolder$19 -> com.sun.mail.imap.IMAPFolder$19:
    com.sun.mail.imap.IMAPFolder this$0 -> this$0
    java.lang.Object doCommand(com.sun.mail.imap.protocol.IMAPProtocol) -> doCommand
com.sun.mail.imap.IMAPFolder$2 -> com.sun.mail.imap.IMAPFolder$2:
    com.sun.mail.imap.IMAPFolder this$0 -> this$0
    boolean val$subscribed -> val$subscribed
    char val$c -> val$c
    java.lang.String val$pattern -> val$pattern
    java.lang.Object doCommand(com.sun.mail.imap.protocol.IMAPProtocol) -> doCommand
com.sun.mail.imap.IMAPFolder$3 -> com.sun.mail.imap.IMAPFolder$3:
    com.sun.mail.imap.IMAPFolder this$0 -> this$0
    java.lang.Object doCommand(com.sun.mail.imap.protocol.IMAPProtocol) -> doCommand
com.sun.mail.imap.IMAPFolder$4 -> com.sun.mail.imap.IMAPFolder$4:
    com.sun.mail.imap.IMAPFolder this$0 -> this$0
    java.lang.String val$lname -> val$lname
    java.lang.Object doCommand(com.sun.mail.imap.protocol.IMAPProtocol) -> doCommand
com.sun.mail.imap.IMAPFolder$5 -> com.sun.mail.imap.IMAPFolder$5:
    com.sun.mail.imap.IMAPFolder this$0 -> this$0
    boolean val$subscribe -> val$subscribe
    java.lang.Object doCommand(com.sun.mail.imap.protocol.IMAPProtocol) -> doCommand
com.sun.mail.imap.IMAPFolder$6 -> com.sun.mail.imap.IMAPFolder$6:
    com.sun.mail.imap.IMAPFolder this$0 -> this$0
    int val$type -> val$type
    char val$sep -> val$sep
    java.lang.Object doCommand(com.sun.mail.imap.protocol.IMAPProtocol) -> doCommand
com.sun.mail.imap.IMAPFolder$7 -> com.sun.mail.imap.IMAPFolder$7:
    com.sun.mail.imap.IMAPFolder this$0 -> this$0
    java.lang.Object doCommand(com.sun.mail.imap.protocol.IMAPProtocol) -> doCommand
com.sun.mail.imap.IMAPFolder$8 -> com.sun.mail.imap.IMAPFolder$8:
    com.sun.mail.imap.IMAPFolder this$0 -> this$0
    java.lang.Object doCommand(com.sun.mail.imap.protocol.IMAPProtocol) -> doCommand
com.sun.mail.imap.IMAPFolder$9 -> com.sun.mail.imap.IMAPFolder$9:
    com.sun.mail.imap.IMAPFolder this$0 -> this$0
    javax.mail.Folder val$f -> val$f
    java.lang.Object doCommand(com.sun.mail.imap.protocol.IMAPProtocol) -> doCommand
com.sun.mail.imap.IMAPFolder$FetchProfileItem -> com.sun.mail.imap.IMAPFolder$FetchProfileItem:
    com.sun.mail.imap.IMAPFolder$FetchProfileItem HEADERS -> HEADERS
    com.sun.mail.imap.IMAPFolder$FetchProfileItem SIZE -> SIZE
com.sun.mail.imap.IMAPFolder$ProtocolCommand -> com.sun.mail.imap.IMAPFolder$ProtocolCommand:
    java.lang.Object doCommand(com.sun.mail.imap.protocol.IMAPProtocol) -> doCommand
com.sun.mail.imap.IMAPInputStream -> com.sun.mail.imap.IMAPInputStream:
    com.sun.mail.imap.IMAPMessage msg -> msg
    java.lang.String section -> section
    int pos -> pos
    int blksize -> blksize
    int max -> max
    byte[] buf -> buf
    int bufcount -> bufcount
    int bufpos -> bufpos
    boolean peek -> peek
    com.sun.mail.iap.ByteArray readbuf -> readbuf
    int slop -> slop
    void forceCheckExpunged() -> forceCheckExpunged
    void fill() -> fill
    int read() -> read
    int read(byte[],int,int) -> read
    int read(byte[]) -> read
    int available() -> available
    void checkSeen() -> checkSeen
com.sun.mail.imap.IMAPMessage -> com.sun.mail.imap.IMAPMessage:
    com.sun.mail.imap.protocol.BODYSTRUCTURE bs -> bs
    com.sun.mail.imap.protocol.ENVELOPE envelope -> envelope
    java.util.Date receivedDate -> receivedDate
    int size -> size
    boolean peek -> peek
    int seqnum -> seqnum
    long uid -> uid
    java.lang.String sectionId -> sectionId
    java.lang.String type -> type
    java.lang.String subject -> subject
    java.lang.String description -> description
    boolean headersLoaded -> headersLoaded
    java.util.Hashtable loadedHeaders -> loadedHeaders
    java.lang.String EnvelopeCmd -> EnvelopeCmd
    com.sun.mail.imap.protocol.IMAPProtocol getProtocol() -> getProtocol
    boolean isREV1() -> isREV1
    java.lang.Object getMessageCacheLock() -> getMessageCacheLock
    int getSequenceNumber() -> getSequenceNumber
    void setSequenceNumber(int) -> setSequenceNumber
    void setMessageNumber(int) -> setMessageNumber
    long getUID() -> getUID
    void setUID(long) -> setUID
    void setExpunged(boolean) -> setExpunged
    void checkExpunged() -> checkExpunged
    void forceCheckExpunged() -> forceCheckExpunged
    int getFetchBlockSize() -> getFetchBlockSize
    javax.mail.Address[] getFrom() -> getFrom
    void setFrom(javax.mail.Address) -> setFrom
    void addFrom(javax.mail.Address[]) -> addFrom
    javax.mail.Address getSender() -> getSender
    void setSender(javax.mail.Address) -> setSender
    javax.mail.Address[] getRecipients(javax.mail.Message$RecipientType) -> getRecipients
    void setRecipients(javax.mail.Message$RecipientType,javax.mail.Address[]) -> setRecipients
    void addRecipients(javax.mail.Message$RecipientType,javax.mail.Address[]) -> addRecipients
    javax.mail.Address[] getReplyTo() -> getReplyTo
    void setReplyTo(javax.mail.Address[]) -> setReplyTo
    java.lang.String getSubject() -> getSubject
    void setSubject(java.lang.String,java.lang.String) -> setSubject
    java.util.Date getSentDate() -> getSentDate
    void setSentDate(java.util.Date) -> setSentDate
    java.util.Date getReceivedDate() -> getReceivedDate
    int getSize() -> getSize
    int getLineCount() -> getLineCount
    java.lang.String[] getContentLanguage() -> getContentLanguage
    void setContentLanguage(java.lang.String[]) -> setContentLanguage
    java.lang.String getInReplyTo() -> getInReplyTo
    java.lang.String getContentType() -> getContentType
    java.lang.String getDisposition() -> getDisposition
    void setDisposition(java.lang.String) -> setDisposition
    java.lang.String getEncoding() -> getEncoding
    java.lang.String getContentID() -> getContentID
    void setContentID(java.lang.String) -> setContentID
    java.lang.String getContentMD5() -> getContentMD5
    void setContentMD5(java.lang.String) -> setContentMD5
    java.lang.String getDescription() -> getDescription
    void setDescription(java.lang.String,java.lang.String) -> setDescription
    java.lang.String getMessageID() -> getMessageID
    java.lang.String getFileName() -> getFileName
    void setFileName(java.lang.String) -> setFileName
    java.io.InputStream getContentStream() -> getContentStream
    javax.activation.DataHandler getDataHandler() -> getDataHandler
    void setDataHandler(javax.activation.DataHandler) -> setDataHandler
    void writeTo(java.io.OutputStream) -> writeTo
    java.lang.String[] getHeader(java.lang.String) -> getHeader
    java.lang.String getHeader(java.lang.String,java.lang.String) -> getHeader
    void setHeader(java.lang.String,java.lang.String) -> setHeader
    void addHeader(java.lang.String,java.lang.String) -> addHeader
    void removeHeader(java.lang.String) -> removeHeader
    java.util.Enumeration getAllHeaders() -> getAllHeaders
    java.util.Enumeration getMatchingHeaders(java.lang.String[]) -> getMatchingHeaders
    java.util.Enumeration getNonMatchingHeaders(java.lang.String[]) -> getNonMatchingHeaders
    void addHeaderLine(java.lang.String) -> addHeaderLine
    java.util.Enumeration getAllHeaderLines() -> getAllHeaderLines
    java.util.Enumeration getMatchingHeaderLines(java.lang.String[]) -> getMatchingHeaderLines
    java.util.Enumeration getNonMatchingHeaderLines(java.lang.String[]) -> getNonMatchingHeaderLines
    javax.mail.Flags getFlags() -> getFlags
    boolean isSet(javax.mail.Flags$Flag) -> isSet
    void setFlags(javax.mail.Flags,boolean) -> setFlags
    void setPeek(boolean) -> setPeek
    boolean getPeek() -> getPeek
    void invalidateHeaders() -> invalidateHeaders
    void fetch(com.sun.mail.imap.IMAPFolder,javax.mail.Message[],javax.mail.FetchProfile) -> fetch
    void loadEnvelope() -> loadEnvelope
    java.lang.String craftHeaderCmd(com.sun.mail.imap.protocol.IMAPProtocol,java.lang.String[]) -> craftHeaderCmd
    void loadBODYSTRUCTURE() -> loadBODYSTRUCTURE
    void loadHeaders() -> loadHeaders
    void loadFlags() -> loadFlags
    boolean areHeadersLoaded() -> areHeadersLoaded
    void setHeadersLoaded(boolean) -> setHeadersLoaded
    boolean isHeaderLoaded(java.lang.String) -> isHeaderLoaded
    void setHeaderLoaded(java.lang.String) -> setHeaderLoaded
    java.lang.String toSection(java.lang.String) -> toSection
    javax.mail.internet.InternetAddress[] aaclone(javax.mail.internet.InternetAddress[]) -> aaclone
    javax.mail.Flags _getFlags() -> _getFlags
    com.sun.mail.imap.protocol.ENVELOPE _getEnvelope() -> _getEnvelope
    com.sun.mail.imap.protocol.BODYSTRUCTURE _getBodyStructure() -> _getBodyStructure
    void _setFlags(javax.mail.Flags) -> _setFlags
    javax.mail.Session _getSession() -> _getSession
    com.sun.mail.imap.protocol.ENVELOPE access$0(com.sun.mail.imap.IMAPMessage) -> access$0
    javax.mail.Flags access$1(com.sun.mail.imap.IMAPMessage) -> access$1
    com.sun.mail.imap.protocol.BODYSTRUCTURE access$2(com.sun.mail.imap.IMAPMessage) -> access$2
    boolean access$3(com.sun.mail.imap.IMAPMessage) -> access$3
    int access$4(com.sun.mail.imap.IMAPMessage) -> access$4
    boolean access$5(com.sun.mail.imap.IMAPMessage,java.lang.String) -> access$5
com.sun.mail.imap.IMAPMessage$1FetchProfileCondition -> com.sun.mail.imap.IMAPMessage$1FetchProfileCondition:
    boolean needEnvelope -> needEnvelope
    boolean needFlags -> needFlags
    boolean needBodyStructure -> needBodyStructure
    boolean needUID -> needUID
    boolean needHeaders -> needHeaders
    boolean needSize -> needSize
    java.lang.String[] hdrs -> hdrs
    boolean test(com.sun.mail.imap.IMAPMessage) -> test
com.sun.mail.imap.IMAPMultipartDataSource -> com.sun.mail.imap.IMAPMultipartDataSource:
    java.util.Vector parts -> parts
    int getCount() -> getCount
    javax.mail.BodyPart getBodyPart(int) -> getBodyPart
com.sun.mail.imap.IMAPNestedMessage -> com.sun.mail.imap.IMAPNestedMessage:
    com.sun.mail.imap.IMAPMessage msg -> msg
    com.sun.mail.imap.protocol.IMAPProtocol getProtocol() -> getProtocol
    boolean isREV1() -> isREV1
    java.lang.Object getMessageCacheLock() -> getMessageCacheLock
    int getSequenceNumber() -> getSequenceNumber
    void checkExpunged() -> checkExpunged
    boolean isExpunged() -> isExpunged
    int getFetchBlockSize() -> getFetchBlockSize
    int getSize() -> getSize
    void setFlags(javax.mail.Flags,boolean) -> setFlags
com.sun.mail.imap.IMAPSSLStore -> com.sun.mail.imap.IMAPSSLStore:
com.sun.mail.imap.IMAPStore -> com.sun.mail.imap.IMAPStore:
    int RESPONSE -> RESPONSE
    java.lang.String name -> name
    int defaultPort -> defaultPort
    boolean isSSL -> isSSL
    int port -> port
    int blksize -> blksize
    int statusCacheTimeout -> statusCacheTimeout
    int appendBufferSize -> appendBufferSize
    int minIdleTime -> minIdleTime
    java.lang.String host -> host
    java.lang.String user -> user
    java.lang.String password -> password
    java.lang.String proxyAuthUser -> proxyAuthUser
    java.lang.String authorizationID -> authorizationID
    java.lang.String saslRealm -> saslRealm
    com.sun.mail.imap.protocol.Namespaces namespaces -> namespaces
    boolean disableAuthLogin -> disableAuthLogin
    boolean disableAuthPlain -> disableAuthPlain
    boolean enableStartTLS -> enableStartTLS
    boolean enableSASL -> enableSASL
    java.lang.String[] saslMechanisms -> saslMechanisms
    boolean forcePasswordRefresh -> forcePasswordRefresh
    boolean enableImapEvents -> enableImapEvents
    boolean connected -> connected
    java.io.PrintStream out -> out
    com.sun.mail.imap.IMAPStore$ConnectionPool pool -> pool
    boolean $assertionsDisabled -> $assertionsDisabled
    boolean protocolConnect(java.lang.String,int,java.lang.String,java.lang.String) -> protocolConnect
    void login(com.sun.mail.imap.protocol.IMAPProtocol,java.lang.String,java.lang.String) -> login
    void setUsername(java.lang.String) -> setUsername
    void setPassword(java.lang.String) -> setPassword
    com.sun.mail.imap.protocol.IMAPProtocol getProtocol(com.sun.mail.imap.IMAPFolder) -> getProtocol
    com.sun.mail.imap.protocol.IMAPProtocol getStoreProtocol() -> getStoreProtocol
    boolean allowReadOnlySelect() -> allowReadOnlySelect
    boolean hasSeparateStoreConnection() -> hasSeparateStoreConnection
    boolean getConnectionPoolDebug() -> getConnectionPoolDebug
    boolean isConnectionPoolFull() -> isConnectionPoolFull
    void releaseProtocol(com.sun.mail.imap.IMAPFolder,com.sun.mail.imap.protocol.IMAPProtocol) -> releaseProtocol
    void releaseStoreProtocol(com.sun.mail.imap.protocol.IMAPProtocol) -> releaseStoreProtocol
    void emptyConnectionPool(boolean) -> emptyConnectionPool
    void timeoutConnections() -> timeoutConnections
    int getFetchBlockSize() -> getFetchBlockSize
    javax.mail.Session getSession() -> getSession
    int getStatusCacheTimeout() -> getStatusCacheTimeout
    int getAppendBufferSize() -> getAppendBufferSize
    int getMinIdleTime() -> getMinIdleTime
    boolean hasCapability(java.lang.String) -> hasCapability
    boolean isConnected() -> isConnected
    void close() -> close
    void finalize() -> finalize
    void cleanup() -> cleanup
    void cleanup(boolean) -> cleanup
    javax.mail.Folder getDefaultFolder() -> getDefaultFolder
    javax.mail.Folder getFolder(java.lang.String) -> getFolder
    javax.mail.Folder getFolder(javax.mail.URLName) -> getFolder
    javax.mail.Folder[] getPersonalNamespaces() -> getPersonalNamespaces
    javax.mail.Folder[] getUserNamespaces(java.lang.String) -> getUserNamespaces
    javax.mail.Folder[] getSharedNamespaces() -> getSharedNamespaces
    com.sun.mail.imap.protocol.Namespaces getNamespaces() -> getNamespaces
    javax.mail.Folder[] namespaceToFolders(com.sun.mail.imap.protocol.Namespaces$Namespace[],java.lang.String) -> namespaceToFolders
    javax.mail.Quota[] getQuota(java.lang.String) -> getQuota
    void setQuota(javax.mail.Quota) -> setQuota
    void checkConnected() -> checkConnected
    void handleResponse(com.sun.mail.iap.Response) -> handleResponse
    void idle() -> idle
    void waitIfIdle() -> waitIfIdle
    void handleResponseCode(com.sun.mail.iap.Response) -> handleResponseCode
com.sun.mail.imap.IMAPStore$ConnectionPool -> com.sun.mail.imap.IMAPStore$ConnectionPool:
    java.util.Vector authenticatedConnections -> authenticatedConnections
    java.util.Vector folders -> folders
    boolean separateStoreConnection -> separateStoreConnection
    boolean storeConnectionInUse -> storeConnectionInUse
    long clientTimeoutInterval -> clientTimeoutInterval
    long serverTimeoutInterval -> serverTimeoutInterval
    long lastTimePruned -> lastTimePruned
    int poolSize -> poolSize
    long pruningInterval -> pruningInterval
    boolean debug -> debug
    int RUNNING -> RUNNING
    int IDLE -> IDLE
    int ABORTING -> ABORTING
    int idleState -> idleState
    com.sun.mail.imap.protocol.IMAPProtocol idleProtocol -> idleProtocol
    void access$0(com.sun.mail.imap.IMAPStore$ConnectionPool,long) -> access$0
    void access$1(com.sun.mail.imap.IMAPStore$ConnectionPool,boolean) -> access$1
    void access$2(com.sun.mail.imap.IMAPStore$ConnectionPool,int) -> access$2
    boolean access$3(com.sun.mail.imap.IMAPStore$ConnectionPool) -> access$3
    int access$4(com.sun.mail.imap.IMAPStore$ConnectionPool) -> access$4
    void access$5(com.sun.mail.imap.IMAPStore$ConnectionPool,long) -> access$5
    long access$6(com.sun.mail.imap.IMAPStore$ConnectionPool) -> access$6
    void access$7(com.sun.mail.imap.IMAPStore$ConnectionPool,long) -> access$7
    long access$8(com.sun.mail.imap.IMAPStore$ConnectionPool) -> access$8
    void access$9(com.sun.mail.imap.IMAPStore$ConnectionPool,boolean) -> access$9
    java.util.Vector access$10(com.sun.mail.imap.IMAPStore$ConnectionPool) -> access$10
    boolean access$11(com.sun.mail.imap.IMAPStore$ConnectionPool) -> access$11
    boolean access$12(com.sun.mail.imap.IMAPStore$ConnectionPool) -> access$12
    java.util.Vector access$13(com.sun.mail.imap.IMAPStore$ConnectionPool) -> access$13
    void access$14(com.sun.mail.imap.IMAPStore$ConnectionPool,java.util.Vector) -> access$14
    void access$15(com.sun.mail.imap.IMAPStore$ConnectionPool,boolean) -> access$15
    long access$16(com.sun.mail.imap.IMAPStore$ConnectionPool) -> access$16
    long access$17(com.sun.mail.imap.IMAPStore$ConnectionPool) -> access$17
    void access$18(com.sun.mail.imap.IMAPStore$ConnectionPool,com.sun.mail.imap.protocol.IMAPProtocol) -> access$18
    int access$19(com.sun.mail.imap.IMAPStore$ConnectionPool) -> access$19
    void access$20(com.sun.mail.imap.IMAPStore$ConnectionPool,int) -> access$20
    com.sun.mail.imap.protocol.IMAPProtocol access$21(com.sun.mail.imap.IMAPStore$ConnectionPool) -> access$21
com.sun.mail.imap.LengthCounter -> com.sun.mail.imap.LengthCounter:
    int size -> size
    byte[] buf -> buf
    int maxsize -> maxsize
    void write(int) -> write
    void write(byte[],int,int) -> write
    void write(byte[]) -> write
    int getSize() -> getSize
    byte[] getBytes() -> getBytes
com.sun.mail.imap.MessageLiteral -> com.sun.mail.imap.MessageLiteral:
    javax.mail.Message msg -> msg
    int msgSize -> msgSize
    byte[] buf -> buf
    int size() -> size
    void writeTo(java.io.OutputStream) -> writeTo
com.sun.mail.imap.Rights -> com.sun.mail.imap.Rights:
    boolean[] rights -> rights
    void add(com.sun.mail.imap.Rights$Right) -> add
    void add(com.sun.mail.imap.Rights) -> add
    void remove(com.sun.mail.imap.Rights$Right) -> remove
    void remove(com.sun.mail.imap.Rights) -> remove
    boolean contains(com.sun.mail.imap.Rights$Right) -> contains
    boolean contains(com.sun.mail.imap.Rights) -> contains
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    com.sun.mail.imap.Rights$Right[] getRights() -> getRights
    java.lang.Object clone() -> clone
    java.lang.String toString() -> toString
com.sun.mail.imap.Rights$Right -> com.sun.mail.imap.Rights$Right:
    com.sun.mail.imap.Rights$Right[] cache -> cache
    com.sun.mail.imap.Rights$Right LOOKUP -> LOOKUP
    com.sun.mail.imap.Rights$Right READ -> READ
    com.sun.mail.imap.Rights$Right KEEP_SEEN -> KEEP_SEEN
    com.sun.mail.imap.Rights$Right WRITE -> WRITE
    com.sun.mail.imap.Rights$Right INSERT -> INSERT
    com.sun.mail.imap.Rights$Right POST -> POST
    com.sun.mail.imap.Rights$Right CREATE -> CREATE
    com.sun.mail.imap.Rights$Right DELETE -> DELETE
    com.sun.mail.imap.Rights$Right ADMINISTER -> ADMINISTER
    char right -> right
    com.sun.mail.imap.Rights$Right getInstance(char) -> getInstance
    java.lang.String toString() -> toString
com.sun.mail.imap.Utility -> com.sun.mail.imap.Utility:
    com.sun.mail.imap.protocol.MessageSet[] toMessageSet(javax.mail.Message[],com.sun.mail.imap.Utility$Condition) -> toMessageSet
    com.sun.mail.imap.protocol.UIDSet[] toUIDSet(javax.mail.Message[]) -> toUIDSet
com.sun.mail.imap.Utility$Condition -> com.sun.mail.imap.Utility$Condition:
    boolean test(com.sun.mail.imap.IMAPMessage) -> test
com.sun.mail.imap.protocol.BASE64MailboxDecoder -> com.sun.mail.imap.protocol.BASE64MailboxDecoder:
    char[] pem_array -> pem_array
    byte[] pem_convert_array -> pem_convert_array
    java.lang.String decode(java.lang.String) -> decode
    int base64decode(char[],int,java.text.CharacterIterator) -> base64decode
com.sun.mail.imap.protocol.BASE64MailboxEncoder -> com.sun.mail.imap.protocol.BASE64MailboxEncoder:
    byte[] buffer -> buffer
    int bufsize -> bufsize
    boolean started -> started
    java.io.Writer out -> out
    char[] pem_array -> pem_array
    java.lang.String encode(java.lang.String) -> encode
    void write(int) -> write
    void flush() -> flush
    void encode() -> encode
com.sun.mail.imap.protocol.BODY -> com.sun.mail.imap.protocol.BODY:
    char[] name -> name
    int msgno -> msgno
    com.sun.mail.iap.ByteArray data -> data
    java.lang.String section -> section
    int origin -> origin
    com.sun.mail.iap.ByteArray getByteArray() -> getByteArray
    java.io.ByteArrayInputStream getByteArrayInputStream() -> getByteArrayInputStream
com.sun.mail.imap.protocol.BODYSTRUCTURE -> com.sun.mail.imap.protocol.BODYSTRUCTURE:
    char[] name -> name
    int msgno -> msgno
    java.lang.String type -> type
    java.lang.String subtype -> subtype
    java.lang.String encoding -> encoding
    int lines -> lines
    int size -> size
    java.lang.String disposition -> disposition
    java.lang.String id -> id
    java.lang.String description -> description
    java.lang.String md5 -> md5
    java.lang.String attachment -> attachment
    javax.mail.internet.ParameterList cParams -> cParams
    javax.mail.internet.ParameterList dParams -> dParams
    java.lang.String[] language -> language
    com.sun.mail.imap.protocol.BODYSTRUCTURE[] bodies -> bodies
    com.sun.mail.imap.protocol.ENVELOPE envelope -> envelope
    int SINGLE -> SINGLE
    int MULTI -> MULTI
    int NESTED -> NESTED
    int processedType -> processedType
    boolean parseDebug -> parseDebug
    boolean isMulti() -> isMulti
    boolean isSingle() -> isSingle
    boolean isNested() -> isNested
    javax.mail.internet.ParameterList parseParameters(com.sun.mail.iap.Response) -> parseParameters
    void parseBodyExtension(com.sun.mail.iap.Response) -> parseBodyExtension
com.sun.mail.imap.protocol.ENVELOPE -> com.sun.mail.imap.protocol.ENVELOPE:
    char[] name -> name
    int msgno -> msgno
    java.util.Date date -> date
    java.lang.String subject -> subject
    javax.mail.internet.InternetAddress[] from -> from
    javax.mail.internet.InternetAddress[] sender -> sender
    javax.mail.internet.InternetAddress[] replyTo -> replyTo
    javax.mail.internet.InternetAddress[] to -> to
    javax.mail.internet.InternetAddress[] cc -> cc
    javax.mail.internet.InternetAddress[] bcc -> bcc
    java.lang.String inReplyTo -> inReplyTo
    java.lang.String messageId -> messageId
    javax.mail.internet.MailDateFormat mailDateFormat -> mailDateFormat
    javax.mail.internet.InternetAddress[] parseAddressList(com.sun.mail.iap.Response) -> parseAddressList
com.sun.mail.imap.protocol.FLAGS -> com.sun.mail.imap.protocol.FLAGS:
    char[] name -> name
    int msgno -> msgno
    long serialVersionUID -> serialVersionUID
com.sun.mail.imap.protocol.FetchResponse -> com.sun.mail.imap.protocol.FetchResponse:
    com.sun.mail.imap.protocol.Item[] items -> items
    char[] HEADER -> HEADER
    char[] TEXT -> TEXT
    int getItemCount() -> getItemCount
    com.sun.mail.imap.protocol.Item getItem(int) -> getItem
    com.sun.mail.imap.protocol.Item getItem(java.lang.Class) -> getItem
    com.sun.mail.imap.protocol.Item getItem(com.sun.mail.iap.Response[],int,java.lang.Class) -> getItem
    void parse() -> parse
    boolean match(char[]) -> match
com.sun.mail.imap.protocol.IMAPAddress -> com.sun.mail.imap.protocol.IMAPAddress:
    boolean group -> group
    javax.mail.internet.InternetAddress[] grouplist -> grouplist
    java.lang.String groupname -> groupname
    long serialVersionUID -> serialVersionUID
    boolean isEndOfGroup() -> isEndOfGroup
    boolean isGroup() -> isGroup
    javax.mail.internet.InternetAddress[] getGroup(boolean) -> getGroup
com.sun.mail.imap.protocol.IMAPProtocol -> com.sun.mail.imap.protocol.IMAPProtocol:
    boolean connected -> connected
    boolean rev1 -> rev1
    boolean authenticated -> authenticated
    java.util.Map capabilities -> capabilities
    java.util.List authmechs -> authmechs
    java.lang.String[] searchCharsets -> searchCharsets
    java.lang.String name -> name
    com.sun.mail.imap.protocol.SaslAuthenticator saslAuthenticator -> saslAuthenticator
    com.sun.mail.iap.ByteArray ba -> ba
    byte[] CRLF -> CRLF
    java.lang.String idleTag -> idleTag
    byte[] DONE -> DONE
    void capability() -> capability
    void setCapabilities(com.sun.mail.iap.Response) -> setCapabilities
    void parseCapabilities(com.sun.mail.iap.Response) -> parseCapabilities
    void processGreeting(com.sun.mail.iap.Response) -> processGreeting
    boolean isAuthenticated() -> isAuthenticated
    boolean isREV1() -> isREV1
    boolean supportsNonSyncLiterals() -> supportsNonSyncLiterals
    com.sun.mail.iap.Response readResponse() -> readResponse
    boolean hasCapability(java.lang.String) -> hasCapability
    java.util.Map getCapabilities() -> getCapabilities
    void disconnect() -> disconnect
    void noop() -> noop
    void logout() -> logout
    void login(java.lang.String,java.lang.String) -> login
    void authlogin(java.lang.String,java.lang.String) -> authlogin
    void authplain(java.lang.String,java.lang.String,java.lang.String) -> authplain
    void sasllogin(java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> sasllogin
    java.io.OutputStream getIMAPOutputStream() -> getIMAPOutputStream
    void proxyauth(java.lang.String) -> proxyauth
    void startTLS() -> startTLS
    com.sun.mail.imap.protocol.MailboxInfo select(java.lang.String) -> select
    com.sun.mail.imap.protocol.MailboxInfo examine(java.lang.String) -> examine
    com.sun.mail.imap.protocol.Status status(java.lang.String,java.lang.String[]) -> status
    void create(java.lang.String) -> create
    void delete(java.lang.String) -> delete
    void rename(java.lang.String,java.lang.String) -> rename
    void subscribe(java.lang.String) -> subscribe
    void unsubscribe(java.lang.String) -> unsubscribe
    com.sun.mail.imap.protocol.ListInfo[] list(java.lang.String,java.lang.String) -> list
    com.sun.mail.imap.protocol.ListInfo[] lsub(java.lang.String,java.lang.String) -> lsub
    com.sun.mail.imap.protocol.ListInfo[] doList(java.lang.String,java.lang.String,java.lang.String) -> doList
    void append(java.lang.String,javax.mail.Flags,java.util.Date,com.sun.mail.iap.Literal) -> append
    com.sun.mail.imap.AppendUID appenduid(java.lang.String,javax.mail.Flags,java.util.Date,com.sun.mail.iap.Literal) -> appenduid
    com.sun.mail.imap.AppendUID appenduid(java.lang.String,javax.mail.Flags,java.util.Date,com.sun.mail.iap.Literal,boolean) -> appenduid
    com.sun.mail.imap.AppendUID getAppendUID(com.sun.mail.iap.Response) -> getAppendUID
    void check() -> check
    void close() -> close
    void expunge() -> expunge
    void uidexpunge(com.sun.mail.imap.protocol.UIDSet[]) -> uidexpunge
    com.sun.mail.imap.protocol.BODYSTRUCTURE fetchBodyStructure(int) -> fetchBodyStructure
    com.sun.mail.imap.protocol.BODY peekBody(int,java.lang.String) -> peekBody
    com.sun.mail.imap.protocol.BODY fetchBody(int,java.lang.String) -> fetchBody
    com.sun.mail.imap.protocol.BODY fetchBody(int,java.lang.String,boolean) -> fetchBody
    com.sun.mail.imap.protocol.BODY peekBody(int,java.lang.String,int,int) -> peekBody
    com.sun.mail.imap.protocol.BODY fetchBody(int,java.lang.String,int,int) -> fetchBody
    com.sun.mail.imap.protocol.BODY peekBody(int,java.lang.String,int,int,com.sun.mail.iap.ByteArray) -> peekBody
    com.sun.mail.imap.protocol.BODY fetchBody(int,java.lang.String,int,int,com.sun.mail.iap.ByteArray) -> fetchBody
    com.sun.mail.imap.protocol.BODY fetchBody(int,java.lang.String,int,int,boolean,com.sun.mail.iap.ByteArray) -> fetchBody
    com.sun.mail.iap.ByteArray getResponseBuffer() -> getResponseBuffer
    com.sun.mail.imap.protocol.RFC822DATA fetchRFC822(int,java.lang.String) -> fetchRFC822
    javax.mail.Flags fetchFlags(int) -> fetchFlags
    com.sun.mail.imap.protocol.UID fetchUID(int) -> fetchUID
    com.sun.mail.imap.protocol.UID fetchSequenceNumber(long) -> fetchSequenceNumber
    com.sun.mail.imap.protocol.UID[] fetchSequenceNumbers(long,long) -> fetchSequenceNumbers
    com.sun.mail.imap.protocol.UID[] fetchSequenceNumbers(long[]) -> fetchSequenceNumbers
    com.sun.mail.iap.Response[] fetch(com.sun.mail.imap.protocol.MessageSet[],java.lang.String) -> fetch
    com.sun.mail.iap.Response[] fetch(int,int,java.lang.String) -> fetch
    com.sun.mail.iap.Response[] fetch(int,java.lang.String) -> fetch
    com.sun.mail.iap.Response[] fetch(java.lang.String,java.lang.String,boolean) -> fetch
    void copy(com.sun.mail.imap.protocol.MessageSet[],java.lang.String) -> copy
    void copy(int,int,java.lang.String) -> copy
    void copy(java.lang.String,java.lang.String) -> copy
    void storeFlags(com.sun.mail.imap.protocol.MessageSet[],javax.mail.Flags,boolean) -> storeFlags
    void storeFlags(int,int,javax.mail.Flags,boolean) -> storeFlags
    void storeFlags(int,javax.mail.Flags,boolean) -> storeFlags
    void storeFlags(java.lang.String,javax.mail.Flags,boolean) -> storeFlags
    java.lang.String createFlagList(javax.mail.Flags) -> createFlagList
    int[] search(com.sun.mail.imap.protocol.MessageSet[],javax.mail.search.SearchTerm) -> search
    int[] search(javax.mail.search.SearchTerm) -> search
    int[] search(java.lang.String,javax.mail.search.SearchTerm) -> search
    int[] issueSearch(java.lang.String,javax.mail.search.SearchTerm,java.lang.String) -> issueSearch
    com.sun.mail.imap.protocol.Namespaces namespace() -> namespace
    javax.mail.Quota[] getQuotaRoot(java.lang.String) -> getQuotaRoot
    javax.mail.Quota[] getQuota(java.lang.String) -> getQuota
    void setQuota(javax.mail.Quota) -> setQuota
    javax.mail.Quota parseQuota(com.sun.mail.iap.Response) -> parseQuota
    void setACL(java.lang.String,char,com.sun.mail.imap.ACL) -> setACL
    void deleteACL(java.lang.String,java.lang.String) -> deleteACL
    com.sun.mail.imap.ACL[] getACL(java.lang.String) -> getACL
    com.sun.mail.imap.Rights[] listRights(java.lang.String,java.lang.String) -> listRights
    com.sun.mail.imap.Rights myRights(java.lang.String) -> myRights
    void idleStart() -> idleStart
    com.sun.mail.iap.Response readIdleResponse() -> readIdleResponse
    boolean processIdleResponse(com.sun.mail.iap.Response) -> processIdleResponse
    void idleAbort() -> idleAbort
com.sun.mail.imap.protocol.IMAPResponse -> com.sun.mail.imap.protocol.IMAPResponse:
    java.lang.String key -> key
    int number -> number
    java.lang.String[] readSimpleList() -> readSimpleList
    java.lang.String getKey() -> getKey
    boolean keyEquals(java.lang.String) -> keyEquals
    int getNumber() -> getNumber
    com.sun.mail.imap.protocol.IMAPResponse readResponse(com.sun.mail.iap.Protocol) -> readResponse
com.sun.mail.imap.protocol.IMAPSaslAuthenticator -> com.sun.mail.imap.protocol.IMAPSaslAuthenticator:
    com.sun.mail.imap.protocol.IMAPProtocol pr -> pr
    java.lang.String name -> name
    java.util.Properties props -> props
    boolean debug -> debug
    java.io.PrintStream out -> out
    java.lang.String host -> host
    boolean authenticate(java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> authenticate
    boolean access$0(com.sun.mail.imap.protocol.IMAPSaslAuthenticator) -> access$0
    java.io.PrintStream access$1(com.sun.mail.imap.protocol.IMAPSaslAuthenticator) -> access$1
com.sun.mail.imap.protocol.IMAPSaslAuthenticator$1 -> com.sun.mail.imap.protocol.IMAPSaslAuthenticator$1:
    com.sun.mail.imap.protocol.IMAPSaslAuthenticator this$0 -> this$0
    java.lang.String val$u0 -> val$u0
    java.lang.String val$p0 -> val$p0
    java.lang.String val$r0 -> val$r0
    void handle(javax.security.auth.callback.Callback[]) -> handle
com.sun.mail.imap.protocol.INTERNALDATE -> com.sun.mail.imap.protocol.INTERNALDATE:
    char[] name -> name
    int msgno -> msgno
    java.util.Date date -> date
    javax.mail.internet.MailDateFormat mailDateFormat -> mailDateFormat
    java.text.SimpleDateFormat df -> df
    java.util.Date getDate() -> getDate
    java.lang.String format(java.util.Date) -> format
com.sun.mail.imap.protocol.Item -> com.sun.mail.imap.protocol.Item:
com.sun.mail.imap.protocol.ListInfo -> com.sun.mail.imap.protocol.ListInfo:
    java.lang.String name -> name
    char separator -> separator
    boolean hasInferiors -> hasInferiors
    boolean canOpen -> canOpen
    int changeState -> changeState
    java.lang.String[] attrs -> attrs
    int CHANGED -> CHANGED
    int UNCHANGED -> UNCHANGED
    int INDETERMINATE -> INDETERMINATE
com.sun.mail.imap.protocol.MailboxInfo -> com.sun.mail.imap.protocol.MailboxInfo:
    javax.mail.Flags availableFlags -> availableFlags
    javax.mail.Flags permanentFlags -> permanentFlags
    int total -> total
    int recent -> recent
    int first -> first
    long uidvalidity -> uidvalidity
    long uidnext -> uidnext
    int mode -> mode
com.sun.mail.imap.protocol.MessageSet -> com.sun.mail.imap.protocol.MessageSet:
    int start -> start
    int end -> end
    int size() -> size
    com.sun.mail.imap.protocol.MessageSet[] createMessageSets(int[]) -> createMessageSets
    java.lang.String toString(com.sun.mail.imap.protocol.MessageSet[]) -> toString
    int size(com.sun.mail.imap.protocol.MessageSet[]) -> size
com.sun.mail.imap.protocol.Namespaces -> com.sun.mail.imap.protocol.Namespaces:
    com.sun.mail.imap.protocol.Namespaces$Namespace[] personal -> personal
    com.sun.mail.imap.protocol.Namespaces$Namespace[] otherUsers -> otherUsers
    com.sun.mail.imap.protocol.Namespaces$Namespace[] shared -> shared
    com.sun.mail.imap.protocol.Namespaces$Namespace[] getNamespaces(com.sun.mail.iap.Response) -> getNamespaces
com.sun.mail.imap.protocol.Namespaces$Namespace -> com.sun.mail.imap.protocol.Namespaces$Namespace:
    java.lang.String prefix -> prefix
    char delimiter -> delimiter
com.sun.mail.imap.protocol.RFC822DATA -> com.sun.mail.imap.protocol.RFC822DATA:
    char[] name -> name
    int msgno -> msgno
    com.sun.mail.iap.ByteArray data -> data
    com.sun.mail.iap.ByteArray getByteArray() -> getByteArray
    java.io.ByteArrayInputStream getByteArrayInputStream() -> getByteArrayInputStream
com.sun.mail.imap.protocol.RFC822SIZE -> com.sun.mail.imap.protocol.RFC822SIZE:
    char[] name -> name
    int msgno -> msgno
    int size -> size
com.sun.mail.imap.protocol.SaslAuthenticator -> com.sun.mail.imap.protocol.SaslAuthenticator:
    boolean authenticate(java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> authenticate
com.sun.mail.imap.protocol.SearchSequence -> com.sun.mail.imap.protocol.SearchSequence:
    java.lang.String[] monthTable -> monthTable
    java.util.Calendar cal -> cal
    com.sun.mail.iap.Argument generateSequence(javax.mail.search.SearchTerm,java.lang.String) -> generateSequence
    boolean isAscii(javax.mail.search.SearchTerm) -> isAscii
    boolean isAscii(java.lang.String) -> isAscii
    com.sun.mail.iap.Argument and(javax.mail.search.AndTerm,java.lang.String) -> and
    com.sun.mail.iap.Argument or(javax.mail.search.OrTerm,java.lang.String) -> or
    com.sun.mail.iap.Argument not(javax.mail.search.NotTerm,java.lang.String) -> not
    com.sun.mail.iap.Argument header(javax.mail.search.HeaderTerm,java.lang.String) -> header
    com.sun.mail.iap.Argument messageid(javax.mail.search.MessageIDTerm,java.lang.String) -> messageid
    com.sun.mail.iap.Argument flag(javax.mail.search.FlagTerm) -> flag
    com.sun.mail.iap.Argument from(java.lang.String,java.lang.String) -> from
    com.sun.mail.iap.Argument recipient(javax.mail.Message$RecipientType,java.lang.String,java.lang.String) -> recipient
    com.sun.mail.iap.Argument subject(javax.mail.search.SubjectTerm,java.lang.String) -> subject
    com.sun.mail.iap.Argument body(javax.mail.search.BodyTerm,java.lang.String) -> body
    com.sun.mail.iap.Argument size(javax.mail.search.SizeTerm) -> size
    java.lang.String toIMAPDate(java.util.Date) -> toIMAPDate
    com.sun.mail.iap.Argument sentdate(javax.mail.search.DateTerm) -> sentdate
    com.sun.mail.iap.Argument receiveddate(javax.mail.search.DateTerm) -> receiveddate
com.sun.mail.imap.protocol.Status -> com.sun.mail.imap.protocol.Status:
    java.lang.String mbox -> mbox
    int total -> total
    int recent -> recent
    long uidnext -> uidnext
    long uidvalidity -> uidvalidity
    int unseen -> unseen
    java.lang.String[] standardItems -> standardItems
    void add(com.sun.mail.imap.protocol.Status,com.sun.mail.imap.protocol.Status) -> add
com.sun.mail.imap.protocol.UID -> com.sun.mail.imap.protocol.UID:
    char[] name -> name
    int seqnum -> seqnum
    long uid -> uid
com.sun.mail.imap.protocol.UIDSet -> com.sun.mail.imap.protocol.UIDSet:
    long start -> start
    long end -> end
    long size() -> size
    com.sun.mail.imap.protocol.UIDSet[] createUIDSets(long[]) -> createUIDSets
    java.lang.String toString(com.sun.mail.imap.protocol.UIDSet[]) -> toString
    long size(com.sun.mail.imap.protocol.UIDSet[]) -> size
com.sun.mail.pop3.DefaultFolder -> com.sun.mail.pop3.DefaultFolder:
    java.lang.String getName() -> getName
    java.lang.String getFullName() -> getFullName
    javax.mail.Folder getParent() -> getParent
    boolean exists() -> exists
    javax.mail.Folder[] list(java.lang.String) -> list
    char getSeparator() -> getSeparator
    int getType() -> getType
    boolean create(int) -> create
    boolean hasNewMessages() -> hasNewMessages
    javax.mail.Folder getFolder(java.lang.String) -> getFolder
    javax.mail.Folder getInbox() -> getInbox
    boolean delete(boolean) -> delete
    boolean renameTo(javax.mail.Folder) -> renameTo
    void open(int) -> open
    void close(boolean) -> close
    boolean isOpen() -> isOpen
    javax.mail.Flags getPermanentFlags() -> getPermanentFlags
    int getMessageCount() -> getMessageCount
    javax.mail.Message getMessage(int) -> getMessage
    void appendMessages(javax.mail.Message[]) -> appendMessages
    javax.mail.Message[] expunge() -> expunge
com.sun.mail.pop3.POP3Folder -> com.sun.mail.pop3.POP3Folder:
    java.lang.String name -> name
    com.sun.mail.pop3.Protocol port -> port
    int total -> total
    int size -> size
    boolean exists -> exists
    boolean opened -> opened
    java.util.Vector message_cache -> message_cache
    boolean doneUidl -> doneUidl
    java.lang.String getName() -> getName
    java.lang.String getFullName() -> getFullName
    javax.mail.Folder getParent() -> getParent
    boolean exists() -> exists
    javax.mail.Folder[] list(java.lang.String) -> list
    char getSeparator() -> getSeparator
    int getType() -> getType
    boolean create(int) -> create
    boolean hasNewMessages() -> hasNewMessages
    javax.mail.Folder getFolder(java.lang.String) -> getFolder
    boolean delete(boolean) -> delete
    boolean renameTo(javax.mail.Folder) -> renameTo
    void open(int) -> open
    void close(boolean) -> close
    boolean isOpen() -> isOpen
    javax.mail.Flags getPermanentFlags() -> getPermanentFlags
    int getMessageCount() -> getMessageCount
    javax.mail.Message getMessage(int) -> getMessage
    com.sun.mail.pop3.POP3Message createMessage(javax.mail.Folder,int) -> createMessage
    void appendMessages(javax.mail.Message[]) -> appendMessages
    javax.mail.Message[] expunge() -> expunge
    void fetch(javax.mail.Message[],javax.mail.FetchProfile) -> fetch
    java.lang.String getUID(javax.mail.Message) -> getUID
    int getSize() -> getSize
    int[] getSizes() -> getSizes
    java.io.InputStream listCommand() -> listCommand
    void finalize() -> finalize
    void checkOpen() -> checkOpen
    void checkClosed() -> checkClosed
    void checkReadable() -> checkReadable
    void checkWritable() -> checkWritable
    com.sun.mail.pop3.Protocol getProtocol() -> getProtocol
    void notifyMessageChangedListeners(int,javax.mail.Message) -> notifyMessageChangedListeners
com.sun.mail.pop3.POP3Message -> com.sun.mail.pop3.POP3Message:
    java.lang.String UNKNOWN -> UNKNOWN
    com.sun.mail.pop3.POP3Folder folder -> folder
    int hdrSize -> hdrSize
    int msgSize -> msgSize
    java.lang.String uid -> uid
    void setFlags(javax.mail.Flags,boolean) -> setFlags
    int getSize() -> getSize
    java.io.InputStream getContentStream() -> getContentStream
    void invalidate(boolean) -> invalidate
    java.io.InputStream top(int) -> top
    java.lang.String[] getHeader(java.lang.String) -> getHeader
    java.lang.String getHeader(java.lang.String,java.lang.String) -> getHeader
    void setHeader(java.lang.String,java.lang.String) -> setHeader
    void addHeader(java.lang.String,java.lang.String) -> addHeader
    void removeHeader(java.lang.String) -> removeHeader
    java.util.Enumeration getAllHeaders() -> getAllHeaders
    java.util.Enumeration getMatchingHeaders(java.lang.String[]) -> getMatchingHeaders
    java.util.Enumeration getNonMatchingHeaders(java.lang.String[]) -> getNonMatchingHeaders
    void addHeaderLine(java.lang.String) -> addHeaderLine
    java.util.Enumeration getAllHeaderLines() -> getAllHeaderLines
    java.util.Enumeration getMatchingHeaderLines(java.lang.String[]) -> getMatchingHeaderLines
    java.util.Enumeration getNonMatchingHeaderLines(java.lang.String[]) -> getNonMatchingHeaderLines
    void saveChanges() -> saveChanges
    void loadHeaders() -> loadHeaders
com.sun.mail.pop3.POP3SSLStore -> com.sun.mail.pop3.POP3SSLStore:
com.sun.mail.pop3.POP3Store -> com.sun.mail.pop3.POP3Store:
    java.lang.String name -> name
    int defaultPort -> defaultPort
    boolean isSSL -> isSSL
    com.sun.mail.pop3.Protocol port -> port
    com.sun.mail.pop3.POP3Folder portOwner -> portOwner
    java.lang.String host -> host
    int portNum -> portNum
    java.lang.String user -> user
    java.lang.String passwd -> passwd
    boolean rsetBeforeQuit -> rsetBeforeQuit
    boolean disableTop -> disableTop
    boolean forgetTopHeaders -> forgetTopHeaders
    java.lang.reflect.Constructor messageConstructor -> messageConstructor
    boolean protocolConnect(java.lang.String,int,java.lang.String,java.lang.String) -> protocolConnect
    boolean isConnected() -> isConnected
    com.sun.mail.pop3.Protocol getPort(com.sun.mail.pop3.POP3Folder) -> getPort
    void closePort(com.sun.mail.pop3.POP3Folder) -> closePort
    void close() -> close
    javax.mail.Folder getDefaultFolder() -> getDefaultFolder
    javax.mail.Folder getFolder(java.lang.String) -> getFolder
    javax.mail.Folder getFolder(javax.mail.URLName) -> getFolder
    void finalize() -> finalize
    void checkConnected() -> checkConnected
com.sun.mail.pop3.Protocol -> com.sun.mail.pop3.Protocol:
    java.net.Socket socket -> socket
    java.io.DataInputStream input -> input
    java.io.PrintWriter output -> output
    int POP3_PORT -> POP3_PORT
    java.lang.String CRLF -> CRLF
    boolean debug -> debug
    java.io.PrintStream out -> out
    java.lang.String apopChallenge -> apopChallenge
    char[] digits -> digits
    void finalize() -> finalize
    java.lang.String login(java.lang.String,java.lang.String) -> login
    java.lang.String getDigest(java.lang.String) -> getDigest
    java.lang.String toHex(byte[]) -> toHex
    boolean quit() -> quit
    com.sun.mail.pop3.Status stat() -> stat
    int list(int) -> list
    java.io.InputStream list() -> list
    java.io.InputStream retr(int,int) -> retr
    java.io.InputStream top(int,int) -> top
    boolean dele(int) -> dele
    java.lang.String uidl(int) -> uidl
    boolean uidl(java.lang.String[]) -> uidl
    boolean noop() -> noop
    boolean rset() -> rset
    com.sun.mail.pop3.Response simpleCommand(java.lang.String) -> simpleCommand
    com.sun.mail.pop3.Response multilineCommand(java.lang.String,int) -> multilineCommand
com.sun.mail.pop3.Response -> com.sun.mail.pop3.Response:
    boolean ok -> ok
    java.lang.String data -> data
    java.io.InputStream bytes -> bytes
com.sun.mail.pop3.SharedByteArrayOutputStream -> com.sun.mail.pop3.SharedByteArrayOutputStream:
    java.io.InputStream toStream() -> toStream
com.sun.mail.pop3.Status -> com.sun.mail.pop3.Status:
    int total -> total
    int size -> size
com.sun.mail.smtp.DigestMD5 -> com.sun.mail.smtp.DigestMD5:
    java.io.PrintStream debugout -> debugout
    java.security.MessageDigest md5 -> md5
    java.lang.String uri -> uri
    java.lang.String clientResponse -> clientResponse
    char[] digits -> digits
    byte[] authClient(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> authClient
    boolean authServer(java.lang.String) -> authServer
    java.util.Hashtable tokenize(java.lang.String) -> tokenize
    java.lang.String toHex(byte[]) -> toHex
com.sun.mail.smtp.SMTPAddressFailedException -> com.sun.mail.smtp.SMTPAddressFailedException:
    javax.mail.internet.InternetAddress addr -> addr
    java.lang.String cmd -> cmd
    int rc -> rc
    long serialVersionUID -> serialVersionUID
    javax.mail.internet.InternetAddress getAddress() -> getAddress
    java.lang.String getCommand() -> getCommand
    int getReturnCode() -> getReturnCode
com.sun.mail.smtp.SMTPAddressSucceededException -> com.sun.mail.smtp.SMTPAddressSucceededException:
    javax.mail.internet.InternetAddress addr -> addr
    java.lang.String cmd -> cmd
    int rc -> rc
    long serialVersionUID -> serialVersionUID
    javax.mail.internet.InternetAddress getAddress() -> getAddress
    java.lang.String getCommand() -> getCommand
    int getReturnCode() -> getReturnCode
com.sun.mail.smtp.SMTPMessage -> com.sun.mail.smtp.SMTPMessage:
    int NOTIFY_NEVER -> NOTIFY_NEVER
    int NOTIFY_SUCCESS -> NOTIFY_SUCCESS
    int NOTIFY_FAILURE -> NOTIFY_FAILURE
    int NOTIFY_DELAY -> NOTIFY_DELAY
    int RETURN_FULL -> RETURN_FULL
    int RETURN_HDRS -> RETURN_HDRS
    java.lang.String[] returnOptionString -> returnOptionString
    java.lang.String envelopeFrom -> envelopeFrom
    int notifyOptions -> notifyOptions
    int returnOption -> returnOption
    boolean sendPartial -> sendPartial
    boolean allow8bitMIME -> allow8bitMIME
    java.lang.String submitter -> submitter
    java.lang.String extension -> extension
    void setEnvelopeFrom(java.lang.String) -> setEnvelopeFrom
    java.lang.String getEnvelopeFrom() -> getEnvelopeFrom
    void setNotifyOptions(int) -> setNotifyOptions
    int getNotifyOptions() -> getNotifyOptions
    java.lang.String getDSNNotify() -> getDSNNotify
    void setReturnOption(int) -> setReturnOption
    int getReturnOption() -> getReturnOption
    java.lang.String getDSNRet() -> getDSNRet
    void setAllow8bitMIME(boolean) -> setAllow8bitMIME
    boolean getAllow8bitMIME() -> getAllow8bitMIME
    void setSendPartial(boolean) -> setSendPartial
    boolean getSendPartial() -> getSendPartial
    java.lang.String getSubmitter() -> getSubmitter
    void setSubmitter(java.lang.String) -> setSubmitter
    java.lang.String getMailExtension() -> getMailExtension
    void setMailExtension(java.lang.String) -> setMailExtension
com.sun.mail.smtp.SMTPOutputStream -> com.sun.mail.smtp.SMTPOutputStream:
    void write(int) -> write
    void write(byte[],int,int) -> write
    void flush() -> flush
    void ensureAtBOL() -> ensureAtBOL
com.sun.mail.smtp.SMTPSSLTransport -> com.sun.mail.smtp.SMTPSSLTransport:
com.sun.mail.smtp.SMTPSendFailedException -> com.sun.mail.smtp.SMTPSendFailedException:
    javax.mail.internet.InternetAddress addr -> addr
    java.lang.String cmd -> cmd
    int rc -> rc
    long serialVersionUID -> serialVersionUID
    java.lang.String getCommand() -> getCommand
    int getReturnCode() -> getReturnCode
com.sun.mail.smtp.SMTPTransport -> com.sun.mail.smtp.SMTPTransport:
    java.lang.String name -> name
    int defaultPort -> defaultPort
    boolean isSSL -> isSSL
    javax.mail.internet.MimeMessage message -> message
    javax.mail.Address[] addresses -> addresses
    javax.mail.Address[] validSentAddr -> validSentAddr
    javax.mail.Address[] validUnsentAddr -> validUnsentAddr
    javax.mail.Address[] invalidAddr -> invalidAddr
    boolean sendPartiallyFailed -> sendPartiallyFailed
    javax.mail.MessagingException exception -> exception
    com.sun.mail.smtp.SMTPOutputStream dataStream -> dataStream
    java.util.Hashtable extMap -> extMap
    boolean quitWait -> quitWait
    java.lang.String saslRealm -> saslRealm
    boolean reportSuccess -> reportSuccess
    boolean useStartTLS -> useStartTLS
    boolean useRset -> useRset
    java.io.PrintStream out -> out
    java.lang.String localHostName -> localHostName
    java.lang.String lastServerResponse -> lastServerResponse
    int lastReturnCode -> lastReturnCode
    java.lang.String[] ignoreList -> ignoreList
    byte[] CRLF -> CRLF
    java.lang.String UNKNOWN -> UNKNOWN
    com.sun.mail.smtp.DigestMD5 md5support -> md5support
    java.io.BufferedInputStream serverInput -> serverInput
    com.sun.mail.util.LineInputStream lineInputStream -> lineInputStream
    java.io.OutputStream serverOutput -> serverOutput
    java.net.Socket serverSocket -> serverSocket
    char[] hexchar -> hexchar
    boolean $assertionsDisabled -> $assertionsDisabled
    java.lang.String getLocalHost() -> getLocalHost
    void setLocalHost(java.lang.String) -> setLocalHost
    void connect(java.net.Socket) -> connect
    java.lang.String getSASLRealm() -> getSASLRealm
    void setSASLRealm(java.lang.String) -> setSASLRealm
    boolean getReportSuccess() -> getReportSuccess
    void setReportSuccess(boolean) -> setReportSuccess
    boolean getStartTLS() -> getStartTLS
    void setStartTLS(boolean) -> setStartTLS
    boolean getUseRset() -> getUseRset
    void setUseRset(boolean) -> setUseRset
    java.lang.String getLastServerResponse() -> getLastServerResponse
    int getLastReturnCode() -> getLastReturnCode
    com.sun.mail.smtp.DigestMD5 getMD5() -> getMD5
    boolean protocolConnect(java.lang.String,int,java.lang.String,java.lang.String) -> protocolConnect
    void sendMessage(javax.mail.Message,javax.mail.Address[]) -> sendMessage
    void close() -> close
    void closeConnection() -> closeConnection
    boolean isConnected() -> isConnected
    void expandGroups() -> expandGroups
    boolean convertTo8Bit(javax.mail.internet.MimePart) -> convertTo8Bit
    boolean is8Bit(java.io.InputStream) -> is8Bit
    void finalize() -> finalize
    void helo(java.lang.String) -> helo
    boolean ehlo(java.lang.String) -> ehlo
    void mailFrom() -> mailFrom
    void rcptTo() -> rcptTo
    java.io.OutputStream data() -> data
    void finishData() -> finishData
    void startTLS() -> startTLS
    void openServer(java.lang.String,int) -> openServer
    void openServer() -> openServer
    void initStreams() -> initStreams
    void issueCommand(java.lang.String,int) -> issueCommand
    void issueSendCommand(java.lang.String,int) -> issueSendCommand
    int simpleCommand(java.lang.String) -> simpleCommand
    int simpleCommand(byte[]) -> simpleCommand
    void sendCommand(java.lang.String) -> sendCommand
    void sendCommand(byte[]) -> sendCommand
    int readServerResponse() -> readServerResponse
    void checkConnected() -> checkConnected
    boolean isNotLastLine(java.lang.String) -> isNotLastLine
    java.lang.String normalizeAddress(java.lang.String) -> normalizeAddress
    boolean supportsExtension(java.lang.String) -> supportsExtension
    java.lang.String getExtensionParameter(java.lang.String) -> getExtensionParameter
    boolean supportsAuthentication(java.lang.String) -> supportsAuthentication
    java.lang.String xtext(java.lang.String) -> xtext
com.sun.mail.util.ASCIIUtility -> com.sun.mail.util.ASCIIUtility:
    int parseInt(byte[],int,int,int) -> parseInt
    int parseInt(byte[],int,int) -> parseInt
    long parseLong(byte[],int,int,int) -> parseLong
    long parseLong(byte[],int,int) -> parseLong
    java.lang.String toString(byte[],int,int) -> toString
    java.lang.String toString(java.io.ByteArrayInputStream) -> toString
    byte[] getBytes(java.lang.String) -> getBytes
    byte[] getBytes(java.io.InputStream) -> getBytes
com.sun.mail.util.BASE64DecoderStream -> com.sun.mail.util.BASE64DecoderStream:
    byte[] buffer -> buffer
    int bufsize -> bufsize
    int index -> index
    byte[] input_buffer -> input_buffer
    int input_pos -> input_pos
    int input_len -> input_len
    boolean ignoreErrors -> ignoreErrors
    char[] pem_array -> pem_array
    byte[] pem_convert_array -> pem_convert_array
    int read() -> read
    int read(byte[],int,int) -> read
    boolean markSupported() -> markSupported
    int available() -> available
    int decode(byte[],int,int) -> decode
    int getByte() -> getByte
    java.lang.String recentChars() -> recentChars
    byte[] decode(byte[]) -> decode
com.sun.mail.util.BASE64EncoderStream -> com.sun.mail.util.BASE64EncoderStream:
    byte[] buffer -> buffer
    int bufsize -> bufsize
    byte[] outbuf -> outbuf
    int count -> count
    int bytesPerLine -> bytesPerLine
    int lineLimit -> lineLimit
    boolean noCRLF -> noCRLF
    byte[] newline -> newline
    char[] pem_array -> pem_array
    void write(byte[],int,int) -> write
    void write(byte[]) -> write
    void write(int) -> write
    void flush() -> flush
    void close() -> close
    void encode() -> encode
    byte[] encode(byte[]) -> encode
    byte[] encode(byte[],int,int,byte[]) -> encode
    int encodedSize(int) -> encodedSize
com.sun.mail.util.BEncoderStream -> com.sun.mail.util.BEncoderStream:
    int encodedLength(byte[]) -> encodedLength
com.sun.mail.util.CRLFOutputStream -> com.sun.mail.util.CRLFOutputStream:
    int lastb -> lastb
    boolean atBOL -> atBOL
    byte[] newline -> newline
    void write(int) -> write
    void write(byte[]) -> write
    void write(byte[],int,int) -> write
    void writeln() -> writeln
com.sun.mail.util.FolderClosedIOException -> com.sun.mail.util.FolderClosedIOException:
    javax.mail.Folder folder -> folder
    long serialVersionUID -> serialVersionUID
    javax.mail.Folder getFolder() -> getFolder
com.sun.mail.util.LineInputStream -> com.sun.mail.util.LineInputStream:
    char[] lineBuffer -> lineBuffer
    java.lang.String readLine() -> readLine
com.sun.mail.util.LineOutputStream -> com.sun.mail.util.LineOutputStream:
    byte[] newline -> newline
    void writeln(java.lang.String) -> writeln
    void writeln() -> writeln
com.sun.mail.util.MessageRemovedIOException -> com.sun.mail.util.MessageRemovedIOException:
    long serialVersionUID -> serialVersionUID
com.sun.mail.util.QDecoderStream -> com.sun.mail.util.QDecoderStream:
    int read() -> read
com.sun.mail.util.QEncoderStream -> com.sun.mail.util.QEncoderStream:
    java.lang.String specials -> specials
    java.lang.String WORD_SPECIALS -> WORD_SPECIALS
    java.lang.String TEXT_SPECIALS -> TEXT_SPECIALS
    void write(int) -> write
    int encodedLength(byte[],boolean) -> encodedLength
com.sun.mail.util.QPDecoderStream -> com.sun.mail.util.QPDecoderStream:
    byte[] ba -> ba
    int spaces -> spaces
    int read() -> read
    int read(byte[],int,int) -> read
    boolean markSupported() -> markSupported
    int available() -> available
com.sun.mail.util.QPEncoderStream -> com.sun.mail.util.QPEncoderStream:
    int count -> count
    int bytesPerLine -> bytesPerLine
    boolean gotSpace -> gotSpace
    boolean gotCR -> gotCR
    char[] hex -> hex
    void write(byte[],int,int) -> write
    void write(byte[]) -> write
    void write(int) -> write
    void flush() -> flush
    void close() -> close
    void outputCRLF() -> outputCRLF
    void output(int,boolean) -> output
com.sun.mail.util.SocketFetcher -> com.sun.mail.util.SocketFetcher:
    java.net.Socket getSocket(java.lang.String,int,java.util.Properties,java.lang.String,boolean) -> getSocket
    java.net.Socket getSocket(java.lang.String,int,java.util.Properties,java.lang.String) -> getSocket
    java.net.Socket createSocket(java.net.InetAddress,int,java.lang.String,int,int,javax.net.SocketFactory,boolean) -> createSocket
    javax.net.SocketFactory getSocketFactory(java.lang.String) -> getSocketFactory
    java.net.Socket startTLS(java.net.Socket) -> startTLS
    java.net.Socket startTLS(java.net.Socket,java.util.Properties,java.lang.String) -> startTLS
    void configureSSLSocket(java.net.Socket,java.util.Properties,java.lang.String) -> configureSSLSocket
    java.lang.String[] stringArray(java.lang.String) -> stringArray
    java.lang.ClassLoader getContextClassLoader() -> getContextClassLoader
com.sun.mail.util.SocketFetcher$1 -> com.sun.mail.util.SocketFetcher$1:
    java.lang.Object run() -> run
com.sun.mail.util.TraceInputStream -> com.sun.mail.util.TraceInputStream:
    boolean trace -> trace
    boolean quote -> quote
    java.io.OutputStream traceOut -> traceOut
    void setTrace(boolean) -> setTrace
    void setQuote(boolean) -> setQuote
    int read() -> read
    int read(byte[],int,int) -> read
    void writeByte(int) -> writeByte
com.sun.mail.util.TraceOutputStream -> com.sun.mail.util.TraceOutputStream:
    boolean trace -> trace
    boolean quote -> quote
    java.io.OutputStream traceOut -> traceOut
    void setTrace(boolean) -> setTrace
    void setQuote(boolean) -> setQuote
    void write(int) -> write
    void write(byte[],int,int) -> write
    void writeByte(int) -> writeByte
com.sun.mail.util.UUDecoderStream -> com.sun.mail.util.UUDecoderStream:
    java.lang.String name -> name
    int mode -> mode
    byte[] buffer -> buffer
    int bufsize -> bufsize
    int index -> index
    boolean gotPrefix -> gotPrefix
    boolean gotEnd -> gotEnd
    com.sun.mail.util.LineInputStream lin -> lin
    int read() -> read
    int read(byte[],int,int) -> read
    boolean markSupported() -> markSupported
    int available() -> available
    java.lang.String getName() -> getName
    int getMode() -> getMode
    void readPrefix() -> readPrefix
    boolean decode() -> decode
com.sun.mail.util.UUEncoderStream -> com.sun.mail.util.UUEncoderStream:
    byte[] buffer -> buffer
    int bufsize -> bufsize
    boolean wrotePrefix -> wrotePrefix
    java.lang.String name -> name
    int mode -> mode
    void setNameMode(java.lang.String,int) -> setNameMode
    void write(byte[],int,int) -> write
    void write(byte[]) -> write
    void write(int) -> write
    void flush() -> flush
    void close() -> close
    void writePrefix() -> writePrefix
    void writeSuffix() -> writeSuffix
    void encode() -> encode
com.zgy.ringforu.LogRingForu -> com.zgy.ringforu.a:
    void d(java.lang.String,java.lang.String) -> a
    void e(java.lang.String,java.lang.String) -> b
    void v(java.lang.String,java.lang.String) -> c
    void i(java.lang.String,java.lang.String) -> d
com.zgy.ringforu.MainCanstants -> com.zgy.ringforu.b:
    long[] VIBRATE_STREGTH_ERROR -> a
    int[] INT_ONFLING_LEN -> b
    java.lang.String FILE_PATH_IN_SDCARD -> d
    java.io.File FILE_IN_SDCARD -> e
    java.io.File FILE_SDCARD_IMPORTANT_NUM -> f
    java.io.File FILE_SDCARD_IMPORTANT_NAME -> g
    java.io.File FILE_SDCARD_CALL_NUM -> h
    java.io.File FILE_SDCARD_CALL_NAME -> i
    java.io.File FILE_SDCARD_SMS_NUM -> j
    java.io.File FILE_SDCARD_SMS_NAME -> k
    java.io.File FILE_WATERMARK_IMG -> c
    java.lang.String FILE_WATERMARK_IMG_TEMP_CUT_DES -> l
    java.lang.String FILE_WATERMARK_IMG_TEMP_CUT_SRC -> m
    java.io.File getSdFile() -> a
    void checkSdFile() -> j
    java.io.File getSdFileImportantNum() -> b
    java.io.File getSdFileImportantName() -> c
    java.io.File getSdFileSmsNum() -> d
    java.io.File getSdFileSmsName() -> e
    java.io.File getSdFileCallNum() -> f
    java.io.File getSdFileCallName() -> g
    java.lang.String getsdFileWaterMarkCutSrcTemp() -> h
    java.lang.String getsdFileWaterMarkCutDesTemp() -> i
com.zgy.ringforu.RingForU -> com.zgy.ringforu.RingForU:
    boolean DEBUG -> a
    boolean DB_SAVE_SDCARD -> b
    boolean bIsVerbOn -> c
    boolean bIsGestureOn -> d
    int selsectedTabId -> e
    com.zgy.ringforu.RingForU application -> f
    java.lang.String numbersImportant -> g
    java.lang.String numbersCall -> h
    java.lang.String numbersSms -> i
    java.lang.String packageNameHideWaterMark -> j
    java.util.List mAllPushMessageNotificationIds -> k
    android.view.WindowManager$LayoutParams wmParams -> l
    android.view.WindowManager$LayoutParams getMywmParams() -> a
    void onCreate() -> onCreate
    com.zgy.ringforu.RingForU getInstance() -> b
    boolean isbIsVerbOn() -> c
    void setbIsVerbOn(boolean) -> a
    boolean isbIsGestureOn() -> d
    void setbIsGestureOn(boolean) -> b
    int getSelsectedTabId() -> e
    void setSelsectedTabId(int) -> a
    java.lang.String getNumbersImportant() -> f
    void setNumbersImportant(java.lang.String) -> a
    java.lang.String getNumbersCall() -> g
    void setNumbersCall(java.lang.String) -> b
    java.lang.String getNumbersSms() -> h
    void setNumbersSms(java.lang.String) -> c
    java.lang.String getPackageNameHideWaterMark() -> i
    void setPackageNameHideWaterMark(java.lang.String) -> d
    java.util.List getmAllPushMessageNotificationIds() -> j
    void putOneInmAllPushMessageNotificationIds(java.lang.Integer) -> a
    void removeOneInmAllPushMessageNotificationIds(java.lang.Integer) -> b
com.zgy.ringforu.activity.AboutActivity -> com.zgy.ringforu.activity.AboutActivity:
    android.widget.Button btnBack -> c
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    void onClick(android.view.View) -> onClick
    void onSlideToRight() -> a
    void onSlideToLeft() -> b
com.zgy.ringforu.activity.AddByContactsActivity -> com.zgy.ringforu.activity.AddByContactsActivity:
    android.content.AsyncQueryHandler asyncQuery -> c
    android.widget.RelativeLayout layoutTitle -> d
    android.widget.ListView listviewContacts -> e
    java.util.ArrayList listContacts -> f
    java.util.ArrayList listItem -> g
    android.widget.SimpleAdapter listItemAdapter -> h
    android.widget.TextView textShowLeft -> i
    android.widget.TextView textShowNull -> j
    com.zgy.ringforu.view.TextEditor editSearch -> k
    android.widget.ImageView imgClearEdit -> l
    android.widget.ImageView imgLoading -> m
    android.widget.LinearLayout layoutTip -> n
    android.widget.Button btnBack -> o
    android.graphics.drawable.AnimationDrawable animationDrawable -> p
    int tag -> q
    void onCreate(android.os.Bundle) -> onCreate
    void freshListView() -> c
    void refreshViews() -> d
    void onDestroy() -> onDestroy
    void onClick(android.view.View) -> onClick
    void onResume() -> onResume
    boolean matchIgnorCase(java.lang.String,java.lang.String) -> a
    void onSlideToRight() -> a
    void onSlideToLeft() -> b
    void access$0(com.zgy.ringforu.activity.AddByContactsActivity,java.util.ArrayList) -> a
    java.util.ArrayList access$1(com.zgy.ringforu.activity.AddByContactsActivity) -> a
    void access$2(com.zgy.ringforu.activity.AddByContactsActivity) -> b
    com.zgy.ringforu.view.TextEditor access$3(com.zgy.ringforu.activity.AddByContactsActivity) -> c
    java.util.ArrayList access$4(com.zgy.ringforu.activity.AddByContactsActivity) -> d
    int access$5(com.zgy.ringforu.activity.AddByContactsActivity) -> e
    android.widget.SimpleAdapter access$6(com.zgy.ringforu.activity.AddByContactsActivity) -> f
    android.os.Vibrator access$7(com.zgy.ringforu.activity.AddByContactsActivity) -> g
    void access$8(com.zgy.ringforu.activity.AddByContactsActivity) -> h
    android.widget.ImageView access$9(com.zgy.ringforu.activity.AddByContactsActivity) -> i
    void access$10(com.zgy.ringforu.activity.AddByContactsActivity,java.lang.String) -> a
com.zgy.ringforu.activity.AddByContactsActivity$1 -> com.zgy.ringforu.activity.a:
    com.zgy.ringforu.activity.AddByContactsActivity this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.zgy.ringforu.activity.AddByContactsActivity$2 -> com.zgy.ringforu.activity.b:
    com.zgy.ringforu.activity.AddByContactsActivity this$0 -> a
    boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long) -> onItemLongClick
com.zgy.ringforu.activity.AddByContactsActivity$3 -> com.zgy.ringforu.activity.c:
    com.zgy.ringforu.activity.AddByContactsActivity this$0 -> a
    void onTextChanged$649febc7(java.lang.String) -> a
com.zgy.ringforu.activity.AddByContactsActivity$MyAsyncQueryHandler -> com.zgy.ringforu.activity.d:
    com.zgy.ringforu.activity.AddByContactsActivity this$0 -> a
    void onQueryComplete(int,java.lang.Object,android.database.Cursor) -> onQueryComplete
com.zgy.ringforu.activity.AddByInputActivity -> com.zgy.ringforu.activity.AddByInputActivity:
    android.widget.EditText editName -> c
    android.widget.EditText editNumber -> d
    android.widget.Button btnOk -> e
    android.widget.Button btnBack -> f
    android.widget.TextView textShowLeft -> g
    int tag -> h
    boolean addOne -> i
    void onCreate(android.os.Bundle) -> onCreate
    void refresh() -> c
    void onClick(android.view.View) -> onClick
    void addOper() -> d
    void onDestroy() -> onDestroy
    void onSlideToRight() -> a
    void onSlideToLeft() -> b
com.zgy.ringforu.activity.AddSlientPerActivity -> com.zgy.ringforu.activity.AddSlientPerActivity:
    com.zgy.ringforu.view.WheelView hoursPickStart -> c
    com.zgy.ringforu.view.WheelView hoursPickEnd -> d
    com.zgy.ringforu.view.WheelView minutesPickStart -> e
    com.zgy.ringforu.view.WheelView minutesPickEnd -> f
    android.widget.Button btnBack -> g
    android.widget.Button btnAdd -> h
    void onCreate(android.os.Bundle) -> onCreate
    void addChangingListener(com.zgy.ringforu.view.WheelView) -> a
    void addScrollingListener(com.zgy.ringforu.view.WheelView) -> b
    void addSlientTime() -> c
    void onClick(android.view.View) -> onClick
    void onDestroy() -> onDestroy
    void onSlideToRight() -> a
    void onSlideToLeft() -> b
com.zgy.ringforu.activity.AddSlientPerActivity$1 -> com.zgy.ringforu.activity.e:
    com.zgy.ringforu.activity.AddSlientPerActivity this$0 -> a
com.zgy.ringforu.activity.AddSlientPerActivity$2 -> com.zgy.ringforu.activity.f:
    com.zgy.ringforu.activity.AddSlientPerActivity this$0 -> a
com.zgy.ringforu.activity.BaseGestureActivity -> com.zgy.ringforu.activity.BaseGestureActivity:
    boolean mGetResult -> c
    android.os.Vibrator mVb -> a
    android.view.GestureDetector mGestureDetector -> b
    void onSlideToRight() -> a
    void onSlideToLeft() -> b
    void onCreate(android.os.Bundle) -> onCreate
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    boolean onDown(android.view.MotionEvent) -> onDown
    void onShowPress(android.view.MotionEvent) -> onShowPress
    boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    void onLongPress(android.view.MotionEvent) -> onLongPress
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
com.zgy.ringforu.activity.BaseGestureActivityGroup -> com.zgy.ringforu.activity.BaseGestureActivityGroup:
    boolean mGetResult -> c
    android.os.Vibrator mVb -> a
    android.view.GestureDetector mGestureDetector -> b
    void onSlideToRight() -> a
    void onSlideToLeft() -> b
    void onCreate(android.os.Bundle) -> onCreate
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    boolean onDown(android.view.MotionEvent) -> onDown
    void onShowPress(android.view.MotionEvent) -> onShowPress
    boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    void onLongPress(android.view.MotionEvent) -> onLongPress
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
com.zgy.ringforu.activity.FeedBackActivity -> com.zgy.ringforu.activity.FeedBackActivity:
    android.widget.Button btnBack -> c
    android.widget.Button btnSubmit -> d
    android.widget.EditText editContent -> e
    android.widget.AutoCompleteTextView editEmail -> f
    void onCreate(android.os.Bundle) -> onCreate
    void doFeedBack() -> c
    void onClick(android.view.View) -> onClick
    void onDestroy() -> onDestroy
    void onSlideToRight() -> a
    void onSlideToLeft() -> b
    android.widget.EditText access$0(com.zgy.ringforu.activity.FeedBackActivity) -> a
    java.lang.String access$1(com.zgy.ringforu.activity.FeedBackActivity) -> b
com.zgy.ringforu.activity.FeedBackActivity$1 -> com.zgy.ringforu.activity.g:
    com.zgy.ringforu.activity.FeedBackActivity this$0 -> a
    void run() -> run
com.zgy.ringforu.activity.MainActivityGroup -> com.zgy.ringforu.activity.MainActivityGroup:
    android.widget.LinearLayout bodyView -> c
    android.widget.LinearLayout tabImportant -> d
    android.widget.LinearLayout tabCall -> e
    android.widget.LinearLayout tabSms -> f
    android.widget.LinearLayout tabMore -> g
    android.widget.ImageView imgImportant -> h
    android.widget.ImageView imgCall -> i
    android.widget.ImageView imgSms -> j
    android.widget.ImageView imgMore -> k
    int flag -> l
    com.zgy.ringforu.interfaces.OnGestureChangedListener mListener -> m
    void onCreate(android.os.Bundle) -> onCreate
    void onNewIntent(android.content.Intent) -> onNewIntent
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    void showView(int) -> a
    void onClick(android.view.View) -> onClick
    void onDestroy() -> onDestroy
    void setOnGestureChangedListener(com.zgy.ringforu.interfaces.OnGestureChangedListener) -> a
    void onSlideToRight() -> a
    void onSlideToLeft() -> b
com.zgy.ringforu.activity.NaviActivity -> com.zgy.ringforu.activity.NaviActivity:
    void onCreate(android.os.Bundle) -> onCreate
    android.graphics.Bitmap readBitMap$2c4494f4() -> a
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
com.zgy.ringforu.activity.NaviActivity$1 -> com.zgy.ringforu.activity.h:
    com.zgy.ringforu.activity.NaviActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.zgy.ringforu.activity.NaviActivity$MyViewPagerAdapter -> com.zgy.ringforu.activity.i:
    java.util.List mListViews -> b
    com.zgy.ringforu.activity.NaviActivity this$0 -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    int getCount() -> getCount
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
com.zgy.ringforu.activity.NewVersionInfoActivity -> com.zgy.ringforu.activity.NewVersionInfoActivity:
    android.widget.TextView textInfo -> c
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    void onClick(android.view.View) -> onClick
com.zgy.ringforu.activity.PickerApplicationActivity -> com.zgy.ringforu.activity.PickerApplicationActivity:
    android.widget.ListView mListView -> c
    android.widget.Button mBtnOk -> d
    android.widget.Button mBtnBack -> e
    android.widget.ImageView imgLoading -> f
    android.graphics.drawable.AnimationDrawable animationDrawable -> g
    java.util.ArrayList mAppsInfoList -> h
    android.widget.AdapterView$OnItemClickListener mLsnListItemClick -> i
    void onCreate(android.os.Bundle) -> onCreate
    void finalize() -> finalize
    void onClick(android.view.View) -> onClick
    void onSet() -> c
    void onSlideToRight() -> a
    void onSlideToLeft() -> b
    android.os.Vibrator access$0(com.zgy.ringforu.activity.PickerApplicationActivity) -> a
    java.util.ArrayList access$1(com.zgy.ringforu.activity.PickerApplicationActivity) -> b
    void access$2(com.zgy.ringforu.activity.PickerApplicationActivity) -> c
    void access$3(com.zgy.ringforu.activity.PickerApplicationActivity,java.util.ArrayList) -> a
    android.graphics.drawable.AnimationDrawable access$4(com.zgy.ringforu.activity.PickerApplicationActivity) -> d
    android.widget.ImageView access$5(com.zgy.ringforu.activity.PickerApplicationActivity) -> e
    android.widget.ListView access$6(com.zgy.ringforu.activity.PickerApplicationActivity) -> f
    android.widget.AdapterView$OnItemClickListener access$7(com.zgy.ringforu.activity.PickerApplicationActivity) -> g
com.zgy.ringforu.activity.PickerApplicationActivity$1 -> com.zgy.ringforu.activity.j:
    com.zgy.ringforu.activity.PickerApplicationActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.zgy.ringforu.activity.PickerApplicationActivity$2 -> com.zgy.ringforu.activity.k:
    com.zgy.ringforu.activity.PickerApplicationActivity this$0 -> a
    void run() -> run
com.zgy.ringforu.activity.PickerApplicationActivity$2$1 -> com.zgy.ringforu.activity.l:
    com.zgy.ringforu.activity.PickerApplicationActivity$2 this$1 -> a
    void run() -> run
com.zgy.ringforu.activity.PushMessageListActivity -> com.zgy.ringforu.activity.PushMessageListActivity:
    android.widget.TextView mTextTitle -> c
    android.widget.ListView mListView -> d
    android.widget.Button mBtnBack -> e
    android.widget.Button mBtnDelete -> f
    android.widget.Button mBtnCancelSelect -> g
    android.widget.ImageView imgLoading -> h
    android.graphics.drawable.AnimationDrawable animationDrawable -> i
    android.view.View mViewLoadMore -> j
    android.widget.RelativeLayout mLayoutLoadMore -> k
    android.widget.ProgressBar mProgressbarLoadMore -> l
    java.util.List mPushmessageList -> m
    java.util.List mPushmessageListSelected -> n
    com.zgy.ringforu.logic.PushMessageController mController -> o
    android.content.BroadcastReceiver mReciever -> p
    android.app.ActivityManager mActivityManager -> q
    com.zgy.ringforu.adapter.PushMessageListAdapter mAdapter -> r
    android.widget.AdapterView$OnItemClickListener mLsnListItemClick -> s
    android.widget.AdapterView$OnItemLongClickListener mLsnListItemLongClick -> t
    com.zgy.ringforu.interfaces.PushMessageCallBack mCallBack -> u
    void onCreate(android.os.Bundle) -> onCreate
    void finalize() -> finalize
    void refreshListView() -> c
    void refreshButtonViews() -> d
    void cancelSelected() -> e
    void showDeleteDlg() -> f
    void onResume() -> onResume
    void onClick(android.view.View) -> onClick
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onDestroy() -> onDestroy
    void onSlideToRight() -> a
    void onSlideToLeft() -> b
    android.os.Vibrator access$0(com.zgy.ringforu.activity.PushMessageListActivity) -> a
    java.util.List access$1(com.zgy.ringforu.activity.PushMessageListActivity) -> b
    com.zgy.ringforu.logic.PushMessageController access$2(com.zgy.ringforu.activity.PushMessageListActivity) -> c
    com.zgy.ringforu.interfaces.PushMessageCallBack access$3(com.zgy.ringforu.activity.PushMessageListActivity) -> d
    java.util.List access$4(com.zgy.ringforu.activity.PushMessageListActivity) -> e
    void access$5(com.zgy.ringforu.activity.PushMessageListActivity) -> f
    void access$6(com.zgy.ringforu.activity.PushMessageListActivity,java.util.List) -> a
    android.widget.ImageView access$7(com.zgy.ringforu.activity.PushMessageListActivity) -> g
    android.graphics.drawable.AnimationDrawable access$8(com.zgy.ringforu.activity.PushMessageListActivity) -> h
    android.widget.TextView access$9(com.zgy.ringforu.activity.PushMessageListActivity) -> i
    void access$10(com.zgy.ringforu.activity.PushMessageListActivity,int) -> a
    void access$11(com.zgy.ringforu.activity.PushMessageListActivity,java.util.List) -> b
    android.app.ActivityManager access$12(com.zgy.ringforu.activity.PushMessageListActivity) -> j
    void access$13(com.zgy.ringforu.activity.PushMessageListActivity) -> k
com.zgy.ringforu.activity.PushMessageListActivity$1 -> com.zgy.ringforu.activity.m:
    com.zgy.ringforu.activity.PushMessageListActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.zgy.ringforu.activity.PushMessageListActivity$2 -> com.zgy.ringforu.activity.n:
    com.zgy.ringforu.activity.PushMessageListActivity this$0 -> a
    boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long) -> onItemLongClick
com.zgy.ringforu.activity.PushMessageListActivity$3 -> com.zgy.ringforu.activity.o:
    com.zgy.ringforu.activity.PushMessageListActivity this$0 -> a
    void getPushMessageListFinished(boolean,java.util.List,int) -> a
    void deletePushMessagesFinished(int[],boolean) -> a
com.zgy.ringforu.activity.PushMessageListActivity$3$1 -> com.zgy.ringforu.activity.p:
    com.zgy.ringforu.activity.PushMessageListActivity$3 this$1 -> a
    int val$allCount -> b
    java.util.List val$pushMessages -> c
    void run() -> run
com.zgy.ringforu.activity.PushMessageListActivity$3$2 -> com.zgy.ringforu.activity.q:
    com.zgy.ringforu.activity.PushMessageListActivity$3 this$1 -> a
    boolean val$result -> b
    int[] val$ids -> c
    void run() -> run
com.zgy.ringforu.activity.PushMessageListActivity$4 -> com.zgy.ringforu.activity.r:
    com.zgy.ringforu.activity.PushMessageListActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.zgy.ringforu.activity.PushMessageListActivity$5 -> com.zgy.ringforu.activity.s:
    com.zgy.ringforu.activity.PushMessageListActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.zgy.ringforu.activity.PushMessageListActivity$MyBroadcastReceiver -> com.zgy.ringforu.activity.t:
    com.zgy.ringforu.activity.PushMessageListActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.zgy.ringforu.activity.PushMessageShowActivity -> com.zgy.ringforu.activity.PushMessageShowActivity:
    android.widget.Button btnBack -> c
    android.widget.Button btnShare -> d
    android.widget.TextView textInfo -> e
    android.widget.TextView textTitle -> f
    android.widget.ImageView imgTag -> g
    com.zgy.ringforu.view.FCMenu mTopMenu -> h
    com.zgy.ringforu.activity.PushMessageShowActivity$OnTopMenuItemClickedListener mTopMenuListener -> i
    java.lang.String mTitle -> j
    java.lang.String mContent -> k
    java.lang.String mTag -> l
    long mReceiveTime -> m
    com.zgy.ringforu.logic.PushMessageController mController -> n
    com.zgy.ringforu.interfaces.PushMessageCallBack mPushMessageCallback -> o
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    void onClick(android.view.View) -> onClick
    void onSlideToRight() -> a
    void onSlideToLeft() -> b
    android.os.Vibrator access$0(com.zgy.ringforu.activity.PushMessageShowActivity) -> a
    java.lang.String access$1(com.zgy.ringforu.activity.PushMessageShowActivity) -> b
    java.lang.String access$2(com.zgy.ringforu.activity.PushMessageShowActivity) -> c
    com.zgy.ringforu.logic.PushMessageController access$3(com.zgy.ringforu.activity.PushMessageShowActivity) -> d
    long access$4(com.zgy.ringforu.activity.PushMessageShowActivity) -> e
    com.zgy.ringforu.interfaces.PushMessageCallBack access$5(com.zgy.ringforu.activity.PushMessageShowActivity) -> f
com.zgy.ringforu.activity.PushMessageShowActivity$1 -> com.zgy.ringforu.activity.u:
    com.zgy.ringforu.activity.PushMessageShowActivity this$0 -> a
    void setPushMessageReadStatueFinished(boolean) -> a
com.zgy.ringforu.activity.PushMessageShowActivity$OnTopMenuItemClickedListener -> com.zgy.ringforu.activity.v:
    com.zgy.ringforu.activity.PushMessageShowActivity this$0 -> a
    void onItemClicked(com.zgy.ringforu.view.FCMenuItem) -> a
com.zgy.ringforu.activity.ReceiveNumbersFromOthersActivity -> com.zgy.ringforu.activity.ReceiveNumbersFromOthersActivity:
    android.widget.TextView textShowContent -> a
    android.widget.Button btnSms -> b
    android.widget.Button btnCall -> c
    android.widget.Button btnImportant -> d
    android.os.Vibrator vb -> e
    java.lang.String getNumber -> f
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
    void onDestroy() -> onDestroy
com.zgy.ringforu.activity.SetActivity -> com.zgy.ringforu.activity.SetActivity:
    android.widget.Button btnBack -> c
    android.widget.TextView textTitle -> d
    android.widget.LinearLayout layoutImportant -> e
    android.widget.RelativeLayout layoutImportantClam1 -> f
    android.widget.RelativeLayout layoutImportantClam2 -> g
    android.widget.ImageView imgImportantAddClam -> h
    android.widget.TextView textImportantClam1 -> i
    android.widget.TextView textImportantClam2 -> j
    android.widget.ImageView imgImportantDeleteClam1 -> k
    android.widget.ImageView imgIMportantDeleteClam2 -> l
    android.widget.RelativeLayout layoutImportantBackup -> m
    android.widget.LinearLayout layoutCall -> n
    android.widget.RelativeLayout layoutCallBackup -> o
    android.widget.RelativeLayout layoutCallHideStyle -> p
    android.widget.TextView textCallHideStyleTitle -> q
    android.widget.TextView textCallHideStyleInfo -> r
    android.widget.LinearLayout layoutSms -> s
    android.widget.RelativeLayout layoutSmsBackup -> t
    android.widget.RelativeLayout layoutSmsHideStyle -> u
    android.widget.TextView textSmsHideStyleTitle -> v
    android.widget.TextView textSmsHideStyleInfo -> w
    int tag -> x
    com.zgy.ringforu.config.MainConfig mMainConfig -> y
    void onCreate(android.os.Bundle) -> onCreate
    void refreshView() -> c
    void onClick(android.view.View) -> onClick
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    void onSlideToRight() -> a
    void onSlideToLeft() -> b
com.zgy.ringforu.activity.SetHideStyleActivity -> com.zgy.ringforu.activity.SetHideStyleActivity:
    int tag -> c
    android.widget.RelativeLayout smsDisreceive -> d
    android.widget.RelativeLayout smsSlientReceive -> e
    android.widget.ImageView imgSmsDisreceive -> f
    android.widget.ImageView imgSmsSlientReceive -> g
    android.widget.RelativeLayout callNoAnswer -> h
    android.widget.RelativeLayout callNull -> i
    android.widget.RelativeLayout callShutDwon -> j
    android.widget.RelativeLayout callReceiveShutDown -> k
    android.widget.ImageView imgCallNoAnswer -> l
    android.widget.ImageView imgCallNull -> m
    android.widget.ImageView imgCallShutDwon -> n
    android.widget.ImageView imgCallReceiveShutDown -> o
    android.widget.Button btnBack -> p
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
    void refreshCallSelected() -> c
    void refreshSmsSelected() -> d
    void onDestroy() -> onDestroy
    void onSlideToRight() -> a
    void onSlideToLeft() -> b
com.zgy.ringforu.activity.TabCallActivity -> com.zgy.ringforu.activity.TabCallActivity:
    java.lang.String allNumbersSelected -> b
    java.lang.String allNameSelected -> c
    android.widget.LinearLayout layoutShowNull -> d
    android.widget.TextView textShowdelTip -> e
    android.widget.ListView listMain -> f
    android.widget.SimpleAdapter listItemAdapter -> g
    android.widget.Button btnSet -> h
    android.widget.Button btnExit -> i
    java.util.ArrayList listItem -> a
    com.zgy.ringforu.view.FCMenu mTopMenu -> j
    com.zgy.ringforu.activity.TabCallActivity$OnTopMenuItemClickedListener mTopMenuListener -> k
    com.zgy.ringforu.interfaces.OnGestureChangedListener mGuesterListener -> l
    void onCreate(android.os.Bundle) -> onCreate
    void initListView() -> a
    void refreshViews() -> b
    void onDestroy() -> onDestroy
    void onResume() -> onResume
    void onClick(android.view.View) -> onClick
    android.widget.Button access$0(com.zgy.ringforu.activity.TabCallActivity) -> a
    android.widget.Button access$1(com.zgy.ringforu.activity.TabCallActivity) -> b
    com.zgy.ringforu.view.FCMenu access$2(com.zgy.ringforu.activity.TabCallActivity) -> c
    void access$3(com.zgy.ringforu.activity.TabCallActivity) -> d
    android.widget.SimpleAdapter access$4(com.zgy.ringforu.activity.TabCallActivity) -> e
    void access$5(com.zgy.ringforu.activity.TabCallActivity) -> f
    void access$6(com.zgy.ringforu.activity.TabCallActivity) -> g
com.zgy.ringforu.activity.TabCallActivity$1 -> com.zgy.ringforu.activity.w:
    com.zgy.ringforu.activity.TabCallActivity this$0 -> a
    void onSlideToRight() -> a
    void onSlideToLeft() -> b
com.zgy.ringforu.activity.TabCallActivity$2 -> com.zgy.ringforu.activity.x:
    com.zgy.ringforu.activity.TabCallActivity this$0 -> a
    boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long) -> onItemLongClick
com.zgy.ringforu.activity.TabCallActivity$3 -> com.zgy.ringforu.activity.y:
    com.zgy.ringforu.activity.TabCallActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.zgy.ringforu.activity.TabCallActivity$4 -> com.zgy.ringforu.activity.z:
    com.zgy.ringforu.activity.TabCallActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.zgy.ringforu.activity.TabCallActivity$OnTopMenuItemClickedListener -> com.zgy.ringforu.activity.aa:
    com.zgy.ringforu.activity.TabCallActivity this$0 -> a
    void onItemClicked(com.zgy.ringforu.view.FCMenuItem) -> a
com.zgy.ringforu.activity.TabImportantActivity -> com.zgy.ringforu.activity.TabImportantActivity:
    java.lang.String allNumbersSelected -> b
    java.lang.String allNameSelected -> c
    android.widget.LinearLayout layoutShowNull -> d
    android.widget.TextView textShowdelTip -> e
    android.widget.ListView listMain -> f
    android.widget.SimpleAdapter listItemAdapter -> g
    android.widget.Button btnSet -> h
    android.widget.Button btnExit -> i
    java.util.ArrayList listItem -> a
    com.zgy.ringforu.view.FCMenu mTopMenu -> j
    com.zgy.ringforu.activity.TabImportantActivity$OnTopMenuItemClickedListener mTopMenuListener -> k
    com.zgy.ringforu.interfaces.OnGestureChangedListener mGuesterListener -> l
    void onCreate(android.os.Bundle) -> onCreate
    void initListView() -> a
    void refreshViews() -> b
    void initTopMenu() -> c
    void onDestroy() -> onDestroy
    void onResume() -> onResume
    void onClick(android.view.View) -> onClick
    android.widget.Button access$0(com.zgy.ringforu.activity.TabImportantActivity) -> a
    com.zgy.ringforu.view.FCMenu access$1(com.zgy.ringforu.activity.TabImportantActivity) -> b
    android.widget.Button access$2(com.zgy.ringforu.activity.TabImportantActivity) -> c
    void access$3(com.zgy.ringforu.activity.TabImportantActivity) -> d
    android.widget.SimpleAdapter access$4(com.zgy.ringforu.activity.TabImportantActivity) -> e
    void access$5(com.zgy.ringforu.activity.TabImportantActivity) -> f
    void access$6(com.zgy.ringforu.activity.TabImportantActivity) -> g
com.zgy.ringforu.activity.TabImportantActivity$1 -> com.zgy.ringforu.activity.ab:
    com.zgy.ringforu.activity.TabImportantActivity this$0 -> a
    void onSlideToRight() -> a
    void onSlideToLeft() -> b
com.zgy.ringforu.activity.TabImportantActivity$2 -> com.zgy.ringforu.activity.ac:
    com.zgy.ringforu.activity.TabImportantActivity this$0 -> a
    boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long) -> onItemLongClick
com.zgy.ringforu.activity.TabImportantActivity$3 -> com.zgy.ringforu.activity.ad:
    com.zgy.ringforu.activity.TabImportantActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.zgy.ringforu.activity.TabImportantActivity$4 -> com.zgy.ringforu.activity.ae:
    com.zgy.ringforu.activity.TabImportantActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.zgy.ringforu.activity.TabImportantActivity$OnTopMenuItemClickedListener -> com.zgy.ringforu.activity.af:
    com.zgy.ringforu.activity.TabImportantActivity this$0 -> a
    void onItemClicked(com.zgy.ringforu.view.FCMenuItem) -> a
com.zgy.ringforu.activity.TabMoreActivity -> com.zgy.ringforu.activity.TabMoreActivity:
    android.widget.CheckBox checkV -> b
    android.widget.CheckBox checkGesture -> c
    android.widget.RelativeLayout layoutFeedback -> d
    android.widget.RelativeLayout layoutHelp -> e
    android.widget.RelativeLayout layoutTools -> f
    android.widget.RelativeLayout layoutClear -> g
    android.widget.RelativeLayout layoutV -> h
    android.widget.RelativeLayout layoutGesture -> i
    android.widget.RelativeLayout layoutRedTools -> j
    android.widget.Button btnExit -> k
    java.util.ArrayList listItem -> a
    com.zgy.ringforu.interfaces.OnGestureChangedListener mGuesterListener -> l
    void onCreate(android.os.Bundle) -> onCreate
    void refreshViews() -> a
    void onDestroy() -> onDestroy
    void onResume() -> onResume
    void onClick(android.view.View) -> onClick
    android.widget.Button access$0(com.zgy.ringforu.activity.TabMoreActivity) -> a
    void access$1(com.zgy.ringforu.activity.TabMoreActivity) -> b
com.zgy.ringforu.activity.TabMoreActivity$1 -> com.zgy.ringforu.activity.ag:
    com.zgy.ringforu.activity.TabMoreActivity this$0 -> a
    void onSlideToRight() -> a
    void onSlideToLeft() -> b
com.zgy.ringforu.activity.TabMoreActivity$2 -> com.zgy.ringforu.activity.ah:
    com.zgy.ringforu.activity.TabMoreActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.zgy.ringforu.activity.TabMoreActivity$3 -> com.zgy.ringforu.activity.ai:
    com.zgy.ringforu.activity.TabMoreActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.zgy.ringforu.activity.TabMoreActivity$4 -> com.zgy.ringforu.activity.aj:
    com.zgy.ringforu.activity.TabMoreActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.zgy.ringforu.activity.TabSmsActivity -> com.zgy.ringforu.activity.TabSmsActivity:
    java.lang.String allNumbersSelected -> b
    java.lang.String allNameSelected -> c
    android.widget.LinearLayout layoutShowNull -> d
    android.widget.TextView textShowdelTip -> e
    android.widget.ListView listMain -> f
    android.widget.SimpleAdapter listItemAdapter -> g
    android.widget.Button btnSet -> h
    android.widget.Button btnExit -> i
    java.util.ArrayList listItem -> a
    com.zgy.ringforu.view.FCMenu mTopMenu -> j
    com.zgy.ringforu.activity.TabSmsActivity$OnTopMenuItemClickedListener mTopMenuListener -> k
    com.zgy.ringforu.interfaces.OnGestureChangedListener mGuesterListener -> l
    void onCreate(android.os.Bundle) -> onCreate
    void initListView() -> a
    void refreshViews() -> b
    void onDestroy() -> onDestroy
    void onResume() -> onResume
    void onClick(android.view.View) -> onClick
    android.widget.Button access$0(com.zgy.ringforu.activity.TabSmsActivity) -> a
    com.zgy.ringforu.view.FCMenu access$1(com.zgy.ringforu.activity.TabSmsActivity) -> b
    android.widget.Button access$2(com.zgy.ringforu.activity.TabSmsActivity) -> c
    void access$3(com.zgy.ringforu.activity.TabSmsActivity) -> d
    android.widget.SimpleAdapter access$4(com.zgy.ringforu.activity.TabSmsActivity) -> e
    void access$5(com.zgy.ringforu.activity.TabSmsActivity) -> f
    void access$6(com.zgy.ringforu.activity.TabSmsActivity) -> g
com.zgy.ringforu.activity.TabSmsActivity$1 -> com.zgy.ringforu.activity.ak:
    com.zgy.ringforu.activity.TabSmsActivity this$0 -> a
    void onSlideToRight() -> a
    void onSlideToLeft() -> b
com.zgy.ringforu.activity.TabSmsActivity$2 -> com.zgy.ringforu.activity.al:
    com.zgy.ringforu.activity.TabSmsActivity this$0 -> a
    boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long) -> onItemLongClick
com.zgy.ringforu.activity.TabSmsActivity$3 -> com.zgy.ringforu.activity.am:
    com.zgy.ringforu.activity.TabSmsActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.zgy.ringforu.activity.TabSmsActivity$4 -> com.zgy.ringforu.activity.an:
    com.zgy.ringforu.activity.TabSmsActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.zgy.ringforu.activity.TabSmsActivity$OnTopMenuItemClickedListener -> com.zgy.ringforu.activity.ao:
    com.zgy.ringforu.activity.TabSmsActivity this$0 -> a
    void onItemClicked(com.zgy.ringforu.view.FCMenuItem) -> a
com.zgy.ringforu.activity.ToolsBusyModeActivity -> com.zgy.ringforu.activity.ToolsBusyModeActivity:
    android.widget.Button btnBack -> e
    android.widget.Button btnOk -> f
    android.widget.Button btnClose -> g
    android.widget.EditText editMsgContent -> h
    com.zgy.ringforu.view.WordsFlowView wordsFlow -> i
    java.lang.String[] busyModesTitle -> c
    java.lang.String[] busyModeInfo -> d
    boolean boolFromNotification -> j
    void onCreate(android.os.Bundle) -> onCreate
    void setOk() -> c
    void onClick(android.view.View) -> onClick
    void onDestroy() -> onDestroy
    void onSlideToRight() -> a
    void onSlideToLeft() -> b
com.zgy.ringforu.activity.ToolsDisableGprsActivity -> com.zgy.ringforu.activity.ToolsDisableGprsActivity:
    android.widget.Button btnCtrl -> c
    android.widget.TextView textShowState -> d
    android.widget.TextView textShowContent -> e
    android.widget.Button btnBack -> f
    android.os.Vibrator vb -> g
    void onCreate(android.os.Bundle) -> onCreate
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    void onClick(android.view.View) -> onClick
com.zgy.ringforu.activity.ToolsListActivity -> com.zgy.ringforu.activity.ToolsListActivity:
    android.widget.Button btnBack -> c
    android.widget.RelativeLayout layoutWatermark -> d
    android.widget.RelativeLayout layoutBusyMode -> e
    android.widget.RelativeLayout layoutSmsLightScreen -> f
    android.widget.RelativeLayout layoutDisableGprs -> g
    android.widget.RelativeLayout layoutSignalReconnect -> h
    android.widget.RelativeLayout layoutPushMessage -> i
    android.widget.CheckBox checkWatermarkSwitch -> j
    android.widget.CheckBox checkSmsLightScreenSwitch -> k
    android.widget.CheckBox checkDisableGprsSwitch -> l
    android.widget.CheckBox checkSignalReconnectSwitch -> m
    android.widget.CheckBox checkBusyModeSwitch -> n
    android.widget.CheckBox checkPushMessageSwitch -> o
    android.widget.TextView textBusyModeTitle -> p
    android.widget.TextView textBusyModeInfo -> q
    java.lang.String mStrBusyModeTitle -> r
    com.zgy.ringforu.activity.ToolsListActivity$ToolsReceiver mReceiver -> s
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onClick(android.view.View) -> onClick
    void refreshSwitch() -> c
    void onDestroy() -> onDestroy
    void onSlideToRight() -> a
    void onSlideToLeft() -> b
    void access$0(com.zgy.ringforu.activity.ToolsListActivity) -> a
com.zgy.ringforu.activity.ToolsListActivity$ToolsReceiver -> com.zgy.ringforu.activity.ap:
    com.zgy.ringforu.activity.ToolsListActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.zgy.ringforu.activity.ToolsSignalReconnectActivity -> com.zgy.ringforu.activity.ToolsSignalReconnectActivity:
    android.widget.Button btnCtrl -> a
    android.widget.TextView textShowContent -> b
    android.widget.TextView textTitle -> c
    android.widget.Button btnBack -> d
    android.os.Vibrator vb -> e
    void onCreate(android.os.Bundle) -> onCreate
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    void onClick(android.view.View) -> onClick
com.zgy.ringforu.activity.ToolsSmsLightActivity -> com.zgy.ringforu.activity.ToolsSmsLightActivity:
    android.widget.Button btnCtrl -> a
    android.widget.TextView textShowContent -> b
    android.widget.TextView textTitle -> c
    android.widget.Button btnBack -> d
    android.os.Vibrator vb -> e
    void onCreate(android.os.Bundle) -> onCreate
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    void onClick(android.view.View) -> onClick
com.zgy.ringforu.activity.ToolsWaterMarkActivity -> com.zgy.ringforu.activity.ToolsWaterMarkActivity:
    android.widget.ImageView imgShow -> c
    android.widget.Button btnOk -> d
    android.widget.Button btnCancel -> e
    android.widget.Button btnCut -> f
    android.widget.Button btnDel -> g
    android.widget.Button btnTitleClose -> h
    android.widget.Button btnChange -> i
    android.widget.Button btnOrientation -> j
    android.widget.Button btnHideApp -> k
    android.widget.TextView textSeekbar -> l
    android.widget.LinearLayout layoutOperas -> m
    android.widget.TextView mTextChangeBg -> n
    android.widget.TextView mTextCutTip -> o
    android.widget.RelativeLayout layoutMain -> p
    android.widget.SeekBar seekbarAlpha -> q
    java.lang.String[] arrayBbColors -> r
    java.lang.String[] arrayTextColors -> s
    int currentBgColor -> t
    java.io.File tempFileSrc -> u
    java.io.File tempFileCutted -> v
    com.zgy.ringforu.config.MainConfig mMainConfig -> w
    boolean mSeekBarOnTouchMove -> x
    boolean mJumpOutFromPick -> y
    void onCreate(android.os.Bundle) -> onCreate
    void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
    void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
    void onClick(android.view.View) -> onClick
    void open() -> c
    void setBgAndTextColor() -> d
    void pickPic() -> e
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onDestroy() -> onDestroy
    void onResume() -> onResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onSlideToRight() -> a
    void onSlideToLeft() -> b
    android.os.Vibrator access$0(com.zgy.ringforu.activity.ToolsWaterMarkActivity) -> a
    void access$1$7f7e4de6(com.zgy.ringforu.activity.ToolsWaterMarkActivity) -> b
    void access$2(com.zgy.ringforu.activity.ToolsWaterMarkActivity,java.io.File) -> a
    java.io.File access$3(com.zgy.ringforu.activity.ToolsWaterMarkActivity) -> c
com.zgy.ringforu.activity.ToolsWaterMarkActivity$1 -> com.zgy.ringforu.activity.aq:
    com.zgy.ringforu.activity.ToolsWaterMarkActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.zgy.ringforu.activity.ToolsWaterMarkActivity$2 -> com.zgy.ringforu.activity.ar:
    com.zgy.ringforu.activity.ToolsWaterMarkActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.zgy.ringforu.adapter.AccountAutoCompleteAdapter -> com.zgy.ringforu.a.a:
    android.content.Context context -> a
    com.zgy.ringforu.adapter.AccountAutoCompleteAdapter$ArrayFilter mFilter -> b
    java.util.ArrayList mOriginalValues -> c
    java.util.ArrayList mObjects -> d
    java.lang.Object mLock -> e
    java.lang.String[] normalDomains -> f
    int lineTag -> g
    android.widget.Filter getFilter() -> getFilter
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    int occurTimes(java.lang.String,java.lang.String) -> a
    java.lang.Object access$0(com.zgy.ringforu.adapter.AccountAutoCompleteAdapter) -> a
    java.util.ArrayList access$1(com.zgy.ringforu.adapter.AccountAutoCompleteAdapter) -> b
    void access$2(com.zgy.ringforu.adapter.AccountAutoCompleteAdapter,int) -> a
    java.lang.String[] access$3() -> a
    int access$4(com.zgy.ringforu.adapter.AccountAutoCompleteAdapter) -> c
    void access$5(com.zgy.ringforu.adapter.AccountAutoCompleteAdapter,java.util.ArrayList) -> a
com.zgy.ringforu.adapter.AccountAutoCompleteAdapter$ArrayFilter -> com.zgy.ringforu.a.b:
    com.zgy.ringforu.adapter.AccountAutoCompleteAdapter this$0 -> a
    android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence) -> performFiltering
    void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults) -> publishResults
com.zgy.ringforu.adapter.AccountAutoCompleteAdapter$ViewHolder -> com.zgy.ringforu.a.c:
    android.widget.TextView tv -> a
    android.view.View viewDive -> b
    com.zgy.ringforu.adapter.AccountAutoCompleteAdapter this$0 -> c
com.zgy.ringforu.adapter.PickerAdapter -> com.zgy.ringforu.a.d:
    android.view.LayoutInflater mInflater -> a
    java.util.ArrayList allApps -> b
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.zgy.ringforu.adapter.PickerAdapter$ViewHolder -> com.zgy.ringforu.a.e:
    android.widget.ImageView imgIcon -> a
    android.widget.TextView textName -> b
    android.widget.ImageView imgChecked -> c
    com.zgy.ringforu.adapter.PickerAdapter this$0 -> d
com.zgy.ringforu.adapter.PushMessageListAdapter -> com.zgy.ringforu.a.f:
    android.view.LayoutInflater mInflater -> a
    java.util.List mMessages -> b
    java.util.List mMessagesSelected -> c
    void notifyDataChanged(java.util.List,java.util.List) -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.zgy.ringforu.adapter.PushMessageListAdapter$ViewHolder -> com.zgy.ringforu.a.g:
    android.widget.TextView textTitle -> a
    android.widget.TextView textContent -> b
    android.widget.TextView textReceiveTime -> c
    com.zgy.ringforu.adapter.PushMessageListAdapter this$0 -> d
com.zgy.ringforu.adapter.WheelAdapter -> com.zgy.ringforu.a.h:
    int getItemsCount() -> a
    java.lang.String getItem(int) -> a
    int getMaximumLength() -> b
com.zgy.ringforu.bean.AppInfo -> com.zgy.ringforu.b.a:
    android.graphics.drawable.Drawable appIcon -> a
    java.lang.String name -> b
    boolean selected -> c
    java.lang.String packageName -> d
    java.lang.String getPackageName() -> a
    void setPackageName(java.lang.String) -> a
    android.graphics.drawable.Drawable getAppIcon() -> b
    void setAppIcon(android.graphics.drawable.Drawable) -> a
    java.lang.String getName() -> c
    void setName(java.lang.String) -> b
    boolean getSelected() -> d
    void setSelected(boolean) -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.zgy.ringforu.bean.BitMapInfo -> com.zgy.ringforu.b.b:
    android.graphics.Bitmap bitMap -> a
    boolean scalechanged -> b
    android.graphics.Bitmap getBitMap() -> a
    void setBitMap(android.graphics.Bitmap) -> a
    boolean isScalechanged() -> b
    void setScalechanged(boolean) -> a
com.zgy.ringforu.bean.ContactInfo -> com.zgy.ringforu.b.c:
    boolean match -> a
    java.lang.String name -> b
    java.lang.String num -> c
    java.lang.String sortKey -> d
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.zgy.ringforu.bean.PushMessage -> com.zgy.ringforu.b.d:
    int id -> a
    java.lang.String title -> b
    java.lang.String content -> c
    java.lang.String tag -> d
    long receiveTime -> e
    int readStatue -> f
    int sharedTimes -> g
    int getId() -> a
    void setId(int) -> a
    java.lang.String getTitle() -> b
    void setTitle(java.lang.String) -> a
    java.lang.String getContent() -> c
    void setContent(java.lang.String) -> b
    java.lang.String getTag() -> d
    void setTag(java.lang.String) -> c
    long getReceiveTime() -> e
    void setReceiveTime(long) -> a
    int getReadStatue() -> f
    void setReadStatue(int) -> b
    int getSharedTimes() -> g
    void setSharedTimes(int) -> c
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.zgy.ringforu.config.MainConfig -> com.zgy.ringforu.c.a:
    com.zgy.ringforu.config.MainConfig config -> a
    com.zgy.ringforu.config.MainConfig getInstance() -> a
    android.content.Context getContext() -> b
    java.lang.String getSlientTime() -> c
    void setSlientTime(java.lang.String) -> a
    boolean isWaterMarkOn() -> d
    void setWaterMarkOnOff(boolean) -> a
    void setWaterMarkAlpha(int) -> a
    int getWaterMarkAlpha() -> e
    java.lang.String getBusyModeReplyStr() -> f
    void setBusyModeReplyStr(java.lang.String) -> b
    boolean isBusyModeOn() -> g
    void setBusyModeOnOff(boolean) -> b
    java.lang.String getNumbersImporant() -> h
    void setNumbersImportant(java.lang.String) -> c
    java.lang.String getNumbersCall() -> i
    void setNumbersCall(java.lang.String) -> d
    java.lang.String getNumbersSms() -> j
    void setNumbersSms(java.lang.String) -> e
    java.lang.String getImporantNames() -> k
    void setImportantNames(java.lang.String) -> f
    java.lang.String getInterceptCallNames() -> l
    void setInterceptCallNames(java.lang.String) -> g
    java.lang.String getInterceptSmsNames() -> m
    void setInterceptSmsNames(java.lang.String) -> h
    int getInterceptCallStyle() -> n
    void setInterceptCallStyle(int) -> b
    int getInterceptSmsStyle() -> o
    void setInterceptSmsStyle(int) -> c
    boolean isDisableGprsOn() -> p
    void setDisableGprsOnOff(boolean) -> c
    boolean isSignalReconnectOn() -> q
    void setSignalReconnectOnOff$1385ff() -> r
    boolean isSmsLightScreenOn() -> s
    void setSmsLightScreenOnOff(boolean) -> d
    boolean isVibrateOn() -> t
    void setVibrateOnOff(boolean) -> e
    boolean isGestureOn() -> u
    void setGestureOnOff(boolean) -> f
    java.lang.String getVersionName() -> v
    void setVersionName(java.lang.String) -> i
    void setUserGuideShown$1385ff() -> w
    boolean isRedToolsShown() -> x
    void setRedToolsShown(boolean) -> g
    int getPushNewVersionCode() -> y
    void setPushNewVersionCode(int) -> d
    java.lang.String getPushNewVersionDownloadUrl() -> z
    void setPushNewVersionDownloadUrl(java.lang.String) -> j
    java.lang.String getPushNewVersionInfo() -> A
    void setPushNewVersionInfo(java.lang.String) -> k
    java.lang.String getWaterMarkHideApps() -> B
    void setWaterMarkHideApps(java.lang.String) -> l
    boolean isPushMsgOn() -> C
    void setPushJokeOn(boolean) -> h
com.zgy.ringforu.db.DbHelper -> com.zgy.ringforu.d.a:
    java.lang.String CREATE_TB_INFO -> a
    java.lang.String DROP_TB_INFO -> b
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.zgy.ringforu.db.DbOpera -> com.zgy.ringforu.d.b:
    java.lang.String mSyn -> a
    com.zgy.ringforu.db.DbOpera instances -> b
    com.zgy.ringforu.db.DbOpera getInstance() -> a
    boolean insertPushMessage(com.zgy.ringforu.bean.PushMessage) -> a
    int getPushMessageTotalCount() -> b
    java.util.List getPushMessageList(java.lang.String) -> a
    void setPushMessageReadFalg(long,int) -> a
    void addPushMessageSharedTime(long) -> a
    boolean deletePushMessage(int[]) -> a
com.zgy.ringforu.interfaces.OnGestureChangedListener -> com.zgy.ringforu.e.a:
    void onSlideToLeft() -> b
    void onSlideToRight() -> a
com.zgy.ringforu.interfaces.OnWheelChangedListener -> com.zgy.ringforu.e.b:
com.zgy.ringforu.interfaces.OnWheelScrollListener -> com.zgy.ringforu.e.c:
com.zgy.ringforu.interfaces.PushMessageCallBack -> com.zgy.ringforu.e.d:
    void insertPushMessageFinished(boolean,com.zgy.ringforu.bean.PushMessage) -> a
    void getPushMessageListFinished(boolean,java.util.List,int) -> a
    void setPushMessageReadStatueFinished(boolean) -> a
    void deletePushMessagesFinished(int[],boolean) -> a
com.zgy.ringforu.logic.PushMessageController -> com.zgy.ringforu.f.a:
    com.zgy.ringforu.db.DbOpera mDbOpera -> a
    com.zgy.ringforu.logic.PushMessageController mController -> b
    com.zgy.ringforu.logic.PushMessageController getInstence() -> a
    void insertPushMessage(com.zgy.ringforu.bean.PushMessage,com.zgy.ringforu.interfaces.PushMessageCallBack) -> a
    void setPushMessageReadStatue$5246fb6e(long,com.zgy.ringforu.interfaces.PushMessageCallBack) -> a
    void addShareTimesLog(long,com.zgy.ringforu.interfaces.PushMessageCallBack) -> b
    void getPushMessageList$3af3b613(int,com.zgy.ringforu.interfaces.PushMessageCallBack) -> a
    void deletePushMessages(int[],com.zgy.ringforu.interfaces.PushMessageCallBack) -> a
    com.zgy.ringforu.db.DbOpera access$0() -> b
com.zgy.ringforu.logic.PushMessageController$1 -> com.zgy.ringforu.f.b:
    com.zgy.ringforu.logic.PushMessageController this$0 -> a
    com.zgy.ringforu.bean.PushMessage val$msg -> b
    com.zgy.ringforu.interfaces.PushMessageCallBack val$callback -> c
    void run() -> run
com.zgy.ringforu.logic.PushMessageController$2 -> com.zgy.ringforu.f.c:
    com.zgy.ringforu.logic.PushMessageController this$0 -> a
    long val$receiveTime -> b
    int val$statue -> c
    com.zgy.ringforu.interfaces.PushMessageCallBack val$callback -> d
    void run() -> run
com.zgy.ringforu.logic.PushMessageController$3 -> com.zgy.ringforu.f.d:
    com.zgy.ringforu.logic.PushMessageController this$0 -> a
    long val$receiveTime -> b
    com.zgy.ringforu.interfaces.PushMessageCallBack val$callback -> c
    void run() -> run
com.zgy.ringforu.logic.PushMessageController$4 -> com.zgy.ringforu.f.e:
    com.zgy.ringforu.logic.PushMessageController this$0 -> a
    int val$end -> b
    int val$start -> c
    com.zgy.ringforu.interfaces.PushMessageCallBack val$callback -> d
    void run() -> run
com.zgy.ringforu.logic.PushMessageController$5 -> com.zgy.ringforu.f.f:
    com.zgy.ringforu.logic.PushMessageController this$0 -> a
    int[] val$ids -> b
    com.zgy.ringforu.interfaces.PushMessageCallBack val$callback -> c
    void run() -> run
com.zgy.ringforu.receiver.CallReceiver -> com.zgy.ringforu.receiver.CallReceiver:
    android.telephony.TelephonyManager tm -> a
    com.zgy.ringforu.receiver.CallReceiver$MyListenner ml -> b
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    android.telephony.TelephonyManager access$0(com.zgy.ringforu.receiver.CallReceiver) -> a
    com.zgy.ringforu.receiver.CallReceiver$MyListenner access$1(com.zgy.ringforu.receiver.CallReceiver) -> b
com.zgy.ringforu.receiver.CallReceiver$MyListenner -> com.zgy.ringforu.receiver.a:
    android.content.Context con -> b
    com.zgy.ringforu.receiver.CallReceiver this$0 -> a
    void onCallStateChanged(int,java.lang.String) -> onCallStateChanged
    android.content.Context access$0(com.zgy.ringforu.receiver.CallReceiver$MyListenner) -> a
com.zgy.ringforu.receiver.CallReceiver$MyListenner$1 -> com.zgy.ringforu.receiver.b:
    com.zgy.ringforu.receiver.CallReceiver$MyListenner this$1 -> a
    void run() -> run
com.zgy.ringforu.receiver.DisableGprsRecerver -> com.zgy.ringforu.receiver.DisableGprsRecerver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.zgy.ringforu.receiver.MainReciever -> com.zgy.ringforu.receiver.MainReciever:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.zgy.ringforu.receiver.MsgReceiver -> com.zgy.ringforu.receiver.MsgReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.zgy.ringforu.receiver.NotificationReceiver -> com.zgy.ringforu.receiver.NotificationReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.zgy.ringforu.receiver.PushMessageReceiver -> com.zgy.ringforu.receiver.PushMessageReceiver:
    java.lang.String TAG -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.zgy.ringforu.receiver.PushMessageReceiver$MyPushMessageCallBack -> com.zgy.ringforu.receiver.c:
    android.content.Context contex -> b
    com.zgy.ringforu.receiver.PushMessageReceiver this$0 -> a
    void insertPushMessageFinished(boolean,com.zgy.ringforu.bean.PushMessage) -> a
com.zgy.ringforu.service.SignalReconnectService -> com.zgy.ringforu.service.SignalReconnectService:
    android.telephony.TelephonyManager mTelephonyMgr -> a
    com.zgy.ringforu.service.SignalReconnectService$SignalStrengthListener myListenter -> b
    void onCreate() -> onCreate
    void onStart(android.content.Intent,int) -> onStart
    void onDestroy() -> onDestroy
    android.os.IBinder onBind(android.content.Intent) -> onBind
com.zgy.ringforu.service.SignalReconnectService$SignalStrengthListener -> com.zgy.ringforu.service.a:
    com.zgy.ringforu.service.SignalReconnectService this$0 -> a
    void onSignalStrengthChanged(int) -> onSignalStrengthChanged
com.zgy.ringforu.service.WaterMarkService -> com.zgy.ringforu.service.WaterMarkService:
    android.view.WindowManager wm -> b
    android.view.WindowManager$LayoutParams wmParams -> c
    android.view.View view -> d
    boolean show -> a
    android.app.ActivityManager mActivityManager -> e
    android.widget.ImageView mImageView -> f
    int mAlpah -> g
    int mTempAlpha -> h
    android.os.Handler mHandler -> i
    java.lang.String mPackageNameTemp -> j
    void onStart(android.content.Intent,int) -> onStart
    void onCreate() -> onCreate
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onDestroy() -> onDestroy
    android.os.Handler access$0(com.zgy.ringforu.service.WaterMarkService) -> a
    android.app.ActivityManager access$1(com.zgy.ringforu.service.WaterMarkService) -> b
    android.widget.ImageView access$2(com.zgy.ringforu.service.WaterMarkService) -> c
    java.lang.String access$3(com.zgy.ringforu.service.WaterMarkService) -> d
    void access$4(com.zgy.ringforu.service.WaterMarkService,java.lang.String) -> a
    void access$5(com.zgy.ringforu.service.WaterMarkService) -> e
    void access$6(com.zgy.ringforu.service.WaterMarkService) -> f
    int access$7(com.zgy.ringforu.service.WaterMarkService) -> g
    void access$8(com.zgy.ringforu.service.WaterMarkService,int) -> a
    android.view.WindowManager access$9(com.zgy.ringforu.service.WaterMarkService) -> h
    android.view.View access$10(com.zgy.ringforu.service.WaterMarkService) -> i
    int access$11(com.zgy.ringforu.service.WaterMarkService) -> j
com.zgy.ringforu.service.WaterMarkService$ListenerHandler -> com.zgy.ringforu.service.b:
    com.zgy.ringforu.service.WaterMarkService this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.zgy.ringforu.util.AddContactUtil -> com.zgy.ringforu.g.a:
    int insert$163e70f7(java.lang.String,java.lang.String,int) -> a
    int getLeft$1a54e363(int) -> a
com.zgy.ringforu.util.BitmapUtil -> com.zgy.ringforu.g.b:
    com.zgy.ringforu.bean.BitMapInfo readBitmapAutoSize(java.lang.String,int,int) -> a
com.zgy.ringforu.util.BusyModeUtil -> com.zgy.ringforu.g.c:
    boolean isBusyModeOn() -> a
    void setBusyModeOnOff$157a5ecb(boolean,java.lang.String) -> a
    java.lang.String getMessageTitleFromContent(android.content.Context,java.lang.String) -> a
com.zgy.ringforu.util.ContactsUtil -> com.zgy.ringforu.g.d:
    java.lang.String getNameFromContactsByNumber(android.content.Context,java.lang.String) -> a
com.zgy.ringforu.util.DisableGprsUtil -> com.zgy.ringforu.g.e:
    void ctrlNetWorkConnection(android.content.Context) -> a
    void checkState(android.content.Context) -> b
    boolean isDisableGprsOn() -> a
    void ctrlDisableGprsSwitch(android.content.Context,boolean) -> a
com.zgy.ringforu.util.FileUtil -> com.zgy.ringforu.g.f:
    boolean write$25ed0862(java.lang.String,java.io.File) -> a
    java.lang.String read(java.io.File) -> a
    boolean copyFileTo(java.io.File,java.io.File) -> a
    boolean delFileDir(java.io.File) -> b
    java.lang.String getImageAbsolutePath(android.content.Context,android.net.Uri) -> a
com.zgy.ringforu.util.ImportExportUtil -> com.zgy.ringforu.g.g:
    void exportData(android.content.Context,int) -> a
    void importData(android.content.Context,int) -> b
com.zgy.ringforu.util.MainUtil -> com.zgy.ringforu.g.h:
    boolean isServiceStarted(android.content.Context,java.lang.String) -> a
    void checkAllState(android.content.Context) -> a
    void refreshWaterMarkHideApps() -> a
    void refreshNumbersImportant() -> b
    void refreshNumbersCall() -> c
    void refreshNumbersSms() -> d
    void refreshImportant(java.lang.String,java.lang.String) -> a
    void refreshCall(java.lang.String,java.lang.String) -> b
    void refreshSms(java.lang.String,java.lang.String) -> c
    int getAppVersionCode(android.content.Context) -> b
    void checkNewVersion(android.content.Context) -> c
com.zgy.ringforu.util.NetWorkUtil -> com.zgy.ringforu.g.i:
    boolean isConnectInternet(android.content.Context) -> a
    void setNetConnection(android.content.Context,android.os.Vibrator) -> a
com.zgy.ringforu.util.NetWorkUtil$1 -> com.zgy.ringforu.g.j:
    android.os.Vibrator val$vb -> a
    android.content.Context val$con -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.zgy.ringforu.util.NetWorkUtil$2 -> com.zgy.ringforu.g.k:
    android.os.Vibrator val$vb -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.zgy.ringforu.util.NotificationUtil -> com.zgy.ringforu.g.l:
    int NOTIFICATION_ID_BUSYMODE_REFUSED -> a
    int NOTIFICATION_ID_PUSH_MSG -> b
    void showHideDisableGprsNotify(boolean,android.content.Context) -> a
    void showHideBusyModeNotify(android.content.Context,boolean) -> a
    void showRefusedNumberNotification(android.content.Context,java.lang.String) -> a
    void showHideWaterMarkNotify(boolean,android.content.Context) -> b
    void showHideSmsLightNotify(boolean,android.content.Context) -> c
    void showHideSignalReconnectNotify$6da472a9(android.content.Context) -> a
    void showHideNewVersionNotify$b945bcd(android.content.Context,java.lang.String) -> b
    int showHidePushMessageNotify(boolean,android.content.Context,com.zgy.ringforu.bean.PushMessage,int) -> a
    void hideAllPushMessageNotifications(android.content.Context) -> b
com.zgy.ringforu.util.PhoneUtil -> com.zgy.ringforu.g.m:
    void doActionAboutCall(android.content.Context,int) -> a
    void turnUpMost(android.content.Context) -> a
    void turnDownThenUp(android.content.Context) -> b
    java.lang.String getHandsetInfo(android.content.Context) -> c
    boolean existSDcard() -> a
    void sendMessage$62dc3a79(java.lang.String,java.lang.String) -> a
    void doVibraterNormal(android.os.Vibrator) -> a
    void doVibraterError(android.os.Vibrator) -> b
com.zgy.ringforu.util.PhoneUtil$1 -> com.zgy.ringforu.g.n:
    android.content.Context val$context -> a
    void run() -> run
com.zgy.ringforu.util.PreferenceUtil -> com.zgy.ringforu.g.o:
    android.content.SharedPreferences sp -> a
    android.content.Context getContext() -> b
    void putBool(java.lang.String,boolean) -> a
    boolean getBool(java.lang.String,boolean) -> b
    void putInt(java.lang.String,int) -> a
    int getInt(java.lang.String,int) -> b
    void putString(java.lang.String,java.lang.String) -> a
    java.lang.String getString(java.lang.String,java.lang.String) -> b
com.zgy.ringforu.util.PushMessageUtils -> com.zgy.ringforu.g.p:
    java.lang.String getMetaValue(android.content.Context,java.lang.String) -> a
com.zgy.ringforu.util.RingForUActivityManager -> com.zgy.ringforu.g.q:
    java.util.Stack stack -> a
    void popAll() -> a
    void pop(android.app.Activity) -> a
    void push(android.app.Activity) -> b
com.zgy.ringforu.util.SQLiteHelper -> com.zgy.ringforu.g.r:
    long insertWithConflict$24e4746(java.lang.String,android.content.ContentValues) -> b
    long insertOrIgnore(java.lang.String,android.content.ContentValues) -> a
com.zgy.ringforu.util.SendEmailUtil -> com.zgy.ringforu.g.s:
    java.lang.String userName -> a
    java.lang.String password -> b
    javax.mail.Session session -> c
    javax.mail.PasswordAuthentication getPasswordAuthentication() -> getPasswordAuthentication
    void sendMail(java.lang.String,java.lang.String,java.lang.String) -> a
com.zgy.ringforu.util.SignalReconnectUtil -> com.zgy.ringforu.g.t:
    boolean doReconnect -> a
    boolean isSignalReconnectOn() -> a
    void ctrlSignalReconnect$1a552341(android.content.Context) -> a
    void doSignalReconnect$faab20d() -> b
    void checkState(android.content.Context) -> b
com.zgy.ringforu.util.SlientTimeUtil -> com.zgy.ringforu.g.u:
    boolean isEffective$faab209() -> a
com.zgy.ringforu.util.SmsLightScreenUtil -> com.zgy.ringforu.g.v:
    boolean isSmsLightScreenOn() -> a
    void checkSmsLightScreenOn(android.content.Context) -> a
    void ctrlSmsLightScreenSwitch(boolean,android.content.Context) -> a
com.zgy.ringforu.util.SmsLightScreenUtil$1 -> com.zgy.ringforu.g.w:
    android.os.PowerManager$WakeLock val$wakeLock -> a
    void run() -> run
com.zgy.ringforu.util.StringUtil -> com.zgy.ringforu.g.x:
    java.lang.String getRidofSpeciall(java.lang.String) -> a
    boolean isNull(java.lang.String) -> b
com.zgy.ringforu.util.TimeUtil -> com.zgy.ringforu.g.y:
    java.lang.String TIME_DATE_TIME_STRING_FORMAT -> a
    java.lang.String TIME_DATE_STRING_FORMAT -> b
    long getCurrentTimeMillis() -> a
    boolean isCurrentTimeInFreeTime(java.lang.String,java.lang.String) -> a
    boolean isTestTimeInFreeTime(java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String getTimeformatString(int) -> a
    java.lang.String longToDateTimeString(long) -> a
com.zgy.ringforu.util.ViewUtil -> com.zgy.ringforu.g.z:
    void onButtonPressedBlue(android.widget.Button) -> a
    void onButtonPressedBack(android.widget.Button) -> b
    void onButtonPressedRed(android.widget.Button) -> c
com.zgy.ringforu.util.ViewUtil$1 -> com.zgy.ringforu.g.aa:
    android.widget.Button val$btn -> a
    void run() -> run
com.zgy.ringforu.util.ViewUtil$2 -> com.zgy.ringforu.g.ab:
    android.widget.Button val$btn -> a
    void run() -> run
com.zgy.ringforu.util.ViewUtil$3 -> com.zgy.ringforu.g.ac:
    android.widget.Button val$btn -> a
    void run() -> run
com.zgy.ringforu.util.WaterMarkUtil -> com.zgy.ringforu.g.ad:
    boolean isWaterMarkShowing$faab209() -> a
    boolean isWaterMarkSeted() -> b
    void setSwitchOnOff(boolean) -> a
    void checkState(android.content.Context) -> a
    void ctrlWaterMarkBackService(android.content.Context,boolean) -> a
com.zgy.ringforu.view.FCMenu -> com.zgy.ringforu.view.a:
    android.content.Context mContext -> a
    com.zgy.ringforu.view.FCMenu$MenuItemOnClickListener callback -> b
    android.view.ViewGroup container -> c
    android.widget.BaseAdapter mAdapter -> d
    android.widget.ListView mListView -> e
    android.widget.TextView mTextTitle -> f
    int[] mWidthHeight -> g
    android.view.View mViewAnchor -> h
    void setMenuItemOnclickListener(com.zgy.ringforu.view.FCMenu$MenuItemOnClickListener) -> a
    void setDatas(java.util.List,int,boolean) -> a
    void showMenu(int) -> a
    void closeMenu() -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    android.content.Context access$0(com.zgy.ringforu.view.FCMenu) -> a
com.zgy.ringforu.view.FCMenu$1 -> com.zgy.ringforu.view.b:
    com.zgy.ringforu.view.FCMenu this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.zgy.ringforu.view.FCMenu$2 -> com.zgy.ringforu.view.c:
    com.zgy.ringforu.view.FCMenu this$0 -> a
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
com.zgy.ringforu.view.FCMenu$MenuAdapter -> com.zgy.ringforu.view.d:
    java.util.List mItems -> a
    com.zgy.ringforu.view.FCMenu this$0 -> b
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.zgy.ringforu.view.FCMenu$MenuHolder -> com.zgy.ringforu.view.e:
    android.widget.ImageView iconView -> a
    android.widget.TextView textView -> b
    com.zgy.ringforu.view.FCMenu this$0 -> c
com.zgy.ringforu.view.FCMenu$MenuItemOnClickListener -> com.zgy.ringforu.view.f:
    void onItemClicked(com.zgy.ringforu.view.FCMenuItem) -> a
com.zgy.ringforu.view.FCMenuItem -> com.zgy.ringforu.view.g:
    int opID -> a
    int iconRes -> b
    int textRes -> c
    int getOpID() -> a
    int getIconRes() -> b
    int getTextRes() -> c
com.zgy.ringforu.view.FCPopupWindow -> com.zgy.ringforu.view.h:
    android.content.Context mContext -> a
    android.widget.PopupWindow mPopupWindow -> b
    void showAsDropDown(android.view.View,android.view.View,int,int,int) -> a
    boolean isShowing() -> b
    void close() -> c
com.zgy.ringforu.view.MarqueeTextView -> com.zgy.ringforu.view.MarqueeTextView:
    boolean isFocused() -> isFocused
com.zgy.ringforu.view.MyDialog -> com.zgy.ringforu.view.i:
com.zgy.ringforu.view.MyDialog$Builder -> com.zgy.ringforu.view.j:
    android.content.Context context -> a
    java.lang.String title -> b
    java.lang.CharSequence message -> c
    java.lang.String positiveButtonText -> d
    java.lang.String negativeButtonText -> e
    android.view.View contentView -> f
    android.content.DialogInterface$OnClickListener positiveButtonClickListener -> g
    android.content.DialogInterface$OnClickListener negativeButtonClickListener -> h
    com.zgy.ringforu.view.MyDialog$Builder setMessage(int) -> a
    com.zgy.ringforu.view.MyDialog$Builder setTitle(int) -> b
    com.zgy.ringforu.view.MyDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener) -> a
    com.zgy.ringforu.view.MyDialog$Builder setNegativeButton(int,android.content.DialogInterface$OnClickListener) -> b
    com.zgy.ringforu.view.MyDialog create() -> a
    android.content.DialogInterface$OnClickListener access$0(com.zgy.ringforu.view.MyDialog$Builder) -> a
    android.content.DialogInterface$OnClickListener access$1(com.zgy.ringforu.view.MyDialog$Builder) -> b
com.zgy.ringforu.view.MyDialog$Builder$1 -> com.zgy.ringforu.view.k:
    com.zgy.ringforu.view.MyDialog$Builder this$1 -> a
    com.zgy.ringforu.view.MyDialog val$dialog -> b
    void onClick(android.view.View) -> onClick
com.zgy.ringforu.view.MyDialog$Builder$2 -> com.zgy.ringforu.view.l:
    com.zgy.ringforu.view.MyDialog$Builder this$1 -> a
    com.zgy.ringforu.view.MyDialog val$dialog -> b
    void onClick(android.view.View) -> onClick
com.zgy.ringforu.view.MyToast -> com.zgy.ringforu.view.m:
    android.widget.Toast makeText$595f3b9f(android.content.Context,java.lang.CharSequence) -> a
    android.widget.Toast makeText(android.content.Context,int,int,boolean) -> a
com.zgy.ringforu.view.MyToast$1 -> com.zgy.ringforu.view.n:
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.zgy.ringforu.view.MyToast$2 -> com.zgy.ringforu.view.o:
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.zgy.ringforu.view.NumericWheelAdapter -> com.zgy.ringforu.view.p:
    int minValue -> a
    int maxValue -> b
    java.lang.String format -> c
    java.lang.String getItem(int) -> a
    int getItemsCount() -> a
    int getMaximumLength() -> b
com.zgy.ringforu.view.TextEditor -> com.zgy.ringforu.view.TextEditor:
    boolean mModify -> a
    com.zgy.ringforu.view.TextEditor$OnTextChangeListener mTextChangeListner -> b
    android.text.TextWatcher mTwTextChanged -> c
    void finalize() -> finalize
    void setModify(boolean) -> a
    boolean isModified() -> a
    void setOnTextChangeListener(com.zgy.ringforu.view.TextEditor$OnTextChangeListener) -> a
    com.zgy.ringforu.view.TextEditor$OnTextChangeListener access$0(com.zgy.ringforu.view.TextEditor) -> a
com.zgy.ringforu.view.TextEditor$1 -> com.zgy.ringforu.view.q:
    com.zgy.ringforu.view.TextEditor this$0 -> a
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.zgy.ringforu.view.TextEditor$OnTextChangeListener -> com.zgy.ringforu.view.r:
    void onTextChanged$649febc7(java.lang.String) -> a
com.zgy.ringforu.view.WheelView -> com.zgy.ringforu.view.WheelView:
    int[] SHADOWS_COLORS -> b
    int ADDITIONAL_ITEM_HEIGHT -> c
    int TEXT_SIZE -> d
    int ITEM_OFFSET -> e
    int ADDITIONAL_ITEMS_SPACE -> f
    int LABEL_OFFSET -> g
    int PADDING -> h
    com.zgy.ringforu.adapter.WheelAdapter adapter -> i
    int currentItem -> j
    int itemsWidth -> k
    int labelWidth -> l
    int visibleItems -> m
    int itemHeight -> n
    android.text.TextPaint itemsPaint -> o
    android.text.TextPaint valuePaint -> p
    android.text.StaticLayout itemsLayout -> q
    android.text.StaticLayout labelLayout -> r
    android.text.StaticLayout valueLayout -> s
    java.lang.String label -> t
    android.graphics.drawable.Drawable centerDrawable -> u
    android.graphics.drawable.GradientDrawable topShadow -> v
    android.graphics.drawable.GradientDrawable bottomShadow -> w
    boolean isScrollingPerformed -> x
    int scrollingOffset -> y
    android.view.GestureDetector gestureDetector -> z
    android.widget.Scroller scroller -> A
    int lastScrollY -> B
    boolean isCyclic -> a
    java.util.List changingListeners -> C
    java.util.List scrollingListeners -> D
    android.view.GestureDetector$SimpleOnGestureListener gestureListener -> E
    int MESSAGE_SCROLL -> F
    int MESSAGE_JUSTIFY -> G
    android.os.Handler animationHandler -> H
    void initData(android.content.Context) -> a
    void setAdapter(com.zgy.ringforu.adapter.WheelAdapter) -> a
    void setVisibleItems$13462e() -> a
    void addChangingListener(com.zgy.ringforu.interfaces.OnWheelChangedListener) -> a
    void addScrollingListener(com.zgy.ringforu.interfaces.OnWheelScrollListener) -> a
    int getCurrentItem() -> b
    void setCurrentItem$2563266(int) -> b
    void setCurrentItem(int) -> a
    void setCyclic(boolean) -> a
    void invalidateLayouts() -> d
    java.lang.String getTextItem(int) -> c
    java.lang.String buildText(boolean) -> b
    int getMaxTextLength() -> e
    int getItemHeight() -> f
    int calculateLayoutWidth(int,int) -> a
    void createLayouts(int,int) -> b
    void onMeasure(int,int) -> onMeasure
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setNextMessage(int) -> d
    void clearMessages() -> g
    void justify() -> h
    void finishScrolling() -> c
    boolean access$0(com.zgy.ringforu.view.WheelView) -> a
    android.widget.Scroller access$1(com.zgy.ringforu.view.WheelView) -> b
    void access$2(com.zgy.ringforu.view.WheelView) -> c
    void access$3(com.zgy.ringforu.view.WheelView) -> d
    void access$4(com.zgy.ringforu.view.WheelView,int) -> a
    int access$5(com.zgy.ringforu.view.WheelView) -> e
    int access$6(com.zgy.ringforu.view.WheelView) -> f
    int access$7(com.zgy.ringforu.view.WheelView) -> g
    void access$8(com.zgy.ringforu.view.WheelView,int) -> b
    com.zgy.ringforu.adapter.WheelAdapter access$9(com.zgy.ringforu.view.WheelView) -> h
    int access$10(com.zgy.ringforu.view.WheelView) -> i
    void access$11$159a38ef(com.zgy.ringforu.view.WheelView) -> j
    android.os.Handler access$12(com.zgy.ringforu.view.WheelView) -> k
    void access$13(com.zgy.ringforu.view.WheelView) -> l
com.zgy.ringforu.view.WheelView$1 -> com.zgy.ringforu.view.s:
    com.zgy.ringforu.view.WheelView this$0 -> a
    boolean onDown(android.view.MotionEvent) -> onDown
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
com.zgy.ringforu.view.WheelView$2 -> com.zgy.ringforu.view.t:
    com.zgy.ringforu.view.WheelView this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.zgy.ringforu.view.WordsFlowView -> com.zgy.ringforu.view.WordsFlowView:
    android.view.View$OnClickListener itemClickListener -> a
    android.view.animation.Interpolator interpolator -> b
    android.view.animation.AlphaAnimation animAlpha2Opaque -> c
    android.view.animation.AlphaAnimation animAlpha2Transparent -> d
    android.view.animation.ScaleAnimation animScaleLarge2Normal -> e
    android.view.animation.ScaleAnimation animScaleNormal2Large -> f
    android.view.animation.ScaleAnimation animScaleZero2Normal -> g
    android.view.animation.ScaleAnimation animScaleNormal2Zero -> h
    java.util.Vector vecKeywords -> i
    int width -> j
    int height -> k
    boolean enableShow -> l
    java.util.Random random -> m
    int txtAnimInType -> n
    int txtAnimOutType -> o
    long lastStartAnimationTime -> p
    long animDuration -> q
    void init() -> c
    void setDuration$1349ef() -> a
    void feedKeywordsAll(java.lang.String[]) -> a
    boolean go2Show$134632() -> b
    boolean show() -> d
    void attach2Screen(java.util.LinkedList,int,int,int) -> a
    android.view.animation.AnimationSet getAnimationSet(int[],int,int,int) -> a
    void sortXYList(java.util.LinkedList,int) -> a
    void onGlobalLayout() -> onGlobalLayout
    void setOnItemClickListener(android.view.View$OnClickListener) -> a
com.zgy.ringforu.view.WordsFlowView$1 -> com.zgy.ringforu.view.u:
    com.zgy.ringforu.view.WordsFlowView this$0 -> a
    android.widget.TextView val$txt -> b
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
javax.activation.ActivationDataFlavor -> javax.activation.ActivationDataFlavor:
    java.lang.String mimeType -> mimeType
    javax.activation.MimeType mimeObject -> mimeObject
    java.lang.String humanPresentableName -> humanPresentableName
    java.lang.Class representationClass -> representationClass
    java.lang.String getMimeType() -> getMimeType
    java.lang.Class getRepresentationClass() -> getRepresentationClass
    java.lang.String getHumanPresentableName() -> getHumanPresentableName
    void setHumanPresentableName(java.lang.String) -> setHumanPresentableName
    boolean equals(myjava.awt.datatransfer.DataFlavor) -> equals
    boolean isMimeTypeEqual(java.lang.String) -> isMimeTypeEqual
    java.lang.String normalizeMimeTypeParameter(java.lang.String,java.lang.String) -> normalizeMimeTypeParameter
    java.lang.String normalizeMimeType(java.lang.String) -> normalizeMimeType
javax.activation.CommandInfo -> javax.activation.CommandInfo:
    java.lang.String verb -> verb
    java.lang.String className -> className
    java.lang.String getCommandName() -> getCommandName
    java.lang.String getCommandClass() -> getCommandClass
    java.lang.Object getCommandObject(javax.activation.DataHandler,java.lang.ClassLoader) -> getCommandObject
javax.activation.CommandMap -> javax.activation.CommandMap:
    javax.activation.CommandMap defaultCommandMap -> defaultCommandMap
    javax.activation.CommandMap getDefaultCommandMap() -> getDefaultCommandMap
    void setDefaultCommandMap(javax.activation.CommandMap) -> setDefaultCommandMap
    javax.activation.CommandInfo[] getPreferredCommands(java.lang.String) -> getPreferredCommands
    javax.activation.CommandInfo[] getPreferredCommands(java.lang.String,javax.activation.DataSource) -> getPreferredCommands
    javax.activation.CommandInfo[] getAllCommands(java.lang.String) -> getAllCommands
    javax.activation.CommandInfo[] getAllCommands(java.lang.String,javax.activation.DataSource) -> getAllCommands
    javax.activation.CommandInfo getCommand(java.lang.String,java.lang.String) -> getCommand
    javax.activation.CommandInfo getCommand(java.lang.String,java.lang.String,javax.activation.DataSource) -> getCommand
    javax.activation.DataContentHandler createDataContentHandler(java.lang.String) -> createDataContentHandler
    javax.activation.DataContentHandler createDataContentHandler(java.lang.String,javax.activation.DataSource) -> createDataContentHandler
    java.lang.String[] getMimeTypes() -> getMimeTypes
javax.activation.CommandObject -> javax.activation.CommandObject:
    void setCommandContext(java.lang.String,javax.activation.DataHandler) -> setCommandContext
javax.activation.DataContentHandler -> javax.activation.DataContentHandler:
    myjava.awt.datatransfer.DataFlavor[] getTransferDataFlavors() -> getTransferDataFlavors
    java.lang.Object getTransferData(myjava.awt.datatransfer.DataFlavor,javax.activation.DataSource) -> getTransferData
    java.lang.Object getContent(javax.activation.DataSource) -> getContent
    void writeTo(java.lang.Object,java.lang.String,java.io.OutputStream) -> writeTo
javax.activation.DataContentHandlerFactory -> javax.activation.DataContentHandlerFactory:
    javax.activation.DataContentHandler createDataContentHandler(java.lang.String) -> createDataContentHandler
javax.activation.DataHandler -> javax.activation.DataHandler:
    javax.activation.DataSource dataSource -> dataSource
    javax.activation.DataSource objDataSource -> objDataSource
    java.lang.Object object -> object
    java.lang.String objectMimeType -> objectMimeType
    javax.activation.CommandMap currentCommandMap -> currentCommandMap
    myjava.awt.datatransfer.DataFlavor[] emptyFlavors -> emptyFlavors
    myjava.awt.datatransfer.DataFlavor[] transferFlavors -> transferFlavors
    javax.activation.DataContentHandler dataContentHandler -> dataContentHandler
    javax.activation.DataContentHandler factoryDCH -> factoryDCH
    javax.activation.DataContentHandlerFactory factory -> factory
    javax.activation.DataContentHandlerFactory oldFactory -> oldFactory
    java.lang.String shortType -> shortType
    javax.activation.CommandMap getCommandMap() -> getCommandMap
    javax.activation.DataSource getDataSource() -> getDataSource
    java.lang.String getName() -> getName
    java.lang.String getContentType() -> getContentType
    java.io.InputStream getInputStream() -> getInputStream
    void writeTo(java.io.OutputStream) -> writeTo
    java.io.OutputStream getOutputStream() -> getOutputStream
    myjava.awt.datatransfer.DataFlavor[] getTransferDataFlavors() -> getTransferDataFlavors
    boolean isDataFlavorSupported(myjava.awt.datatransfer.DataFlavor) -> isDataFlavorSupported
    java.lang.Object getTransferData(myjava.awt.datatransfer.DataFlavor) -> getTransferData
    void setCommandMap(javax.activation.CommandMap) -> setCommandMap
    javax.activation.CommandInfo[] getPreferredCommands() -> getPreferredCommands
    javax.activation.CommandInfo[] getAllCommands() -> getAllCommands
    javax.activation.CommandInfo getCommand(java.lang.String) -> getCommand
    java.lang.Object getContent() -> getContent
    java.lang.Object getBean(javax.activation.CommandInfo) -> getBean
    javax.activation.DataContentHandler getDataContentHandler() -> getDataContentHandler
    java.lang.String getBaseType() -> getBaseType
    void setDataContentHandlerFactory(javax.activation.DataContentHandlerFactory) -> setDataContentHandlerFactory
    java.lang.Object access$0(javax.activation.DataHandler) -> access$0
    java.lang.String access$1(javax.activation.DataHandler) -> access$1
javax.activation.DataHandler$1 -> javax.activation.DataHandler$1:
    javax.activation.DataHandler this$0 -> this$0
    java.io.PipedOutputStream val$pos -> val$pos
    javax.activation.DataContentHandler val$fdch -> val$fdch
    void run() -> run
javax.activation.DataHandlerDataSource -> javax.activation.DataHandlerDataSource:
    javax.activation.DataHandler dataHandler -> dataHandler
    java.io.InputStream getInputStream() -> getInputStream
    java.io.OutputStream getOutputStream() -> getOutputStream
    java.lang.String getContentType() -> getContentType
    java.lang.String getName() -> getName
javax.activation.DataSource -> javax.activation.DataSource:
    java.io.InputStream getInputStream() -> getInputStream
    java.io.OutputStream getOutputStream() -> getOutputStream
    java.lang.String getContentType() -> getContentType
    java.lang.String getName() -> getName
javax.activation.DataSourceDataContentHandler -> javax.activation.DataSourceDataContentHandler:
    javax.activation.DataSource ds -> ds
    myjava.awt.datatransfer.DataFlavor[] transferFlavors -> transferFlavors
    javax.activation.DataContentHandler dch -> dch
    myjava.awt.datatransfer.DataFlavor[] getTransferDataFlavors() -> getTransferDataFlavors
    java.lang.Object getTransferData(myjava.awt.datatransfer.DataFlavor,javax.activation.DataSource) -> getTransferData
    java.lang.Object getContent(javax.activation.DataSource) -> getContent
    void writeTo(java.lang.Object,java.lang.String,java.io.OutputStream) -> writeTo
javax.activation.FileDataSource -> javax.activation.FileDataSource:
    java.io.File _file -> _file
    javax.activation.FileTypeMap typeMap -> typeMap
    java.io.InputStream getInputStream() -> getInputStream
    java.io.OutputStream getOutputStream() -> getOutputStream
    java.lang.String getContentType() -> getContentType
    java.lang.String getName() -> getName
    java.io.File getFile() -> getFile
    void setFileTypeMap(javax.activation.FileTypeMap) -> setFileTypeMap
javax.activation.FileTypeMap -> javax.activation.FileTypeMap:
    javax.activation.FileTypeMap defaultMap -> defaultMap
    java.lang.String getContentType(java.io.File) -> getContentType
    java.lang.String getContentType(java.lang.String) -> getContentType
    void setDefaultFileTypeMap(javax.activation.FileTypeMap) -> setDefaultFileTypeMap
    javax.activation.FileTypeMap getDefaultFileTypeMap() -> getDefaultFileTypeMap
javax.activation.MailcapCommandMap -> javax.activation.MailcapCommandMap:
    com.sun.activation.registries.MailcapFile defDB -> defDB
    com.sun.activation.registries.MailcapFile[] DB -> DB
    int PROG -> PROG
    com.sun.activation.registries.MailcapFile loadResource(java.lang.String) -> loadResource
    void loadAllResources(java.util.List,java.lang.String) -> loadAllResources
    com.sun.activation.registries.MailcapFile loadFile(java.lang.String) -> loadFile
    javax.activation.CommandInfo[] getPreferredCommands(java.lang.String) -> getPreferredCommands
    void appendPrefCmdsToList(java.util.Map,java.util.List) -> appendPrefCmdsToList
    boolean checkForVerb(java.util.List,java.lang.String) -> checkForVerb
    javax.activation.CommandInfo[] getAllCommands(java.lang.String) -> getAllCommands
    void appendCmdsToList(java.util.Map,java.util.List) -> appendCmdsToList
    javax.activation.CommandInfo getCommand(java.lang.String,java.lang.String) -> getCommand
    void addMailcap(java.lang.String) -> addMailcap
    javax.activation.DataContentHandler createDataContentHandler(java.lang.String) -> createDataContentHandler
    javax.activation.DataContentHandler getDataContentHandler(java.lang.String) -> getDataContentHandler
    java.lang.String[] getMimeTypes() -> getMimeTypes
    java.lang.String[] getNativeCommands(java.lang.String) -> getNativeCommands
javax.activation.MimeType -> javax.activation.MimeType:
    java.lang.String primaryType -> primaryType
    java.lang.String subType -> subType
    javax.activation.MimeTypeParameterList parameters -> parameters
    java.lang.String TSPECIALS -> TSPECIALS
    void parse(java.lang.String) -> parse
    java.lang.String getPrimaryType() -> getPrimaryType
    void setPrimaryType(java.lang.String) -> setPrimaryType
    java.lang.String getSubType() -> getSubType
    void setSubType(java.lang.String) -> setSubType
    javax.activation.MimeTypeParameterList getParameters() -> getParameters
    java.lang.String getParameter(java.lang.String) -> getParameter
    void setParameter(java.lang.String,java.lang.String) -> setParameter
    void removeParameter(java.lang.String) -> removeParameter
    java.lang.String toString() -> toString
    java.lang.String getBaseType() -> getBaseType
    boolean match(javax.activation.MimeType) -> match
    boolean match(java.lang.String) -> match
    void writeExternal(java.io.ObjectOutput) -> writeExternal
    void readExternal(java.io.ObjectInput) -> readExternal
    boolean isTokenChar(char) -> isTokenChar
    boolean isValidToken(java.lang.String) -> isValidToken
javax.activation.MimeTypeParameterList -> javax.activation.MimeTypeParameterList:
    java.util.Hashtable parameters -> parameters
    java.lang.String TSPECIALS -> TSPECIALS
    void parse(java.lang.String) -> parse
    int size() -> size
    boolean isEmpty() -> isEmpty
    java.lang.String get(java.lang.String) -> get
    void set(java.lang.String,java.lang.String) -> set
    void remove(java.lang.String) -> remove
    java.util.Enumeration getNames() -> getNames
    java.lang.String toString() -> toString
    boolean isTokenChar(char) -> isTokenChar
    int skipWhiteSpace(java.lang.String,int) -> skipWhiteSpace
    java.lang.String quote(java.lang.String) -> quote
    java.lang.String unquote(java.lang.String) -> unquote
javax.activation.MimeTypeParseException -> javax.activation.MimeTypeParseException:
javax.activation.MimetypesFileTypeMap -> javax.activation.MimetypesFileTypeMap:
    com.sun.activation.registries.MimeTypeFile defDB -> defDB
    com.sun.activation.registries.MimeTypeFile[] DB -> DB
    int PROG -> PROG
    java.lang.String defaultType -> defaultType
    com.sun.activation.registries.MimeTypeFile loadResource(java.lang.String) -> loadResource
    void loadAllResources(java.util.Vector,java.lang.String) -> loadAllResources
    com.sun.activation.registries.MimeTypeFile loadFile(java.lang.String) -> loadFile
    void addMimeTypes(java.lang.String) -> addMimeTypes
    java.lang.String getContentType(java.io.File) -> getContentType
    java.lang.String getContentType(java.lang.String) -> getContentType
javax.activation.ObjectDataContentHandler -> javax.activation.ObjectDataContentHandler:
    myjava.awt.datatransfer.DataFlavor[] transferFlavors -> transferFlavors
    java.lang.Object obj -> obj
    java.lang.String mimeType -> mimeType
    javax.activation.DataContentHandler dch -> dch
    javax.activation.DataContentHandler getDCH() -> getDCH
    myjava.awt.datatransfer.DataFlavor[] getTransferDataFlavors() -> getTransferDataFlavors
    java.lang.Object getTransferData(myjava.awt.datatransfer.DataFlavor,javax.activation.DataSource) -> getTransferData
    java.lang.Object getContent(javax.activation.DataSource) -> getContent
    void writeTo(java.lang.Object,java.lang.String,java.io.OutputStream) -> writeTo
javax.activation.SecuritySupport -> javax.activation.SecuritySupport:
    java.lang.ClassLoader getContextClassLoader() -> getContextClassLoader
    java.io.InputStream getResourceAsStream(java.lang.Class,java.lang.String) -> getResourceAsStream
    java.net.URL[] getResources(java.lang.ClassLoader,java.lang.String) -> getResources
    java.net.URL[] getSystemResources(java.lang.String) -> getSystemResources
    java.io.InputStream openStream(java.net.URL) -> openStream
javax.activation.SecuritySupport$1 -> javax.activation.SecuritySupport$1:
    java.lang.Object run() -> run
javax.activation.SecuritySupport$2 -> javax.activation.SecuritySupport$2:
    java.lang.Class val$c -> val$c
    java.lang.String val$name -> val$name
    java.lang.Object run() -> run
javax.activation.SecuritySupport$3 -> javax.activation.SecuritySupport$3:
    java.lang.ClassLoader val$cl -> val$cl
    java.lang.String val$name -> val$name
    java.lang.Object run() -> run
javax.activation.SecuritySupport$4 -> javax.activation.SecuritySupport$4:
    java.lang.String val$name -> val$name
    java.lang.Object run() -> run
javax.activation.SecuritySupport$5 -> javax.activation.SecuritySupport$5:
    java.net.URL val$url -> val$url
    java.lang.Object run() -> run
javax.activation.URLDataSource -> javax.activation.URLDataSource:
    java.net.URL url -> url
    java.net.URLConnection url_conn -> url_conn
    java.lang.String getContentType() -> getContentType
    java.lang.String getName() -> getName
    java.io.InputStream getInputStream() -> getInputStream
    java.io.OutputStream getOutputStream() -> getOutputStream
    java.net.URL getURL() -> getURL
javax.activation.UnsupportedDataTypeException -> javax.activation.UnsupportedDataTypeException:
javax.mail.Address -> javax.mail.Address:
    long serialVersionUID -> serialVersionUID
    java.lang.String getType() -> getType
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
javax.mail.AuthenticationFailedException -> javax.mail.AuthenticationFailedException:
    long serialVersionUID -> serialVersionUID
javax.mail.Authenticator -> javax.mail.Authenticator:
    java.net.InetAddress requestingSite -> requestingSite
    int requestingPort -> requestingPort
    java.lang.String requestingProtocol -> requestingProtocol
    java.lang.String requestingPrompt -> requestingPrompt
    java.lang.String requestingUserName -> requestingUserName
    void reset() -> reset
    javax.mail.PasswordAuthentication requestPasswordAuthentication(java.net.InetAddress,int,java.lang.String,java.lang.String,java.lang.String) -> requestPasswordAuthentication
    java.net.InetAddress getRequestingSite() -> getRequestingSite
    int getRequestingPort() -> getRequestingPort
    java.lang.String getRequestingProtocol() -> getRequestingProtocol
    java.lang.String getRequestingPrompt() -> getRequestingPrompt
    java.lang.String getDefaultUserName() -> getDefaultUserName
    javax.mail.PasswordAuthentication getPasswordAuthentication() -> getPasswordAuthentication
javax.mail.BodyPart -> javax.mail.BodyPart:
    javax.mail.Multipart parent -> parent
    javax.mail.Multipart getParent() -> getParent
    void setParent(javax.mail.Multipart) -> setParent
javax.mail.EventQueue -> javax.mail.EventQueue:
    javax.mail.EventQueue$QueueElement head -> head
    javax.mail.EventQueue$QueueElement tail -> tail
    java.lang.Thread qThread -> qThread
    void enqueue(javax.mail.event.MailEvent,java.util.Vector) -> enqueue
    javax.mail.EventQueue$QueueElement dequeue() -> dequeue
    void run() -> run
    void stop() -> stop
javax.mail.EventQueue$QueueElement -> javax.mail.EventQueue$QueueElement:
    javax.mail.EventQueue$QueueElement next -> next
    javax.mail.EventQueue$QueueElement prev -> prev
    javax.mail.event.MailEvent event -> event
    java.util.Vector vector -> vector
javax.mail.FetchProfile -> javax.mail.FetchProfile:
    java.util.Vector specials -> specials
    java.util.Vector headers -> headers
    void add(javax.mail.FetchProfile$Item) -> add
    void add(java.lang.String) -> add
    boolean contains(javax.mail.FetchProfile$Item) -> contains
    boolean contains(java.lang.String) -> contains
    javax.mail.FetchProfile$Item[] getItems() -> getItems
    java.lang.String[] getHeaderNames() -> getHeaderNames
javax.mail.FetchProfile$Item -> javax.mail.FetchProfile$Item:
    javax.mail.FetchProfile$Item ENVELOPE -> ENVELOPE
    javax.mail.FetchProfile$Item CONTENT_INFO -> CONTENT_INFO
    javax.mail.FetchProfile$Item FLAGS -> FLAGS
    java.lang.String name -> name
javax.mail.Flags -> javax.mail.Flags:
    int system_flags -> system_flags
    java.util.Hashtable user_flags -> user_flags
    int ANSWERED_BIT -> ANSWERED_BIT
    int DELETED_BIT -> DELETED_BIT
    int DRAFT_BIT -> DRAFT_BIT
    int FLAGGED_BIT -> FLAGGED_BIT
    int RECENT_BIT -> RECENT_BIT
    int SEEN_BIT -> SEEN_BIT
    int USER_BIT -> USER_BIT
    long serialVersionUID -> serialVersionUID
    void add(javax.mail.Flags$Flag) -> add
    void add(java.lang.String) -> add
    void add(javax.mail.Flags) -> add
    void remove(javax.mail.Flags$Flag) -> remove
    void remove(java.lang.String) -> remove
    void remove(javax.mail.Flags) -> remove
    boolean contains(javax.mail.Flags$Flag) -> contains
    boolean contains(java.lang.String) -> contains
    boolean contains(javax.mail.Flags) -> contains
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    javax.mail.Flags$Flag[] getSystemFlags() -> getSystemFlags
    java.lang.String[] getUserFlags() -> getUserFlags
    java.lang.Object clone() -> clone
javax.mail.Flags$Flag -> javax.mail.Flags$Flag:
    javax.mail.Flags$Flag ANSWERED -> ANSWERED
    javax.mail.Flags$Flag DELETED -> DELETED
    javax.mail.Flags$Flag DRAFT -> DRAFT
    javax.mail.Flags$Flag FLAGGED -> FLAGGED
    javax.mail.Flags$Flag RECENT -> RECENT
    javax.mail.Flags$Flag SEEN -> SEEN
    javax.mail.Flags$Flag USER -> USER
    int bit -> bit
    int access$0(javax.mail.Flags$Flag) -> access$0
javax.mail.Folder -> javax.mail.Folder:
    javax.mail.Store store -> store
    int mode -> mode
    int HOLDS_MESSAGES -> HOLDS_MESSAGES
    int HOLDS_FOLDERS -> HOLDS_FOLDERS
    int READ_ONLY -> READ_ONLY
    int READ_WRITE -> READ_WRITE
    java.util.Vector connectionListeners -> connectionListeners
    java.util.Vector folderListeners -> folderListeners
    java.util.Vector messageCountListeners -> messageCountListeners
    java.util.Vector messageChangedListeners -> messageChangedListeners
    javax.mail.EventQueue q -> q
    java.lang.Object qLock -> qLock
    java.lang.String getName() -> getName
    java.lang.String getFullName() -> getFullName
    javax.mail.URLName getURLName() -> getURLName
    javax.mail.Store getStore() -> getStore
    javax.mail.Folder getParent() -> getParent
    boolean exists() -> exists
    javax.mail.Folder[] list(java.lang.String) -> list
    javax.mail.Folder[] listSubscribed(java.lang.String) -> listSubscribed
    javax.mail.Folder[] list() -> list
    javax.mail.Folder[] listSubscribed() -> listSubscribed
    char getSeparator() -> getSeparator
    int getType() -> getType
    boolean create(int) -> create
    boolean isSubscribed() -> isSubscribed
    void setSubscribed(boolean) -> setSubscribed
    boolean hasNewMessages() -> hasNewMessages
    javax.mail.Folder getFolder(java.lang.String) -> getFolder
    boolean delete(boolean) -> delete
    boolean renameTo(javax.mail.Folder) -> renameTo
    void open(int) -> open
    void close(boolean) -> close
    boolean isOpen() -> isOpen
    int getMode() -> getMode
    javax.mail.Flags getPermanentFlags() -> getPermanentFlags
    int getMessageCount() -> getMessageCount
    int getNewMessageCount() -> getNewMessageCount
    int getUnreadMessageCount() -> getUnreadMessageCount
    int getDeletedMessageCount() -> getDeletedMessageCount
    javax.mail.Message getMessage(int) -> getMessage
    javax.mail.Message[] getMessages(int,int) -> getMessages
    javax.mail.Message[] getMessages(int[]) -> getMessages
    javax.mail.Message[] getMessages() -> getMessages
    void appendMessages(javax.mail.Message[]) -> appendMessages
    void fetch(javax.mail.Message[],javax.mail.FetchProfile) -> fetch
    void setFlags(javax.mail.Message[],javax.mail.Flags,boolean) -> setFlags
    void setFlags(int,int,javax.mail.Flags,boolean) -> setFlags
    void setFlags(int[],javax.mail.Flags,boolean) -> setFlags
    void copyMessages(javax.mail.Message[],javax.mail.Folder) -> copyMessages
    javax.mail.Message[] expunge() -> expunge
    javax.mail.Message[] search(javax.mail.search.SearchTerm) -> search
    javax.mail.Message[] search(javax.mail.search.SearchTerm,javax.mail.Message[]) -> search
    void addConnectionListener(javax.mail.event.ConnectionListener) -> addConnectionListener
    void removeConnectionListener(javax.mail.event.ConnectionListener) -> removeConnectionListener
    void notifyConnectionListeners(int) -> notifyConnectionListeners
    void addFolderListener(javax.mail.event.FolderListener) -> addFolderListener
    void removeFolderListener(javax.mail.event.FolderListener) -> removeFolderListener
    void notifyFolderListeners(int) -> notifyFolderListeners
    void notifyFolderRenamedListeners(javax.mail.Folder) -> notifyFolderRenamedListeners
    void addMessageCountListener(javax.mail.event.MessageCountListener) -> addMessageCountListener
    void removeMessageCountListener(javax.mail.event.MessageCountListener) -> removeMessageCountListener
    void notifyMessageAddedListeners(javax.mail.Message[]) -> notifyMessageAddedListeners
    void notifyMessageRemovedListeners(boolean,javax.mail.Message[]) -> notifyMessageRemovedListeners
    void addMessageChangedListener(javax.mail.event.MessageChangedListener) -> addMessageChangedListener
    void removeMessageChangedListener(javax.mail.event.MessageChangedListener) -> removeMessageChangedListener
    void notifyMessageChangedListeners(int,javax.mail.Message) -> notifyMessageChangedListeners
    void queueEvent(javax.mail.event.MailEvent,java.util.Vector) -> queueEvent
    void terminateQueue() -> terminateQueue
    void finalize() -> finalize
    java.lang.String toString() -> toString
javax.mail.Folder$TerminatorEvent -> javax.mail.Folder$TerminatorEvent:
    long serialVersionUID -> serialVersionUID
    void dispatch(java.lang.Object) -> dispatch
javax.mail.FolderClosedException -> javax.mail.FolderClosedException:
    javax.mail.Folder folder -> folder
    long serialVersionUID -> serialVersionUID
    javax.mail.Folder getFolder() -> getFolder
javax.mail.FolderNotFoundException -> javax.mail.FolderNotFoundException:
    javax.mail.Folder folder -> folder
    long serialVersionUID -> serialVersionUID
    javax.mail.Folder getFolder() -> getFolder
javax.mail.Header -> javax.mail.Header:
    java.lang.String name -> name
    java.lang.String value -> value
    java.lang.String getName() -> getName
    java.lang.String getValue() -> getValue
javax.mail.IllegalWriteException -> javax.mail.IllegalWriteException:
    long serialVersionUID -> serialVersionUID
javax.mail.Message -> javax.mail.Message:
    int msgnum -> msgnum
    boolean expunged -> expunged
    javax.mail.Folder folder -> folder
    javax.mail.Session session -> session
    javax.mail.Address[] getFrom() -> getFrom
    void setFrom() -> setFrom
    void setFrom(javax.mail.Address) -> setFrom
    void addFrom(javax.mail.Address[]) -> addFrom
    javax.mail.Address[] getRecipients(javax.mail.Message$RecipientType) -> getRecipients
    javax.mail.Address[] getAllRecipients() -> getAllRecipients
    void setRecipients(javax.mail.Message$RecipientType,javax.mail.Address[]) -> setRecipients
    void setRecipient(javax.mail.Message$RecipientType,javax.mail.Address) -> setRecipient
    void addRecipients(javax.mail.Message$RecipientType,javax.mail.Address[]) -> addRecipients
    void addRecipient(javax.mail.Message$RecipientType,javax.mail.Address) -> addRecipient
    javax.mail.Address[] getReplyTo() -> getReplyTo
    void setReplyTo(javax.mail.Address[]) -> setReplyTo
    java.lang.String getSubject() -> getSubject
    void setSubject(java.lang.String) -> setSubject
    java.util.Date getSentDate() -> getSentDate
    void setSentDate(java.util.Date) -> setSentDate
    java.util.Date getReceivedDate() -> getReceivedDate
    javax.mail.Flags getFlags() -> getFlags
    boolean isSet(javax.mail.Flags$Flag) -> isSet
    void setFlags(javax.mail.Flags,boolean) -> setFlags
    void setFlag(javax.mail.Flags$Flag,boolean) -> setFlag
    int getMessageNumber() -> getMessageNumber
    void setMessageNumber(int) -> setMessageNumber
    javax.mail.Folder getFolder() -> getFolder
    boolean isExpunged() -> isExpunged
    void setExpunged(boolean) -> setExpunged
    javax.mail.Message reply(boolean) -> reply
    void saveChanges() -> saveChanges
    boolean match(javax.mail.search.SearchTerm) -> match
javax.mail.Message$RecipientType -> javax.mail.Message$RecipientType:
    javax.mail.Message$RecipientType TO -> TO
    javax.mail.Message$RecipientType CC -> CC
    javax.mail.Message$RecipientType BCC -> BCC
    java.lang.String type -> type
    long serialVersionUID -> serialVersionUID
    java.lang.Object readResolve() -> readResolve
    java.lang.String toString() -> toString
javax.mail.MessageAware -> javax.mail.MessageAware:
    javax.mail.MessageContext getMessageContext() -> getMessageContext
javax.mail.MessageContext -> javax.mail.MessageContext:
    javax.mail.Part part -> part
    javax.mail.Part getPart() -> getPart
    javax.mail.Message getMessage() -> getMessage
    javax.mail.Message getMessage(javax.mail.Part) -> getMessage
    javax.mail.Session getSession() -> getSession
javax.mail.MessageRemovedException -> javax.mail.MessageRemovedException:
    long serialVersionUID -> serialVersionUID
javax.mail.MessagingException -> javax.mail.MessagingException:
    java.lang.Exception next -> next
    long serialVersionUID -> serialVersionUID
    java.lang.Exception getNextException() -> getNextException
    java.lang.Throwable getCause() -> getCause
    boolean setNextException(java.lang.Exception) -> setNextException
    java.lang.String toString() -> toString
    java.lang.String superToString() -> superToString
javax.mail.MethodNotSupportedException -> javax.mail.MethodNotSupportedException:
    long serialVersionUID -> serialVersionUID
javax.mail.Multipart -> javax.mail.Multipart:
    java.util.Vector parts -> parts
    java.lang.String contentType -> contentType
    javax.mail.Part parent -> parent
    void setMultipartDataSource(javax.mail.MultipartDataSource) -> setMultipartDataSource
    java.lang.String getContentType() -> getContentType
    int getCount() -> getCount
    javax.mail.BodyPart getBodyPart(int) -> getBodyPart
    boolean removeBodyPart(javax.mail.BodyPart) -> removeBodyPart
    void removeBodyPart(int) -> removeBodyPart
    void addBodyPart(javax.mail.BodyPart) -> addBodyPart
    void addBodyPart(javax.mail.BodyPart,int) -> addBodyPart
    void writeTo(java.io.OutputStream) -> writeTo
    javax.mail.Part getParent() -> getParent
    void setParent(javax.mail.Part) -> setParent
javax.mail.MultipartDataSource -> javax.mail.MultipartDataSource:
    int getCount() -> getCount
    javax.mail.BodyPart getBodyPart(int) -> getBodyPart
javax.mail.NoSuchProviderException -> javax.mail.NoSuchProviderException:
    long serialVersionUID -> serialVersionUID
javax.mail.Part -> javax.mail.Part:
    java.lang.String ATTACHMENT -> ATTACHMENT
    java.lang.String INLINE -> INLINE
    int getSize() -> getSize
    int getLineCount() -> getLineCount
    java.lang.String getContentType() -> getContentType
    boolean isMimeType(java.lang.String) -> isMimeType
    java.lang.String getDisposition() -> getDisposition
    void setDisposition(java.lang.String) -> setDisposition
    java.lang.String getDescription() -> getDescription
    void setDescription(java.lang.String) -> setDescription
    java.lang.String getFileName() -> getFileName
    void setFileName(java.lang.String) -> setFileName
    java.io.InputStream getInputStream() -> getInputStream
    javax.activation.DataHandler getDataHandler() -> getDataHandler
    java.lang.Object getContent() -> getContent
    void setDataHandler(javax.activation.DataHandler) -> setDataHandler
    void setContent(java.lang.Object,java.lang.String) -> setContent
    void setText(java.lang.String) -> setText
    void setContent(javax.mail.Multipart) -> setContent
    void writeTo(java.io.OutputStream) -> writeTo
    java.lang.String[] getHeader(java.lang.String) -> getHeader
    void setHeader(java.lang.String,java.lang.String) -> setHeader
    void addHeader(java.lang.String,java.lang.String) -> addHeader
    void removeHeader(java.lang.String) -> removeHeader
    java.util.Enumeration getAllHeaders() -> getAllHeaders
    java.util.Enumeration getMatchingHeaders(java.lang.String[]) -> getMatchingHeaders
    java.util.Enumeration getNonMatchingHeaders(java.lang.String[]) -> getNonMatchingHeaders
javax.mail.PasswordAuthentication -> javax.mail.PasswordAuthentication:
    java.lang.String userName -> userName
    java.lang.String password -> password
    java.lang.String getUserName() -> getUserName
    java.lang.String getPassword() -> getPassword
javax.mail.Provider -> javax.mail.Provider:
    javax.mail.Provider$Type type -> type
    java.lang.String protocol -> protocol
    java.lang.String className -> className
    java.lang.String vendor -> vendor
    java.lang.String version -> version
    javax.mail.Provider$Type getType() -> getType
    java.lang.String getProtocol() -> getProtocol
    java.lang.String getClassName() -> getClassName
    java.lang.String getVendor() -> getVendor
    java.lang.String getVersion() -> getVersion
    java.lang.String toString() -> toString
javax.mail.Provider$Type -> javax.mail.Provider$Type:
    javax.mail.Provider$Type STORE -> STORE
    javax.mail.Provider$Type TRANSPORT -> TRANSPORT
    java.lang.String type -> type
    java.lang.String toString() -> toString
javax.mail.Quota -> javax.mail.Quota:
    java.lang.String quotaRoot -> quotaRoot
    javax.mail.Quota$Resource[] resources -> resources
    void setResourceLimit(java.lang.String,long) -> setResourceLimit
javax.mail.Quota$Resource -> javax.mail.Quota$Resource:
    java.lang.String name -> name
    long usage -> usage
    long limit -> limit
javax.mail.QuotaAwareStore -> javax.mail.QuotaAwareStore:
    javax.mail.Quota[] getQuota(java.lang.String) -> getQuota
    void setQuota(javax.mail.Quota) -> setQuota
javax.mail.ReadOnlyFolderException -> javax.mail.ReadOnlyFolderException:
    javax.mail.Folder folder -> folder
    long serialVersionUID -> serialVersionUID
    javax.mail.Folder getFolder() -> getFolder
javax.mail.SendFailedException -> javax.mail.SendFailedException:
    javax.mail.Address[] invalid -> invalid
    javax.mail.Address[] validSent -> validSent
    javax.mail.Address[] validUnsent -> validUnsent
    long serialVersionUID -> serialVersionUID
    javax.mail.Address[] getValidSentAddresses() -> getValidSentAddresses
    javax.mail.Address[] getValidUnsentAddresses() -> getValidUnsentAddresses
    javax.mail.Address[] getInvalidAddresses() -> getInvalidAddresses
javax.mail.Service -> javax.mail.Service:
    javax.mail.Session session -> session
    javax.mail.URLName url -> url
    boolean debug -> debug
    boolean connected -> connected
    java.util.Vector connectionListeners -> connectionListeners
    javax.mail.EventQueue q -> q
    java.lang.Object qLock -> qLock
    void connect() -> connect
    void connect(java.lang.String,java.lang.String,java.lang.String) -> connect
    void connect(java.lang.String,java.lang.String) -> connect
    void connect(java.lang.String,int,java.lang.String,java.lang.String) -> connect
    boolean protocolConnect(java.lang.String,int,java.lang.String,java.lang.String) -> protocolConnect
    boolean isConnected() -> isConnected
    void setConnected(boolean) -> setConnected
    void close() -> close
    javax.mail.URLName getURLName() -> getURLName
    void setURLName(javax.mail.URLName) -> setURLName
    void addConnectionListener(javax.mail.event.ConnectionListener) -> addConnectionListener
    void removeConnectionListener(javax.mail.event.ConnectionListener) -> removeConnectionListener
    void notifyConnectionListeners(int) -> notifyConnectionListeners
    java.lang.String toString() -> toString
    void queueEvent(javax.mail.event.MailEvent,java.util.Vector) -> queueEvent
    void terminateQueue() -> terminateQueue
    void finalize() -> finalize
javax.mail.Service$TerminatorEvent -> javax.mail.Service$TerminatorEvent:
    long serialVersionUID -> serialVersionUID
    void dispatch(java.lang.Object) -> dispatch
javax.mail.Session -> javax.mail.Session:
    java.util.Properties props -> props
    javax.mail.Authenticator authenticator -> authenticator
    java.util.Hashtable authTable -> authTable
    boolean debug -> debug
    java.io.PrintStream out -> out
    java.util.Vector providers -> providers
    java.util.Hashtable providersByProtocol -> providersByProtocol
    java.util.Hashtable providersByClassName -> providersByClassName
    java.util.Properties addressMap -> addressMap
    javax.mail.Session defaultSession -> defaultSession
    javax.mail.Session getInstance(java.util.Properties,javax.mail.Authenticator) -> getInstance
    javax.mail.Session getInstance(java.util.Properties) -> getInstance
    javax.mail.Session getDefaultInstance(java.util.Properties,javax.mail.Authenticator) -> getDefaultInstance
    javax.mail.Session getDefaultInstance(java.util.Properties) -> getDefaultInstance
    void setDebug(boolean) -> setDebug
    boolean getDebug() -> getDebug
    void setDebugOut(java.io.PrintStream) -> setDebugOut
    java.io.PrintStream getDebugOut() -> getDebugOut
    javax.mail.Provider[] getProviders() -> getProviders
    javax.mail.Provider getProvider(java.lang.String) -> getProvider
    void setProvider(javax.mail.Provider) -> setProvider
    javax.mail.Store getStore() -> getStore
    javax.mail.Store getStore(java.lang.String) -> getStore
    javax.mail.Store getStore(javax.mail.URLName) -> getStore
    javax.mail.Store getStore(javax.mail.Provider) -> getStore
    javax.mail.Store getStore(javax.mail.Provider,javax.mail.URLName) -> getStore
    javax.mail.Folder getFolder(javax.mail.URLName) -> getFolder
    javax.mail.Transport getTransport() -> getTransport
    javax.mail.Transport getTransport(java.lang.String) -> getTransport
    javax.mail.Transport getTransport(javax.mail.URLName) -> getTransport
    javax.mail.Transport getTransport(javax.mail.Provider) -> getTransport
    javax.mail.Transport getTransport(javax.mail.Address) -> getTransport
    javax.mail.Transport getTransport(javax.mail.Provider,javax.mail.URLName) -> getTransport
    java.lang.Object getService(javax.mail.Provider,javax.mail.URLName) -> getService
    void setPasswordAuthentication(javax.mail.URLName,javax.mail.PasswordAuthentication) -> setPasswordAuthentication
    javax.mail.PasswordAuthentication getPasswordAuthentication(javax.mail.URLName) -> getPasswordAuthentication
    javax.mail.PasswordAuthentication requestPasswordAuthentication(java.net.InetAddress,int,java.lang.String,java.lang.String,java.lang.String) -> requestPasswordAuthentication
    java.util.Properties getProperties() -> getProperties
    java.lang.String getProperty(java.lang.String) -> getProperty
    void loadProviders(java.lang.Class) -> loadProviders
    void loadProvidersFromStream(java.io.InputStream) -> loadProvidersFromStream
    void addProvider(javax.mail.Provider) -> addProvider
    void loadAddressMap(java.lang.Class) -> loadAddressMap
    void setProtocolForAddress(java.lang.String,java.lang.String) -> setProtocolForAddress
    void loadFile(java.lang.String,javax.mail.StreamLoader) -> loadFile
    void loadResource(java.lang.String,java.lang.Class,javax.mail.StreamLoader) -> loadResource
    void loadAllResources(java.lang.String,java.lang.Class,javax.mail.StreamLoader) -> loadAllResources
    void pr(java.lang.String) -> pr
    java.lang.ClassLoader getContextClassLoader() -> getContextClassLoader
    java.io.InputStream getResourceAsStream(java.lang.Class,java.lang.String) -> getResourceAsStream
    java.net.URL[] getResources(java.lang.ClassLoader,java.lang.String) -> getResources
    java.net.URL[] getSystemResources(java.lang.String) -> getSystemResources
    java.io.InputStream openStream(java.net.URL) -> openStream
    void access$0(javax.mail.Session,java.io.InputStream) -> access$0
    java.util.Properties access$1(javax.mail.Session) -> access$1
javax.mail.Session$1 -> javax.mail.Session$1:
    javax.mail.Session this$0 -> this$0
    void load(java.io.InputStream) -> load
javax.mail.Session$2 -> javax.mail.Session$2:
    javax.mail.Session this$0 -> this$0
    void load(java.io.InputStream) -> load
javax.mail.Session$3 -> javax.mail.Session$3:
    java.lang.Object run() -> run
javax.mail.Session$4 -> javax.mail.Session$4:
    java.lang.Class val$c -> val$c
    java.lang.String val$name -> val$name
    java.lang.Object run() -> run
javax.mail.Session$5 -> javax.mail.Session$5:
    java.lang.ClassLoader val$cl -> val$cl
    java.lang.String val$name -> val$name
    java.lang.Object run() -> run
javax.mail.Session$6 -> javax.mail.Session$6:
    java.lang.String val$name -> val$name
    java.lang.Object run() -> run
javax.mail.Session$7 -> javax.mail.Session$7:
    java.net.URL val$url -> val$url
    java.lang.Object run() -> run
javax.mail.Store -> javax.mail.Store:
    java.util.Vector storeListeners -> storeListeners
    java.util.Vector folderListeners -> folderListeners
    javax.mail.Folder getDefaultFolder() -> getDefaultFolder
    javax.mail.Folder getFolder(java.lang.String) -> getFolder
    javax.mail.Folder getFolder(javax.mail.URLName) -> getFolder
    javax.mail.Folder[] getPersonalNamespaces() -> getPersonalNamespaces
    javax.mail.Folder[] getUserNamespaces(java.lang.String) -> getUserNamespaces
    javax.mail.Folder[] getSharedNamespaces() -> getSharedNamespaces
    void addStoreListener(javax.mail.event.StoreListener) -> addStoreListener
    void removeStoreListener(javax.mail.event.StoreListener) -> removeStoreListener
    void notifyStoreListeners(int,java.lang.String) -> notifyStoreListeners
    void addFolderListener(javax.mail.event.FolderListener) -> addFolderListener
    void removeFolderListener(javax.mail.event.FolderListener) -> removeFolderListener
    void notifyFolderListeners(int,javax.mail.Folder) -> notifyFolderListeners
    void notifyFolderRenamedListeners(javax.mail.Folder,javax.mail.Folder) -> notifyFolderRenamedListeners
javax.mail.StoreClosedException -> javax.mail.StoreClosedException:
    javax.mail.Store store -> store
    long serialVersionUID -> serialVersionUID
    javax.mail.Store getStore() -> getStore
javax.mail.StreamLoader -> javax.mail.StreamLoader:
    void load(java.io.InputStream) -> load
javax.mail.Transport -> javax.mail.Transport:
    java.util.Vector transportListeners -> transportListeners
    void send(javax.mail.Message) -> send
    void send(javax.mail.Message,javax.mail.Address[]) -> send
    void send0(javax.mail.Message,javax.mail.Address[]) -> send0
    void sendMessage(javax.mail.Message,javax.mail.Address[]) -> sendMessage
    void addTransportListener(javax.mail.event.TransportListener) -> addTransportListener
    void removeTransportListener(javax.mail.event.TransportListener) -> removeTransportListener
    void notifyTransportListeners(int,javax.mail.Address[],javax.mail.Address[],javax.mail.Address[],javax.mail.Message) -> notifyTransportListeners
javax.mail.UIDFolder -> javax.mail.UIDFolder:
    long LASTUID -> LASTUID
    long getUIDValidity() -> getUIDValidity
    javax.mail.Message getMessageByUID(long) -> getMessageByUID
    javax.mail.Message[] getMessagesByUID(long,long) -> getMessagesByUID
    javax.mail.Message[] getMessagesByUID(long[]) -> getMessagesByUID
    long getUID(javax.mail.Message) -> getUID
javax.mail.UIDFolder$FetchProfileItem -> javax.mail.UIDFolder$FetchProfileItem:
    javax.mail.UIDFolder$FetchProfileItem UID -> UID
javax.mail.URLName -> javax.mail.URLName:
    java.lang.String fullURL -> fullURL
    java.lang.String protocol -> protocol
    java.lang.String username -> username
    java.lang.String password -> password
    java.lang.String host -> host
    java.net.InetAddress hostAddress -> hostAddress
    boolean hostAddressKnown -> hostAddressKnown
    int port -> port
    java.lang.String file -> file
    java.lang.String ref -> ref
    int hashCode -> hashCode
    boolean doEncode -> doEncode
    java.util.BitSet dontNeedEncoding -> dontNeedEncoding
    int caseDiff -> caseDiff
    java.lang.String toString() -> toString
    void parseString(java.lang.String) -> parseString
    int getPort() -> getPort
    java.lang.String getProtocol() -> getProtocol
    java.lang.String getFile() -> getFile
    java.lang.String getRef() -> getRef
    java.lang.String getHost() -> getHost
    java.lang.String getUsername() -> getUsername
    java.lang.String getPassword() -> getPassword
    java.net.URL getURL() -> getURL
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.net.InetAddress getHostAddress() -> getHostAddress
    java.lang.String encode(java.lang.String) -> encode
    java.lang.String _encode(java.lang.String) -> _encode
    java.lang.String decode(java.lang.String) -> decode
    int indexOfAny(java.lang.String,java.lang.String) -> indexOfAny
    int indexOfAny(java.lang.String,java.lang.String,int) -> indexOfAny
javax.mail.Version -> javax.mail.Version:
    java.lang.String version -> version
javax.mail.event.ConnectionAdapter -> javax.mail.event.ConnectionAdapter:
    void opened(javax.mail.event.ConnectionEvent) -> opened
    void disconnected(javax.mail.event.ConnectionEvent) -> disconnected
    void closed(javax.mail.event.ConnectionEvent) -> closed
javax.mail.event.ConnectionEvent -> javax.mail.event.ConnectionEvent:
    int OPENED -> OPENED
    int DISCONNECTED -> DISCONNECTED
    int CLOSED -> CLOSED
    int type -> type
    long serialVersionUID -> serialVersionUID
    int getType() -> getType
    void dispatch(java.lang.Object) -> dispatch
javax.mail.event.ConnectionListener -> javax.mail.event.ConnectionListener:
    void opened(javax.mail.event.ConnectionEvent) -> opened
    void disconnected(javax.mail.event.ConnectionEvent) -> disconnected
    void closed(javax.mail.event.ConnectionEvent) -> closed
javax.mail.event.FolderAdapter -> javax.mail.event.FolderAdapter:
    void folderCreated(javax.mail.event.FolderEvent) -> folderCreated
    void folderRenamed(javax.mail.event.FolderEvent) -> folderRenamed
    void folderDeleted(javax.mail.event.FolderEvent) -> folderDeleted
javax.mail.event.FolderEvent -> javax.mail.event.FolderEvent:
    int CREATED -> CREATED
    int DELETED -> DELETED
    int RENAMED -> RENAMED
    int type -> type
    javax.mail.Folder folder -> folder
    javax.mail.Folder newFolder -> newFolder
    long serialVersionUID -> serialVersionUID
    int getType() -> getType
    javax.mail.Folder getFolder() -> getFolder
    javax.mail.Folder getNewFolder() -> getNewFolder
    void dispatch(java.lang.Object) -> dispatch
javax.mail.event.FolderListener -> javax.mail.event.FolderListener:
    void folderCreated(javax.mail.event.FolderEvent) -> folderCreated
    void folderDeleted(javax.mail.event.FolderEvent) -> folderDeleted
    void folderRenamed(javax.mail.event.FolderEvent) -> folderRenamed
javax.mail.event.MailEvent -> javax.mail.event.MailEvent:
    long serialVersionUID -> serialVersionUID
    void dispatch(java.lang.Object) -> dispatch
javax.mail.event.MessageChangedEvent -> javax.mail.event.MessageChangedEvent:
    int FLAGS_CHANGED -> FLAGS_CHANGED
    int ENVELOPE_CHANGED -> ENVELOPE_CHANGED
    int type -> type
    javax.mail.Message msg -> msg
    long serialVersionUID -> serialVersionUID
    int getMessageChangeType() -> getMessageChangeType
    javax.mail.Message getMessage() -> getMessage
    void dispatch(java.lang.Object) -> dispatch
javax.mail.event.MessageChangedListener -> javax.mail.event.MessageChangedListener:
    void messageChanged(javax.mail.event.MessageChangedEvent) -> messageChanged
javax.mail.event.MessageCountAdapter -> javax.mail.event.MessageCountAdapter:
    void messagesAdded(javax.mail.event.MessageCountEvent) -> messagesAdded
    void messagesRemoved(javax.mail.event.MessageCountEvent) -> messagesRemoved
javax.mail.event.MessageCountEvent -> javax.mail.event.MessageCountEvent:
    int ADDED -> ADDED
    int REMOVED -> REMOVED
    int type -> type
    boolean removed -> removed
    javax.mail.Message[] msgs -> msgs
    long serialVersionUID -> serialVersionUID
    int getType() -> getType
    boolean isRemoved() -> isRemoved
    javax.mail.Message[] getMessages() -> getMessages
    void dispatch(java.lang.Object) -> dispatch
javax.mail.event.MessageCountListener -> javax.mail.event.MessageCountListener:
    void messagesAdded(javax.mail.event.MessageCountEvent) -> messagesAdded
    void messagesRemoved(javax.mail.event.MessageCountEvent) -> messagesRemoved
javax.mail.event.StoreEvent -> javax.mail.event.StoreEvent:
    int ALERT -> ALERT
    int NOTICE -> NOTICE
    int type -> type
    java.lang.String message -> message
    long serialVersionUID -> serialVersionUID
    int getMessageType() -> getMessageType
    java.lang.String getMessage() -> getMessage
    void dispatch(java.lang.Object) -> dispatch
javax.mail.event.StoreListener -> javax.mail.event.StoreListener:
    void notification(javax.mail.event.StoreEvent) -> notification
javax.mail.event.TransportAdapter -> javax.mail.event.TransportAdapter:
    void messageDelivered(javax.mail.event.TransportEvent) -> messageDelivered
    void messageNotDelivered(javax.mail.event.TransportEvent) -> messageNotDelivered
    void messagePartiallyDelivered(javax.mail.event.TransportEvent) -> messagePartiallyDelivered
javax.mail.event.TransportEvent -> javax.mail.event.TransportEvent:
    int MESSAGE_DELIVERED -> MESSAGE_DELIVERED
    int MESSAGE_NOT_DELIVERED -> MESSAGE_NOT_DELIVERED
    int MESSAGE_PARTIALLY_DELIVERED -> MESSAGE_PARTIALLY_DELIVERED
    int type -> type
    javax.mail.Address[] validSent -> validSent
    javax.mail.Address[] validUnsent -> validUnsent
    javax.mail.Address[] invalid -> invalid
    javax.mail.Message msg -> msg
    long serialVersionUID -> serialVersionUID
    int getType() -> getType
    javax.mail.Address[] getValidSentAddresses() -> getValidSentAddresses
    javax.mail.Address[] getValidUnsentAddresses() -> getValidUnsentAddresses
    javax.mail.Address[] getInvalidAddresses() -> getInvalidAddresses
    javax.mail.Message getMessage() -> getMessage
    void dispatch(java.lang.Object) -> dispatch
javax.mail.event.TransportListener -> javax.mail.event.TransportListener:
    void messageDelivered(javax.mail.event.TransportEvent) -> messageDelivered
    void messageNotDelivered(javax.mail.event.TransportEvent) -> messageNotDelivered
    void messagePartiallyDelivered(javax.mail.event.TransportEvent) -> messagePartiallyDelivered
javax.mail.internet.AddressException -> javax.mail.internet.AddressException:
    java.lang.String ref -> ref
    int pos -> pos
    long serialVersionUID -> serialVersionUID
    java.lang.String getRef() -> getRef
    int getPos() -> getPos
    java.lang.String toString() -> toString
javax.mail.internet.AsciiOutputStream -> javax.mail.internet.AsciiOutputStream:
    boolean breakOnNonAscii -> breakOnNonAscii
    int ascii -> ascii
    int non_ascii -> non_ascii
    int linelen -> linelen
    boolean longLine -> longLine
    boolean badEOL -> badEOL
    boolean checkEOL -> checkEOL
    int lastb -> lastb
    int ret -> ret
    void write(int) -> write
    void write(byte[]) -> write
    void write(byte[],int,int) -> write
    void check(int) -> check
    int getAscii() -> getAscii
javax.mail.internet.ContentDisposition -> javax.mail.internet.ContentDisposition:
    java.lang.String disposition -> disposition
    javax.mail.internet.ParameterList list -> list
    java.lang.String getDisposition() -> getDisposition
    java.lang.String getParameter(java.lang.String) -> getParameter
    javax.mail.internet.ParameterList getParameterList() -> getParameterList
    void setDisposition(java.lang.String) -> setDisposition
    void setParameter(java.lang.String,java.lang.String) -> setParameter
    void setParameterList(javax.mail.internet.ParameterList) -> setParameterList
    java.lang.String toString() -> toString
javax.mail.internet.ContentType -> javax.mail.internet.ContentType:
    java.lang.String primaryType -> primaryType
    java.lang.String subType -> subType
    javax.mail.internet.ParameterList list -> list
    java.lang.String getPrimaryType() -> getPrimaryType
    java.lang.String getSubType() -> getSubType
    java.lang.String getBaseType() -> getBaseType
    java.lang.String getParameter(java.lang.String) -> getParameter
    javax.mail.internet.ParameterList getParameterList() -> getParameterList
    void setPrimaryType(java.lang.String) -> setPrimaryType
    void setSubType(java.lang.String) -> setSubType
    void setParameter(java.lang.String,java.lang.String) -> setParameter
    void setParameterList(javax.mail.internet.ParameterList) -> setParameterList
    java.lang.String toString() -> toString
    boolean match(javax.mail.internet.ContentType) -> match
    boolean match(java.lang.String) -> match
javax.mail.internet.HeaderTokenizer -> javax.mail.internet.HeaderTokenizer:
    java.lang.String string -> string
    boolean skipComments -> skipComments
    java.lang.String delimiters -> delimiters
    int currentPos -> currentPos
    int maxPos -> maxPos
    int nextPos -> nextPos
    int peekPos -> peekPos
    java.lang.String RFC822 -> RFC822
    java.lang.String MIME -> MIME
    javax.mail.internet.HeaderTokenizer$Token EOFToken -> EOFToken
    javax.mail.internet.HeaderTokenizer$Token next() -> next
    javax.mail.internet.HeaderTokenizer$Token peek() -> peek
    java.lang.String getRemainder() -> getRemainder
    javax.mail.internet.HeaderTokenizer$Token getNext() -> getNext
    int skipWhiteSpace() -> skipWhiteSpace
    java.lang.String filterToken(java.lang.String,int,int) -> filterToken
javax.mail.internet.HeaderTokenizer$Token -> javax.mail.internet.HeaderTokenizer$Token:
    int type -> type
    java.lang.String value -> value
    int ATOM -> ATOM
    int QUOTEDSTRING -> QUOTEDSTRING
    int COMMENT -> COMMENT
    int EOF -> EOF
    int getType() -> getType
    java.lang.String getValue() -> getValue
javax.mail.internet.InternetAddress -> javax.mail.internet.InternetAddress:
    java.lang.String address -> address
    java.lang.String personal -> personal
    java.lang.String encodedPersonal -> encodedPersonal
    long serialVersionUID -> serialVersionUID
    java.lang.String rfc822phrase -> rfc822phrase
    java.lang.String specialsNoDotNoAt -> specialsNoDotNoAt
    java.lang.String specialsNoDot -> specialsNoDot
    java.lang.Object clone() -> clone
    java.lang.String getType() -> getType
    void setAddress(java.lang.String) -> setAddress
    void setPersonal(java.lang.String,java.lang.String) -> setPersonal
    void setPersonal(java.lang.String) -> setPersonal
    java.lang.String getAddress() -> getAddress
    java.lang.String getPersonal() -> getPersonal
    java.lang.String toString() -> toString
    java.lang.String toUnicodeString() -> toUnicodeString
    java.lang.String quotePhrase(java.lang.String) -> quotePhrase
    java.lang.String unquote(java.lang.String) -> unquote
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString(javax.mail.Address[]) -> toString
    java.lang.String toString(javax.mail.Address[],int) -> toString
    int lengthOfFirstSegment(java.lang.String) -> lengthOfFirstSegment
    int lengthOfLastSegment(java.lang.String,int) -> lengthOfLastSegment
    javax.mail.internet.InternetAddress getLocalAddress(javax.mail.Session) -> getLocalAddress
    javax.mail.internet.InternetAddress[] parse(java.lang.String) -> parse
    javax.mail.internet.InternetAddress[] parse(java.lang.String,boolean) -> parse
    javax.mail.internet.InternetAddress[] parseHeader(java.lang.String,boolean) -> parseHeader
    javax.mail.internet.InternetAddress[] parse(java.lang.String,boolean,boolean) -> parse
    void validate() -> validate
    void checkAddress(java.lang.String,boolean,boolean) -> checkAddress
    boolean isSimple() -> isSimple
    boolean isGroup() -> isGroup
    javax.mail.internet.InternetAddress[] getGroup(boolean) -> getGroup
    int indexOfAny(java.lang.String,java.lang.String) -> indexOfAny
    int indexOfAny(java.lang.String,java.lang.String,int) -> indexOfAny
javax.mail.internet.InternetHeaders -> javax.mail.internet.InternetHeaders:
    java.util.List headers -> headers
    void load(java.io.InputStream) -> load
    java.lang.String[] getHeader(java.lang.String) -> getHeader
    java.lang.String getHeader(java.lang.String,java.lang.String) -> getHeader
    void setHeader(java.lang.String,java.lang.String) -> setHeader
    void addHeader(java.lang.String,java.lang.String) -> addHeader
    void removeHeader(java.lang.String) -> removeHeader
    java.util.Enumeration getAllHeaders() -> getAllHeaders
    java.util.Enumeration getMatchingHeaders(java.lang.String[]) -> getMatchingHeaders
    java.util.Enumeration getNonMatchingHeaders(java.lang.String[]) -> getNonMatchingHeaders
    void addHeaderLine(java.lang.String) -> addHeaderLine
    java.util.Enumeration getAllHeaderLines() -> getAllHeaderLines
    java.util.Enumeration getMatchingHeaderLines(java.lang.String[]) -> getMatchingHeaderLines
    java.util.Enumeration getNonMatchingHeaderLines(java.lang.String[]) -> getNonMatchingHeaderLines
javax.mail.internet.InternetHeaders$InternetHeader -> javax.mail.internet.InternetHeaders$InternetHeader:
    java.lang.String line -> line
    java.lang.String getValue() -> getValue
javax.mail.internet.InternetHeaders$matchEnum -> javax.mail.internet.InternetHeaders$matchEnum:
    java.util.Iterator e -> e
    java.lang.String[] names -> names
    boolean match -> match
    boolean want_line -> want_line
    javax.mail.internet.InternetHeaders$InternetHeader next_header -> next_header
    boolean hasMoreElements() -> hasMoreElements
    java.lang.Object nextElement() -> nextElement
    javax.mail.internet.InternetHeaders$InternetHeader nextMatch() -> nextMatch
javax.mail.internet.MailDateFormat -> javax.mail.internet.MailDateFormat:
    long serialVersionUID -> serialVersionUID
    boolean debug -> debug
    java.util.TimeZone tz -> tz
    java.util.Calendar cal -> cal
    java.lang.StringBuffer format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition) -> format
    java.util.Date parse(java.lang.String,java.text.ParsePosition) -> parse
    java.util.Date parseDate(char[],java.text.ParsePosition,boolean) -> parseDate
    java.util.Date ourUTC(int,int,int,int,int,int,int,boolean) -> ourUTC
    void setCalendar(java.util.Calendar) -> setCalendar
    void setNumberFormat(java.text.NumberFormat) -> setNumberFormat
javax.mail.internet.MailDateParser -> javax.mail.internet.MailDateParser:
    int index -> index
    char[] orig -> orig
    void skipUntilNumber() -> skipUntilNumber
    void skipWhiteSpace() -> skipWhiteSpace
    int peekChar() -> peekChar
    void skipChar(char) -> skipChar
    boolean skipIfChar(char) -> skipIfChar
    int parseNumber() -> parseNumber
    int parseMonth() -> parseMonth
    int parseTimeZone() -> parseTimeZone
    int parseNumericTimeZone() -> parseNumericTimeZone
    int parseAlphaTimeZone() -> parseAlphaTimeZone
    int getIndex() -> getIndex
javax.mail.internet.MimeBodyPart -> javax.mail.internet.MimeBodyPart:
    boolean setDefaultTextCharset -> setDefaultTextCharset
    boolean setContentTypeFileName -> setContentTypeFileName
    boolean encodeFileName -> encodeFileName
    boolean decodeFileName -> decodeFileName
    boolean cacheMultipart -> cacheMultipart
    javax.activation.DataHandler dh -> dh
    byte[] content -> content
    java.io.InputStream contentStream -> contentStream
    javax.mail.internet.InternetHeaders headers -> headers
    java.lang.Object cachedContent -> cachedContent
    int getSize() -> getSize
    int getLineCount() -> getLineCount
    java.lang.String getContentType() -> getContentType
    boolean isMimeType(java.lang.String) -> isMimeType
    java.lang.String getDisposition() -> getDisposition
    void setDisposition(java.lang.String) -> setDisposition
    java.lang.String getEncoding() -> getEncoding
    java.lang.String getContentID() -> getContentID
    void setContentID(java.lang.String) -> setContentID
    java.lang.String getContentMD5() -> getContentMD5
    void setContentMD5(java.lang.String) -> setContentMD5
    java.lang.String[] getContentLanguage() -> getContentLanguage
    void setContentLanguage(java.lang.String[]) -> setContentLanguage
    java.lang.String getDescription() -> getDescription
    void setDescription(java.lang.String) -> setDescription
    void setDescription(java.lang.String,java.lang.String) -> setDescription
    java.lang.String getFileName() -> getFileName
    void setFileName(java.lang.String) -> setFileName
    java.io.InputStream getInputStream() -> getInputStream
    java.io.InputStream getContentStream() -> getContentStream
    java.io.InputStream getRawInputStream() -> getRawInputStream
    javax.activation.DataHandler getDataHandler() -> getDataHandler
    java.lang.Object getContent() -> getContent
    void setDataHandler(javax.activation.DataHandler) -> setDataHandler
    void setContent(java.lang.Object,java.lang.String) -> setContent
    void setText(java.lang.String) -> setText
    void setText(java.lang.String,java.lang.String) -> setText
    void setText(java.lang.String,java.lang.String,java.lang.String) -> setText
    void setContent(javax.mail.Multipart) -> setContent
    void attachFile(java.io.File) -> attachFile
    void attachFile(java.lang.String) -> attachFile
    void saveFile(java.io.File) -> saveFile
    void saveFile(java.lang.String) -> saveFile
    void writeTo(java.io.OutputStream) -> writeTo
    java.lang.String[] getHeader(java.lang.String) -> getHeader
    java.lang.String getHeader(java.lang.String,java.lang.String) -> getHeader
    void setHeader(java.lang.String,java.lang.String) -> setHeader
    void addHeader(java.lang.String,java.lang.String) -> addHeader
    void removeHeader(java.lang.String) -> removeHeader
    java.util.Enumeration getAllHeaders() -> getAllHeaders
    java.util.Enumeration getMatchingHeaders(java.lang.String[]) -> getMatchingHeaders
    java.util.Enumeration getNonMatchingHeaders(java.lang.String[]) -> getNonMatchingHeaders
    void addHeaderLine(java.lang.String) -> addHeaderLine
    java.util.Enumeration getAllHeaderLines() -> getAllHeaderLines
    java.util.Enumeration getMatchingHeaderLines(java.lang.String[]) -> getMatchingHeaderLines
    java.util.Enumeration getNonMatchingHeaderLines(java.lang.String[]) -> getNonMatchingHeaderLines
    void updateHeaders() -> updateHeaders
    boolean isMimeType(javax.mail.internet.MimePart,java.lang.String) -> isMimeType
    void setText(javax.mail.internet.MimePart,java.lang.String,java.lang.String,java.lang.String) -> setText
    java.lang.String getDisposition(javax.mail.internet.MimePart) -> getDisposition
    void setDisposition(javax.mail.internet.MimePart,java.lang.String) -> setDisposition
    java.lang.String getDescription(javax.mail.internet.MimePart) -> getDescription
    void setDescription(javax.mail.internet.MimePart,java.lang.String,java.lang.String) -> setDescription
    java.lang.String getFileName(javax.mail.internet.MimePart) -> getFileName
    void setFileName(javax.mail.internet.MimePart,java.lang.String) -> setFileName
    java.lang.String[] getContentLanguage(javax.mail.internet.MimePart) -> getContentLanguage
    void setContentLanguage(javax.mail.internet.MimePart,java.lang.String[]) -> setContentLanguage
    java.lang.String getEncoding(javax.mail.internet.MimePart) -> getEncoding
    void setEncoding(javax.mail.internet.MimePart,java.lang.String) -> setEncoding
    void updateHeaders(javax.mail.internet.MimePart) -> updateHeaders
    void invalidateContentHeaders(javax.mail.internet.MimePart) -> invalidateContentHeaders
    void writeTo(javax.mail.internet.MimePart,java.io.OutputStream,java.lang.String[]) -> writeTo
javax.mail.internet.MimeMessage -> javax.mail.internet.MimeMessage:
    javax.activation.DataHandler dh -> dh
    byte[] content -> content
    java.io.InputStream contentStream -> contentStream
    javax.mail.internet.InternetHeaders headers -> headers
    javax.mail.Flags flags -> flags
    boolean modified -> modified
    boolean saved -> saved
    java.lang.Object cachedContent -> cachedContent
    javax.mail.internet.MailDateFormat mailDateFormat -> mailDateFormat
    boolean strict -> strict
    javax.mail.Flags answeredFlag -> answeredFlag
    void initStrict() -> initStrict
    void parse(java.io.InputStream) -> parse
    javax.mail.Address[] getFrom() -> getFrom
    void setFrom(javax.mail.Address) -> setFrom
    void setFrom() -> setFrom
    void addFrom(javax.mail.Address[]) -> addFrom
    javax.mail.Address getSender() -> getSender
    void setSender(javax.mail.Address) -> setSender
    javax.mail.Address[] getRecipients(javax.mail.Message$RecipientType) -> getRecipients
    javax.mail.Address[] getAllRecipients() -> getAllRecipients
    void setRecipients(javax.mail.Message$RecipientType,javax.mail.Address[]) -> setRecipients
    void setRecipients(javax.mail.Message$RecipientType,java.lang.String) -> setRecipients
    void addRecipients(javax.mail.Message$RecipientType,javax.mail.Address[]) -> addRecipients
    void addRecipients(javax.mail.Message$RecipientType,java.lang.String) -> addRecipients
    javax.mail.Address[] getReplyTo() -> getReplyTo
    void setReplyTo(javax.mail.Address[]) -> setReplyTo
    javax.mail.Address[] getAddressHeader(java.lang.String) -> getAddressHeader
    void setAddressHeader(java.lang.String,javax.mail.Address[]) -> setAddressHeader
    void addAddressHeader(java.lang.String,javax.mail.Address[]) -> addAddressHeader
    java.lang.String getSubject() -> getSubject
    void setSubject(java.lang.String) -> setSubject
    void setSubject(java.lang.String,java.lang.String) -> setSubject
    java.util.Date getSentDate() -> getSentDate
    void setSentDate(java.util.Date) -> setSentDate
    java.util.Date getReceivedDate() -> getReceivedDate
    int getSize() -> getSize
    int getLineCount() -> getLineCount
    java.lang.String getContentType() -> getContentType
    boolean isMimeType(java.lang.String) -> isMimeType
    java.lang.String getDisposition() -> getDisposition
    void setDisposition(java.lang.String) -> setDisposition
    java.lang.String getEncoding() -> getEncoding
    java.lang.String getContentID() -> getContentID
    void setContentID(java.lang.String) -> setContentID
    java.lang.String getContentMD5() -> getContentMD5
    void setContentMD5(java.lang.String) -> setContentMD5
    java.lang.String getDescription() -> getDescription
    void setDescription(java.lang.String) -> setDescription
    void setDescription(java.lang.String,java.lang.String) -> setDescription
    java.lang.String[] getContentLanguage() -> getContentLanguage
    void setContentLanguage(java.lang.String[]) -> setContentLanguage
    java.lang.String getMessageID() -> getMessageID
    java.lang.String getFileName() -> getFileName
    void setFileName(java.lang.String) -> setFileName
    java.lang.String getHeaderName(javax.mail.Message$RecipientType) -> getHeaderName
    java.io.InputStream getInputStream() -> getInputStream
    java.io.InputStream getContentStream() -> getContentStream
    java.io.InputStream getRawInputStream() -> getRawInputStream
    javax.activation.DataHandler getDataHandler() -> getDataHandler
    java.lang.Object getContent() -> getContent
    void setDataHandler(javax.activation.DataHandler) -> setDataHandler
    void setContent(java.lang.Object,java.lang.String) -> setContent
    void setText(java.lang.String) -> setText
    void setText(java.lang.String,java.lang.String) -> setText
    void setText(java.lang.String,java.lang.String,java.lang.String) -> setText
    void setContent(javax.mail.Multipart) -> setContent
    javax.mail.Message reply(boolean) -> reply
    javax.mail.Address[] eliminateDuplicates(java.util.Vector,javax.mail.Address[]) -> eliminateDuplicates
    void writeTo(java.io.OutputStream) -> writeTo
    void writeTo(java.io.OutputStream,java.lang.String[]) -> writeTo
    java.lang.String[] getHeader(java.lang.String) -> getHeader
    java.lang.String getHeader(java.lang.String,java.lang.String) -> getHeader
    void setHeader(java.lang.String,java.lang.String) -> setHeader
    void addHeader(java.lang.String,java.lang.String) -> addHeader
    void removeHeader(java.lang.String) -> removeHeader
    java.util.Enumeration getAllHeaders() -> getAllHeaders
    java.util.Enumeration getMatchingHeaders(java.lang.String[]) -> getMatchingHeaders
    java.util.Enumeration getNonMatchingHeaders(java.lang.String[]) -> getNonMatchingHeaders
    void addHeaderLine(java.lang.String) -> addHeaderLine
    java.util.Enumeration getAllHeaderLines() -> getAllHeaderLines
    java.util.Enumeration getMatchingHeaderLines(java.lang.String[]) -> getMatchingHeaderLines
    java.util.Enumeration getNonMatchingHeaderLines(java.lang.String[]) -> getNonMatchingHeaderLines
    javax.mail.Flags getFlags() -> getFlags
    boolean isSet(javax.mail.Flags$Flag) -> isSet
    void setFlags(javax.mail.Flags,boolean) -> setFlags
    void saveChanges() -> saveChanges
    void updateMessageID() -> updateMessageID
    void updateHeaders() -> updateHeaders
    javax.mail.internet.InternetHeaders createInternetHeaders(java.io.InputStream) -> createInternetHeaders
    javax.mail.internet.MimeMessage createMimeMessage(javax.mail.Session) -> createMimeMessage
javax.mail.internet.MimeMessage$RecipientType -> javax.mail.internet.MimeMessage$RecipientType:
    long serialVersionUID -> serialVersionUID
    javax.mail.internet.MimeMessage$RecipientType NEWSGROUPS -> NEWSGROUPS
    java.lang.Object readResolve() -> readResolve
javax.mail.internet.MimeMultipart -> javax.mail.internet.MimeMultipart:
    boolean ignoreMissingEndBoundary -> ignoreMissingEndBoundary
    boolean ignoreMissingBoundaryParameter -> ignoreMissingBoundaryParameter
    boolean bmparse -> bmparse
    javax.activation.DataSource ds -> ds
    boolean parsed -> parsed
    boolean complete -> complete
    java.lang.String preamble -> preamble
    void setSubType(java.lang.String) -> setSubType
    int getCount() -> getCount
    javax.mail.BodyPart getBodyPart(int) -> getBodyPart
    javax.mail.BodyPart getBodyPart(java.lang.String) -> getBodyPart
    boolean removeBodyPart(javax.mail.BodyPart) -> removeBodyPart
    void removeBodyPart(int) -> removeBodyPart
    void addBodyPart(javax.mail.BodyPart) -> addBodyPart
    void addBodyPart(javax.mail.BodyPart,int) -> addBodyPart
    boolean isComplete() -> isComplete
    java.lang.String getPreamble() -> getPreamble
    void setPreamble(java.lang.String) -> setPreamble
    void updateHeaders() -> updateHeaders
    void writeTo(java.io.OutputStream) -> writeTo
    void parse() -> parse
    void parsebm() -> parsebm
    int readFully(java.io.InputStream,byte[],int,int) -> readFully
    void skipFully(java.io.InputStream,long) -> skipFully
    javax.mail.internet.InternetHeaders createInternetHeaders(java.io.InputStream) -> createInternetHeaders
    javax.mail.internet.MimeBodyPart createMimeBodyPart(javax.mail.internet.InternetHeaders,byte[]) -> createMimeBodyPart
    javax.mail.internet.MimeBodyPart createMimeBodyPart(java.io.InputStream) -> createMimeBodyPart
javax.mail.internet.MimePart -> javax.mail.internet.MimePart:
    java.lang.String getHeader(java.lang.String,java.lang.String) -> getHeader
    void addHeaderLine(java.lang.String) -> addHeaderLine
    java.util.Enumeration getAllHeaderLines() -> getAllHeaderLines
    java.util.Enumeration getMatchingHeaderLines(java.lang.String[]) -> getMatchingHeaderLines
    java.util.Enumeration getNonMatchingHeaderLines(java.lang.String[]) -> getNonMatchingHeaderLines
    java.lang.String getEncoding() -> getEncoding
    java.lang.String getContentID() -> getContentID
    java.lang.String getContentMD5() -> getContentMD5
    void setContentMD5(java.lang.String) -> setContentMD5
    java.lang.String[] getContentLanguage() -> getContentLanguage
    void setContentLanguage(java.lang.String[]) -> setContentLanguage
    void setText(java.lang.String) -> setText
    void setText(java.lang.String,java.lang.String) -> setText
    void setText(java.lang.String,java.lang.String,java.lang.String) -> setText
javax.mail.internet.MimePartDataSource -> javax.mail.internet.MimePartDataSource:
    javax.mail.internet.MimePart part -> part
    javax.mail.MessageContext context -> context
    boolean ignoreMultipartEncoding -> ignoreMultipartEncoding
    java.io.InputStream getInputStream() -> getInputStream
    java.lang.String restrictEncoding(java.lang.String,javax.mail.internet.MimePart) -> restrictEncoding
    java.io.OutputStream getOutputStream() -> getOutputStream
    java.lang.String getContentType() -> getContentType
    java.lang.String getName() -> getName
    javax.mail.MessageContext getMessageContext() -> getMessageContext
javax.mail.internet.MimeUtility -> javax.mail.internet.MimeUtility:
    int ALL -> ALL
    boolean decodeStrict -> decodeStrict
    boolean encodeEolStrict -> encodeEolStrict
    boolean foldEncodedWords -> foldEncodedWords
    boolean foldText -> foldText
    java.lang.String defaultJavaCharset -> defaultJavaCharset
    java.lang.String defaultMIMECharset -> defaultMIMECharset
    java.util.Hashtable mime2java -> mime2java
    java.util.Hashtable java2mime -> java2mime
    int ALL_ASCII -> ALL_ASCII
    int MOSTLY_ASCII -> MOSTLY_ASCII
    int MOSTLY_NONASCII -> MOSTLY_NONASCII
    java.lang.String getEncoding(javax.activation.DataSource) -> getEncoding
    java.lang.String getEncoding(javax.activation.DataHandler) -> getEncoding
    java.io.InputStream decode(java.io.InputStream,java.lang.String) -> decode
    java.io.OutputStream encode(java.io.OutputStream,java.lang.String) -> encode
    java.io.OutputStream encode(java.io.OutputStream,java.lang.String,java.lang.String) -> encode
    java.lang.String encodeText(java.lang.String) -> encodeText
    java.lang.String encodeText(java.lang.String,java.lang.String,java.lang.String) -> encodeText
    java.lang.String decodeText(java.lang.String) -> decodeText
    java.lang.String encodeWord(java.lang.String) -> encodeWord
    java.lang.String encodeWord(java.lang.String,java.lang.String,java.lang.String) -> encodeWord
    java.lang.String encodeWord(java.lang.String,java.lang.String,java.lang.String,boolean) -> encodeWord
    void doEncode(java.lang.String,boolean,java.lang.String,int,java.lang.String,boolean,boolean,java.lang.StringBuffer) -> doEncode
    java.lang.String decodeWord(java.lang.String) -> decodeWord
    java.lang.String decodeInnerWords(java.lang.String) -> decodeInnerWords
    java.lang.String quote(java.lang.String,java.lang.String) -> quote
    java.lang.String fold(int,java.lang.String) -> fold
    java.lang.String unfold(java.lang.String) -> unfold
    int indexOfAny(java.lang.String,java.lang.String) -> indexOfAny
    int indexOfAny(java.lang.String,java.lang.String,int) -> indexOfAny
    java.lang.String javaCharset(java.lang.String) -> javaCharset
    java.lang.String mimeCharset(java.lang.String) -> mimeCharset
    java.lang.String getDefaultJavaCharset() -> getDefaultJavaCharset
    java.lang.String getDefaultMIMECharset() -> getDefaultMIMECharset
    void loadMappings(com.sun.mail.util.LineInputStream,java.util.Hashtable) -> loadMappings
    int checkAscii(java.lang.String) -> checkAscii
    int checkAscii(byte[]) -> checkAscii
    int checkAscii(java.io.InputStream,int,boolean) -> checkAscii
    boolean nonascii(int) -> nonascii
javax.mail.internet.MimeUtility$1NullInputStream -> javax.mail.internet.MimeUtility$1NullInputStream:
    int read() -> read
javax.mail.internet.NewsAddress -> javax.mail.internet.NewsAddress:
    java.lang.String newsgroup -> newsgroup
    java.lang.String host -> host
    long serialVersionUID -> serialVersionUID
    java.lang.String getType() -> getType
    void setNewsgroup(java.lang.String) -> setNewsgroup
    java.lang.String getNewsgroup() -> getNewsgroup
    void setHost(java.lang.String) -> setHost
    java.lang.String getHost() -> getHost
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString(javax.mail.Address[]) -> toString
    javax.mail.internet.NewsAddress[] parse(java.lang.String) -> parse
javax.mail.internet.ParameterList -> javax.mail.internet.ParameterList:
    java.util.Map list -> list
    java.util.Set multisegmentNames -> multisegmentNames
    java.util.Map slist -> slist
    java.lang.String lastName -> lastName
    boolean encodeParameters -> encodeParameters
    boolean decodeParameters -> decodeParameters
    boolean decodeParametersStrict -> decodeParametersStrict
    boolean applehack -> applehack
    char[] hex -> hex
    void putEncodedName(java.lang.String,java.lang.String) -> putEncodedName
    void combineMultisegmentNames(boolean) -> combineMultisegmentNames
    int size() -> size
    java.lang.String get(java.lang.String) -> get
    void set(java.lang.String,java.lang.String) -> set
    void set(java.lang.String,java.lang.String,java.lang.String) -> set
    void remove(java.lang.String) -> remove
    java.util.Enumeration getNames() -> getNames
    java.lang.String toString() -> toString
    java.lang.String toString(int) -> toString
    java.lang.String quote(java.lang.String) -> quote
    javax.mail.internet.ParameterList$Value encodeValue(java.lang.String,java.lang.String) -> encodeValue
    javax.mail.internet.ParameterList$Value decodeValue(java.lang.String) -> decodeValue
    java.lang.String decodeBytes(java.lang.String,java.lang.String) -> decodeBytes
    java.lang.String access$0(java.lang.String) -> access$0
javax.mail.internet.ParameterList$MultiValue -> javax.mail.internet.ParameterList$MultiValue:
    java.lang.String value -> value
javax.mail.internet.ParameterList$ParamEnum -> javax.mail.internet.ParameterList$ParamEnum:
    java.util.Iterator it -> it
    boolean hasMoreElements() -> hasMoreElements
    java.lang.Object nextElement() -> nextElement
javax.mail.internet.ParameterList$ToStringBuffer -> javax.mail.internet.ParameterList$ToStringBuffer:
    int used -> used
    java.lang.StringBuffer sb -> sb
    void addNV(java.lang.String,java.lang.String) -> addNV
    java.lang.String toString() -> toString
javax.mail.internet.ParameterList$Value -> javax.mail.internet.ParameterList$Value:
    java.lang.String value -> value
    java.lang.String charset -> charset
    java.lang.String encodedValue -> encodedValue
javax.mail.internet.ParseException -> javax.mail.internet.ParseException:
    long serialVersionUID -> serialVersionUID
javax.mail.internet.PreencodedMimeBodyPart -> javax.mail.internet.PreencodedMimeBodyPart:
    java.lang.String encoding -> encoding
    java.lang.String getEncoding() -> getEncoding
    void writeTo(java.io.OutputStream) -> writeTo
    void updateHeaders() -> updateHeaders
javax.mail.internet.SharedInputStream -> javax.mail.internet.SharedInputStream:
    long getPosition() -> getPosition
    java.io.InputStream newStream(long,long) -> newStream
javax.mail.internet.UniqueValue -> javax.mail.internet.UniqueValue:
    int id -> id
    java.lang.String getUniqueBoundaryValue() -> getUniqueBoundaryValue
    java.lang.String getUniqueMessageIDValue(javax.mail.Session) -> getUniqueMessageIDValue
    int getUniqueId() -> getUniqueId
javax.mail.search.AddressStringTerm -> javax.mail.search.AddressStringTerm:
    long serialVersionUID -> serialVersionUID
    boolean match(javax.mail.Address) -> match
    boolean equals(java.lang.Object) -> equals
javax.mail.search.AddressTerm -> javax.mail.search.AddressTerm:
    javax.mail.Address address -> address
    long serialVersionUID -> serialVersionUID
    javax.mail.Address getAddress() -> getAddress
    boolean match(javax.mail.Address) -> match
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
javax.mail.search.AndTerm -> javax.mail.search.AndTerm:
    javax.mail.search.SearchTerm[] terms -> terms
    long serialVersionUID -> serialVersionUID
    javax.mail.search.SearchTerm[] getTerms() -> getTerms
    boolean match(javax.mail.Message) -> match
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
javax.mail.search.BodyTerm -> javax.mail.search.BodyTerm:
    long serialVersionUID -> serialVersionUID
    boolean match(javax.mail.Message) -> match
    boolean matchPart(javax.mail.Part) -> matchPart
    boolean equals(java.lang.Object) -> equals
javax.mail.search.ComparisonTerm -> javax.mail.search.ComparisonTerm:
    int LE -> LE
    int LT -> LT
    int EQ -> EQ
    int NE -> NE
    int GT -> GT
    int GE -> GE
    int comparison -> comparison
    long serialVersionUID -> serialVersionUID
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
javax.mail.search.DateTerm -> javax.mail.search.DateTerm:
    java.util.Date date -> date
    long serialVersionUID -> serialVersionUID
    java.util.Date getDate() -> getDate
    int getComparison() -> getComparison
    boolean match(java.util.Date) -> match
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
javax.mail.search.FlagTerm -> javax.mail.search.FlagTerm:
    boolean set -> set
    javax.mail.Flags flags -> flags
    long serialVersionUID -> serialVersionUID
    javax.mail.Flags getFlags() -> getFlags
    boolean getTestSet() -> getTestSet
    boolean match(javax.mail.Message) -> match
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
javax.mail.search.FromStringTerm -> javax.mail.search.FromStringTerm:
    long serialVersionUID -> serialVersionUID
    boolean match(javax.mail.Message) -> match
    boolean equals(java.lang.Object) -> equals
javax.mail.search.FromTerm -> javax.mail.search.FromTerm:
    long serialVersionUID -> serialVersionUID
    boolean match(javax.mail.Message) -> match
    boolean equals(java.lang.Object) -> equals
javax.mail.search.HeaderTerm -> javax.mail.search.HeaderTerm:
    java.lang.String headerName -> headerName
    long serialVersionUID -> serialVersionUID
    java.lang.String getHeaderName() -> getHeaderName
    boolean match(javax.mail.Message) -> match
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
javax.mail.search.IntegerComparisonTerm -> javax.mail.search.IntegerComparisonTerm:
    int number -> number
    long serialVersionUID -> serialVersionUID
    int getNumber() -> getNumber
    int getComparison() -> getComparison
    boolean match(int) -> match
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
javax.mail.search.MessageIDTerm -> javax.mail.search.MessageIDTerm:
    long serialVersionUID -> serialVersionUID
    boolean match(javax.mail.Message) -> match
    boolean equals(java.lang.Object) -> equals
javax.mail.search.MessageNumberTerm -> javax.mail.search.MessageNumberTerm:
    long serialVersionUID -> serialVersionUID
    boolean match(javax.mail.Message) -> match
    boolean equals(java.lang.Object) -> equals
javax.mail.search.NotTerm -> javax.mail.search.NotTerm:
    javax.mail.search.SearchTerm term -> term
    long serialVersionUID -> serialVersionUID
    javax.mail.search.SearchTerm getTerm() -> getTerm
    boolean match(javax.mail.Message) -> match
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
javax.mail.search.OrTerm -> javax.mail.search.OrTerm:
    javax.mail.search.SearchTerm[] terms -> terms
    long serialVersionUID -> serialVersionUID
    javax.mail.search.SearchTerm[] getTerms() -> getTerms
    boolean match(javax.mail.Message) -> match
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
javax.mail.search.ReceivedDateTerm -> javax.mail.search.ReceivedDateTerm:
    long serialVersionUID -> serialVersionUID
    boolean match(javax.mail.Message) -> match
    boolean equals(java.lang.Object) -> equals
javax.mail.search.RecipientStringTerm -> javax.mail.search.RecipientStringTerm:
    javax.mail.Message$RecipientType type -> type
    long serialVersionUID -> serialVersionUID
    javax.mail.Message$RecipientType getRecipientType() -> getRecipientType
    boolean match(javax.mail.Message) -> match
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
javax.mail.search.RecipientTerm -> javax.mail.search.RecipientTerm:
    javax.mail.Message$RecipientType type -> type
    long serialVersionUID -> serialVersionUID
    javax.mail.Message$RecipientType getRecipientType() -> getRecipientType
    boolean match(javax.mail.Message) -> match
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
javax.mail.search.SearchException -> javax.mail.search.SearchException:
    long serialVersionUID -> serialVersionUID
javax.mail.search.SearchTerm -> javax.mail.search.SearchTerm:
    long serialVersionUID -> serialVersionUID
    boolean match(javax.mail.Message) -> match
javax.mail.search.SentDateTerm -> javax.mail.search.SentDateTerm:
    long serialVersionUID -> serialVersionUID
    boolean match(javax.mail.Message) -> match
    boolean equals(java.lang.Object) -> equals
javax.mail.search.SizeTerm -> javax.mail.search.SizeTerm:
    long serialVersionUID -> serialVersionUID
    boolean match(javax.mail.Message) -> match
    boolean equals(java.lang.Object) -> equals
javax.mail.search.StringTerm -> javax.mail.search.StringTerm:
    java.lang.String pattern -> pattern
    boolean ignoreCase -> ignoreCase
    long serialVersionUID -> serialVersionUID
    java.lang.String getPattern() -> getPattern
    boolean getIgnoreCase() -> getIgnoreCase
    boolean match(java.lang.String) -> match
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
javax.mail.search.SubjectTerm -> javax.mail.search.SubjectTerm:
    long serialVersionUID -> serialVersionUID
    boolean match(javax.mail.Message) -> match
    boolean equals(java.lang.Object) -> equals
javax.mail.util.ByteArrayDataSource -> javax.mail.util.ByteArrayDataSource:
    byte[] data -> data
    int len -> len
    java.lang.String type -> type
    java.lang.String name -> name
    java.io.InputStream getInputStream() -> getInputStream
    java.io.OutputStream getOutputStream() -> getOutputStream
    java.lang.String getContentType() -> getContentType
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
javax.mail.util.ByteArrayDataSource$DSByteArrayOutputStream -> javax.mail.util.ByteArrayDataSource$DSByteArrayOutputStream:
    byte[] getBuf() -> getBuf
    int getCount() -> getCount
javax.mail.util.SharedByteArrayInputStream -> javax.mail.util.SharedByteArrayInputStream:
    int start -> start
    long getPosition() -> getPosition
    java.io.InputStream newStream(long,long) -> newStream
javax.mail.util.SharedFileInputStream -> javax.mail.util.SharedFileInputStream:
    int defaultBufferSize -> defaultBufferSize
    java.io.RandomAccessFile in -> in
    int bufsize -> bufsize
    long bufpos -> bufpos
    long start -> start
    long datalen -> datalen
    boolean master -> master
    javax.mail.util.SharedFileInputStream$SharedFile sf -> sf
    void ensureOpen() -> ensureOpen
    void init(javax.mail.util.SharedFileInputStream$SharedFile,int) -> init
    void fill() -> fill
    int read() -> read
    int read1(byte[],int,int) -> read1
    int read(byte[],int,int) -> read
    long skip(long) -> skip
    int available() -> available
    int in_available() -> in_available
    void mark(int) -> mark
    void reset() -> reset
    boolean markSupported() -> markSupported
    void close() -> close
    long getPosition() -> getPosition
    java.io.InputStream newStream(long,long) -> newStream
    void finalize() -> finalize
javax.mail.util.SharedFileInputStream$SharedFile -> javax.mail.util.SharedFileInputStream$SharedFile:
    int cnt -> cnt
    java.io.RandomAccessFile in -> in
    java.io.RandomAccessFile open() -> open
    void close() -> close
    void forceClose() -> forceClose
    void finalize() -> finalize
myjava.awt.datatransfer.DataFlavor -> myjava.awt.datatransfer.DataFlavor:
    long serialVersionUID -> serialVersionUID
    myjava.awt.datatransfer.DataFlavor plainTextFlavor -> plainTextFlavor
    myjava.awt.datatransfer.DataFlavor stringFlavor -> stringFlavor
    myjava.awt.datatransfer.DataFlavor javaFileListFlavor -> javaFileListFlavor
    java.lang.String javaJVMLocalObjectMimeType -> javaJVMLocalObjectMimeType
    java.lang.String javaRemoteObjectMimeType -> javaRemoteObjectMimeType
    java.lang.String javaSerializedObjectMimeType -> javaSerializedObjectMimeType
    java.lang.String[] sortedTextFlavors -> sortedTextFlavors
    myjava.awt.datatransfer.DataFlavor plainUnicodeFlavor -> plainUnicodeFlavor
    java.lang.String humanPresentableName -> humanPresentableName
    java.lang.Class representationClass -> representationClass
    myjava.awt.datatransfer.MimeTypeProcessor$MimeType mimeInfo -> mimeInfo
    myjava.awt.datatransfer.DataFlavor getTextPlainUnicodeFlavor() -> getTextPlainUnicodeFlavor
    java.lang.Class tryToLoadClass(java.lang.String,java.lang.ClassLoader) -> tryToLoadClass
    boolean isCharsetSupported(java.lang.String) -> isCharsetSupported
    void init(java.lang.String,java.lang.String,java.lang.ClassLoader) -> init
    java.lang.String getCharset() -> getCharset
    boolean isCharsetRequired() -> isCharsetRequired
    boolean isCharsetRedundant() -> isCharsetRedundant
    myjava.awt.datatransfer.MimeTypeProcessor$MimeType getMimeInfo() -> getMimeInfo
    java.lang.String getPrimaryType() -> getPrimaryType
    java.lang.String getSubType() -> getSubType
    java.lang.String getMimeType() -> getMimeType
    java.lang.String getParameter(java.lang.String) -> getParameter
    java.lang.String getHumanPresentableName() -> getHumanPresentableName
    void setHumanPresentableName(java.lang.String) -> setHumanPresentableName
    java.lang.Class getRepresentationClass() -> getRepresentationClass
    java.lang.Class getDefaultRepresentationClass() -> getDefaultRepresentationClass
    java.lang.String getDefaultRepresentationClassAsString() -> getDefaultRepresentationClassAsString
    boolean isRepresentationClassSerializable() -> isRepresentationClassSerializable
    boolean isRepresentationClassRemote() -> isRepresentationClassRemote
    boolean isRepresentationClassReader() -> isRepresentationClassReader
    boolean isRepresentationClassInputStream() -> isRepresentationClassInputStream
    boolean isRepresentationClassCharBuffer() -> isRepresentationClassCharBuffer
    boolean isRepresentationClassByteBuffer() -> isRepresentationClassByteBuffer
    java.lang.String normalizeMimeTypeParameter(java.lang.String,java.lang.String) -> normalizeMimeTypeParameter
    java.lang.String normalizeMimeType(java.lang.String) -> normalizeMimeType
    boolean isMimeTypeEqual(myjava.awt.datatransfer.DataFlavor) -> isMimeTypeEqual
    boolean isMimeTypeEqual(java.lang.String) -> isMimeTypeEqual
    void writeExternal(java.io.ObjectOutput) -> writeExternal
    void readExternal(java.io.ObjectInput) -> readExternal
    java.lang.Object clone() -> clone
    java.lang.String toString() -> toString
    boolean isMimeTypeSerializedObject() -> isMimeTypeSerializedObject
    boolean equals(java.lang.Object) -> equals
    boolean equals(myjava.awt.datatransfer.DataFlavor) -> equals
    boolean equals(java.lang.String) -> equals
    boolean match(myjava.awt.datatransfer.DataFlavor) -> match
    int hashCode() -> hashCode
    java.lang.String getKeyInfo() -> getKeyInfo
    boolean isFlavorSerializedObjectType() -> isFlavorSerializedObjectType
    boolean isFlavorRemoteObjectType() -> isFlavorRemoteObjectType
    boolean isFlavorJavaFileListType() -> isFlavorJavaFileListType
    boolean isFlavorTextType() -> isFlavorTextType
    java.io.Reader getReaderForText(myjava.awt.datatransfer.Transferable) -> getReaderForText
    myjava.awt.datatransfer.DataFlavor selectBestTextFlavor(myjava.awt.datatransfer.DataFlavor[]) -> selectBestTextFlavor
    myjava.awt.datatransfer.DataFlavor selectBestFlavorWCharset(java.util.List) -> selectBestFlavorWCharset
    myjava.awt.datatransfer.DataFlavor selectBestByCharset(java.util.List) -> selectBestByCharset
    java.util.List selectBestByAlphabet(java.util.List) -> selectBestByAlphabet
    java.util.List getFlavors(java.util.List,java.lang.String[]) -> getFlavors
    myjava.awt.datatransfer.DataFlavor selectBestFlavorWOCharset(java.util.List) -> selectBestFlavorWOCharset
    java.util.List getFlavors(java.util.List,java.lang.Class) -> getFlavors
    java.util.List sortTextFlavorsByType(java.util.List) -> sortTextFlavorsByType
    java.util.List fetchTextFlavors(java.util.List,java.lang.String) -> fetchTextFlavors
    boolean isUnicodeFlavor() -> isUnicodeFlavor
    boolean isByteCodeFlavor() -> isByteCodeFlavor
myjava.awt.datatransfer.MimeTypeProcessor -> myjava.awt.datatransfer.MimeTypeProcessor:
    myjava.awt.datatransfer.MimeTypeProcessor instance -> instance
    myjava.awt.datatransfer.MimeTypeProcessor$MimeType parse(java.lang.String) -> parse
    java.lang.String assemble(myjava.awt.datatransfer.MimeTypeProcessor$MimeType) -> assemble
    void retrieveType(java.lang.String,myjava.awt.datatransfer.MimeTypeProcessor$MimeType,myjava.awt.datatransfer.MimeTypeProcessor$StringPosition) -> retrieveType
    void retrieveParams(java.lang.String,myjava.awt.datatransfer.MimeTypeProcessor$MimeType,myjava.awt.datatransfer.MimeTypeProcessor$StringPosition) -> retrieveParams
    void retrieveParam(java.lang.String,myjava.awt.datatransfer.MimeTypeProcessor$MimeType,myjava.awt.datatransfer.MimeTypeProcessor$StringPosition) -> retrieveParam
    java.lang.String retrieveQuoted(java.lang.String,myjava.awt.datatransfer.MimeTypeProcessor$StringPosition) -> retrieveQuoted
    java.lang.String retrieveToken(java.lang.String,myjava.awt.datatransfer.MimeTypeProcessor$StringPosition) -> retrieveToken
    int getNextMeaningfulIndex(java.lang.String,int) -> getNextMeaningfulIndex
    boolean isTSpecialChar(char) -> isTSpecialChar
    boolean isMeaningfulChar(char) -> isMeaningfulChar
myjava.awt.datatransfer.MimeTypeProcessor$MimeType -> myjava.awt.datatransfer.MimeTypeProcessor$MimeType:
    long serialVersionUID -> serialVersionUID
    java.lang.String primaryType -> primaryType
    java.lang.String subType -> subType
    java.util.Hashtable parameters -> parameters
    java.util.Hashtable systemParameters -> systemParameters
    boolean equals(myjava.awt.datatransfer.MimeTypeProcessor$MimeType) -> equals
    java.lang.String getPrimaryType() -> getPrimaryType
    java.lang.String getSubType() -> getSubType
    java.lang.String getFullType() -> getFullType
    java.lang.String getParameter(java.lang.String) -> getParameter
    void addParameter(java.lang.String,java.lang.String) -> addParameter
    void removeParameter(java.lang.String) -> removeParameter
    java.lang.Object getSystemParameter(java.lang.String) -> getSystemParameter
    void addSystemParameter(java.lang.String,java.lang.Object) -> addSystemParameter
    java.lang.Object clone() -> clone
    java.util.Hashtable access$0(myjava.awt.datatransfer.MimeTypeProcessor$MimeType) -> access$0
    void access$1(myjava.awt.datatransfer.MimeTypeProcessor$MimeType,java.lang.String) -> access$1
    void access$2(myjava.awt.datatransfer.MimeTypeProcessor$MimeType,java.lang.String) -> access$2
    void access$3(myjava.awt.datatransfer.MimeTypeProcessor$MimeType,java.util.Hashtable) -> access$3
    void access$4(myjava.awt.datatransfer.MimeTypeProcessor$MimeType,java.util.Hashtable) -> access$4
myjava.awt.datatransfer.MimeTypeProcessor$StringPosition -> myjava.awt.datatransfer.MimeTypeProcessor$StringPosition:
    int i -> i
myjava.awt.datatransfer.Transferable -> myjava.awt.datatransfer.Transferable:
    java.lang.Object getTransferData(myjava.awt.datatransfer.DataFlavor) -> getTransferData
    boolean isDataFlavorSupported(myjava.awt.datatransfer.DataFlavor) -> isDataFlavorSupported
    myjava.awt.datatransfer.DataFlavor[] getTransferDataFlavors() -> getTransferDataFlavors
myjava.awt.datatransfer.UnsupportedFlavorException -> myjava.awt.datatransfer.UnsupportedFlavorException:
    long serialVersionUID -> serialVersionUID
org.apache.harmony.awt.ContextStorage -> org.apache.harmony.awt.ContextStorage:
    boolean shutdownPending -> shutdownPending
    org.apache.harmony.awt.ContextStorage globalContext -> globalContext
    java.awt.Toolkit toolkit -> toolkit
    org.apache.harmony.awt.datatransfer.DTK dtk -> dtk
    java.awt.GraphicsEnvironment graphicsEnvironment -> graphicsEnvironment
    java.lang.Object contextLock -> contextLock
    void setDefaultToolkit(java.awt.Toolkit) -> setDefaultToolkit
    java.awt.Toolkit getDefaultToolkit() -> getDefaultToolkit
    void setDTK(org.apache.harmony.awt.datatransfer.DTK) -> setDTK
    org.apache.harmony.awt.datatransfer.DTK getDTK() -> getDTK
    java.lang.Object getContextLock() -> getContextLock
    java.awt.GraphicsEnvironment getGraphicsEnvironment() -> getGraphicsEnvironment
    void setGraphicsEnvironment(java.awt.GraphicsEnvironment) -> setGraphicsEnvironment
    org.apache.harmony.awt.ContextStorage getCurrentContext() -> getCurrentContext
    boolean shutdownPending() -> shutdownPending
    void shutdown() -> shutdown
org.apache.harmony.awt.ContextStorage$ContextLock -> org.apache.harmony.awt.ContextStorage$ContextLock:
    org.apache.harmony.awt.ContextStorage this$0 -> this$0
org.apache.harmony.awt.datatransfer.DTK -> org.apache.harmony.awt.datatransfer.DTK:
    org.apache.harmony.awt.datatransfer.NativeClipboard nativeClipboard -> nativeClipboard
    org.apache.harmony.awt.datatransfer.NativeClipboard nativeSelection -> nativeSelection
    java.awt.datatransfer.SystemFlavorMap systemFlavorMap -> systemFlavorMap
    org.apache.harmony.awt.datatransfer.DataTransferThread dataTransferThread -> dataTransferThread
    org.apache.harmony.awt.datatransfer.DTK getDTK() -> getDTK
    java.awt.datatransfer.SystemFlavorMap getSystemFlavorMap() -> getSystemFlavorMap
    void setSystemFlavorMap(java.awt.datatransfer.SystemFlavorMap) -> setSystemFlavorMap
    org.apache.harmony.awt.datatransfer.NativeClipboard getNativeClipboard() -> getNativeClipboard
    org.apache.harmony.awt.datatransfer.NativeClipboard getNativeSelection() -> getNativeSelection
    org.apache.harmony.awt.datatransfer.NativeClipboard newNativeClipboard() -> newNativeClipboard
    org.apache.harmony.awt.datatransfer.NativeClipboard newNativeSelection() -> newNativeSelection
    void initDragAndDrop() -> initDragAndDrop
    void runEventLoop() -> runEventLoop
    java.awt.dnd.peer.DropTargetContextPeer createDropTargetContextPeer(java.awt.dnd.DropTargetContext) -> createDropTargetContextPeer
    java.awt.dnd.peer.DragSourceContextPeer createDragSourceContextPeer(java.awt.dnd.DragGestureEvent) -> createDragSourceContextPeer
    org.apache.harmony.awt.datatransfer.DTK createDTK() -> createDTK
    java.lang.String getDefaultCharset() -> getDefaultCharset
    java.lang.String[] getCharsets() -> getCharsets
    void initSystemFlavorMap(java.awt.datatransfer.SystemFlavorMap) -> initSystemFlavorMap
    void appendSystemFlavorMap(java.awt.datatransfer.SystemFlavorMap,java.awt.datatransfer.DataFlavor,java.lang.String) -> appendSystemFlavorMap
    void appendSystemFlavorMap(java.awt.datatransfer.SystemFlavorMap,java.lang.String[],java.lang.String,java.lang.String) -> appendSystemFlavorMap
org.apache.harmony.awt.datatransfer.DataProvider -> org.apache.harmony.awt.datatransfer.DataProvider:
    java.lang.String FORMAT_TEXT -> FORMAT_TEXT
    java.lang.String FORMAT_FILE_LIST -> FORMAT_FILE_LIST
    java.lang.String FORMAT_URL -> FORMAT_URL
    java.lang.String FORMAT_HTML -> FORMAT_HTML
    java.lang.String FORMAT_IMAGE -> FORMAT_IMAGE
    java.lang.String TYPE_IMAGE -> TYPE_IMAGE
    java.lang.String TYPE_SERIALIZED -> TYPE_SERIALIZED
    java.lang.String TYPE_PLAINTEXT -> TYPE_PLAINTEXT
    java.lang.String TYPE_HTML -> TYPE_HTML
    java.lang.String TYPE_URL -> TYPE_URL
    java.lang.String TYPE_TEXTENCODING -> TYPE_TEXTENCODING
    java.lang.String TYPE_FILELIST -> TYPE_FILELIST
    java.lang.String TYPE_URILIST -> TYPE_URILIST
    java.awt.datatransfer.DataFlavor urlFlavor -> urlFlavor
    java.awt.datatransfer.DataFlavor uriFlavor -> uriFlavor
    java.lang.String[] getNativeFormats() -> getNativeFormats
    boolean isNativeFormatAvailable(java.lang.String) -> isNativeFormatAvailable
    java.lang.String getText() -> getText
    java.lang.String[] getFileList() -> getFileList
    java.lang.String getURL() -> getURL
    java.lang.String getHTML() -> getHTML
    org.apache.harmony.awt.datatransfer.RawBitmap getRawBitmap() -> getRawBitmap
    byte[] getSerializedObject(java.lang.Class) -> getSerializedObject
org.apache.harmony.awt.datatransfer.DataProxy -> org.apache.harmony.awt.datatransfer.DataProxy:
    java.lang.Class[] unicodeTextClasses -> unicodeTextClasses
    java.lang.Class[] charsetTextClasses -> charsetTextClasses
    org.apache.harmony.awt.datatransfer.DataProvider data -> data
    java.awt.datatransfer.SystemFlavorMap flavorMap -> flavorMap
    org.apache.harmony.awt.datatransfer.DataProvider getDataProvider() -> getDataProvider
    java.lang.Object getTransferData(java.awt.datatransfer.DataFlavor) -> getTransferData
    java.awt.datatransfer.DataFlavor[] getTransferDataFlavors() -> getTransferDataFlavors
    boolean isDataFlavorSupported(java.awt.datatransfer.DataFlavor) -> isDataFlavorSupported
    java.lang.Object getPlainText(java.awt.datatransfer.DataFlavor) -> getPlainText
    java.lang.Object getFileList(java.awt.datatransfer.DataFlavor) -> getFileList
    java.lang.Object getHTML(java.awt.datatransfer.DataFlavor) -> getHTML
    java.lang.Object getURL(java.awt.datatransfer.DataFlavor) -> getURL
    java.lang.Object getSerializedObject(java.awt.datatransfer.DataFlavor) -> getSerializedObject
    java.lang.String getCharset(java.awt.datatransfer.DataFlavor) -> getCharset
    java.lang.Object getTextRepresentation(java.lang.String,java.awt.datatransfer.DataFlavor) -> getTextRepresentation
    java.awt.Image getImage(java.awt.datatransfer.DataFlavor) -> getImage
    boolean isRGB(org.apache.harmony.awt.datatransfer.RawBitmap) -> isRGB
    boolean isBGR(org.apache.harmony.awt.datatransfer.RawBitmap) -> isBGR
    java.awt.image.BufferedImage createBufferedImage(org.apache.harmony.awt.datatransfer.RawBitmap) -> createBufferedImage
org.apache.harmony.awt.datatransfer.DataSnapshot -> org.apache.harmony.awt.datatransfer.DataSnapshot:
    java.lang.String text -> text
    java.lang.String[] fileList -> fileList
    java.lang.String url -> url
    java.lang.String html -> html
    org.apache.harmony.awt.datatransfer.RawBitmap rawBitmap -> rawBitmap
    java.lang.String[] nativeFormats -> nativeFormats
    java.util.Map serializedObjects -> serializedObjects
    boolean isNativeFormatAvailable(java.lang.String) -> isNativeFormatAvailable
    java.lang.String getText() -> getText
    java.lang.String[] getFileList() -> getFileList
    java.lang.String getURL() -> getURL
    java.lang.String getHTML() -> getHTML
    org.apache.harmony.awt.datatransfer.RawBitmap getRawBitmap() -> getRawBitmap
    int[] getRawBitmapHeader() -> getRawBitmapHeader
    byte[] getRawBitmapBuffer8() -> getRawBitmapBuffer8
    short[] getRawBitmapBuffer16() -> getRawBitmapBuffer16
    int[] getRawBitmapBuffer32() -> getRawBitmapBuffer32
    byte[] getSerializedObject(java.lang.Class) -> getSerializedObject
    byte[] getSerializedObject(java.lang.String) -> getSerializedObject
    java.lang.String[] getNativeFormats() -> getNativeFormats
org.apache.harmony.awt.datatransfer.DataSource -> org.apache.harmony.awt.datatransfer.DataSource:
    java.awt.datatransfer.DataFlavor[] flavors -> flavors
    java.util.List nativeFormats -> nativeFormats
    java.awt.datatransfer.Transferable contents -> contents
    boolean isHtmlFlavor(java.awt.datatransfer.DataFlavor) -> isHtmlFlavor
    java.awt.datatransfer.DataFlavor[] getDataFlavors() -> getDataFlavors
    java.lang.String[] getNativeFormats() -> getNativeFormats
    java.util.List getNativeFormatsList() -> getNativeFormatsList
    java.util.List getNativesForFlavors(java.awt.datatransfer.DataFlavor[]) -> getNativesForFlavors
    java.lang.String getTextFromReader(java.io.Reader) -> getTextFromReader
    java.lang.String getText(boolean) -> getText
    java.lang.String getText() -> getText
    java.lang.String[] getFileList() -> getFileList
    java.lang.String getURL() -> getURL
    java.lang.String getHTML() -> getHTML
    org.apache.harmony.awt.datatransfer.RawBitmap getRawBitmap() -> getRawBitmap
    org.apache.harmony.awt.datatransfer.RawBitmap getImageBitmap(java.awt.Image) -> getImageBitmap
    org.apache.harmony.awt.datatransfer.RawBitmap getImageBitmap32(java.awt.image.BufferedImage) -> getImageBitmap32
    byte[] getSerializedObject(java.lang.Class) -> getSerializedObject
    boolean isNativeFormatAvailable(java.lang.String) -> isNativeFormatAvailable
org.apache.harmony.awt.datatransfer.DataTransferThread -> org.apache.harmony.awt.datatransfer.DataTransferThread:
    org.apache.harmony.awt.datatransfer.DTK dtk -> dtk
    void run() -> run
    void start() -> start
org.apache.harmony.awt.datatransfer.DragSourceEventProxy -> org.apache.harmony.awt.datatransfer.DragSourceEventProxy:
    int DRAG_ENTER -> DRAG_ENTER
    int DRAG_OVER -> DRAG_OVER
    int DRAG_ACTION_CHANGED -> DRAG_ACTION_CHANGED
    int DRAG_MOUSE_MOVED -> DRAG_MOUSE_MOVED
    int DRAG_EXIT -> DRAG_EXIT
    int DRAG_DROP_END -> DRAG_DROP_END
    java.awt.dnd.DragSourceContext context -> context
    int type -> type
    int userAction -> userAction
    int targetActions -> targetActions
    int x -> x
    int y -> y
    int modifiers -> modifiers
    boolean success -> success
    void run() -> run
    java.awt.dnd.DragSourceDragEvent newDragSourceDragEvent() -> newDragSourceDragEvent
org.apache.harmony.awt.datatransfer.FlavorsComparator -> org.apache.harmony.awt.datatransfer.FlavorsComparator:
    int compare(java.awt.datatransfer.DataFlavor,java.awt.datatransfer.DataFlavor) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
org.apache.harmony.awt.datatransfer.NativeClipboard -> org.apache.harmony.awt.datatransfer.NativeClipboard:
    int OPS_TIMEOUT -> OPS_TIMEOUT
    void onShutdown() -> onShutdown
    void onRestart() -> onRestart
org.apache.harmony.awt.datatransfer.RawBitmap -> org.apache.harmony.awt.datatransfer.RawBitmap:
    int width -> width
    int height -> height
    int stride -> stride
    int bits -> bits
    int rMask -> rMask
    int gMask -> gMask
    int bMask -> bMask
    java.lang.Object buffer -> buffer
    int[] getHeader() -> getHeader
org.apache.harmony.awt.datatransfer.TextFlavor -> org.apache.harmony.awt.datatransfer.TextFlavor:
    java.lang.Class[] unicodeTextClasses -> unicodeTextClasses
    java.lang.Class[] charsetTextClasses -> charsetTextClasses
    void addUnicodeClasses(java.awt.datatransfer.SystemFlavorMap,java.lang.String,java.lang.String) -> addUnicodeClasses
    void addCharsetClasses(java.awt.datatransfer.SystemFlavorMap,java.lang.String,java.lang.String,java.lang.String) -> addCharsetClasses
org.apache.harmony.awt.internal.nls.Messages -> org.apache.harmony.awt.internal.nls.Messages:
    java.util.ResourceBundle bundle -> bundle
    java.lang.String getString(java.lang.String) -> getString
    java.lang.String getString(java.lang.String,java.lang.Object) -> getString
    java.lang.String getString(java.lang.String,int) -> getString
    java.lang.String getString(java.lang.String,char) -> getString
    java.lang.String getString(java.lang.String,java.lang.Object,java.lang.Object) -> getString
    java.lang.String getString(java.lang.String,java.lang.Object[]) -> getString
    java.lang.String format(java.lang.String,java.lang.Object[]) -> format
    java.util.ResourceBundle setLocale(java.util.Locale,java.lang.String) -> setLocale
org.apache.harmony.awt.internal.nls.Messages$1 -> org.apache.harmony.awt.internal.nls.Messages$1:
    java.lang.String val$resource -> val$resource
    java.util.Locale val$locale -> val$locale
    java.lang.ClassLoader val$loader -> val$loader
    java.lang.Object run() -> run
org.apache.harmony.misc.SystemUtils -> org.apache.harmony.misc.SystemUtils:
    int OS_WINDOWS -> OS_WINDOWS
    int OS_LINUX -> OS_LINUX
    int OS_UNKNOWN -> OS_UNKNOWN
    int ARC_IA32 -> ARC_IA32
    int ARC_IA64 -> ARC_IA64
    int ARC_UNKNOWN -> ARC_UNKNOWN
    int os -> os
    int arc -> arc
    int getOS() -> getOS
